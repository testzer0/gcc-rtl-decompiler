
;; Function hashComputeByHashFunc (hashComputeByHashFunc, funcdef_no=5, decl_uid=3222, cgraph_uid=5, symbol_order=8)

hashComputeByHashFunc (const char * key)
{
  int temp;
  unsigned int hash;
  unsigned int D.3343;
  unsigned int _1;
  unsigned int temp.0_2;
  const char * key.1_3;
  char _4;
  unsigned int _12;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  hash_7 = 1;
  goto <bb 4>; [0.00%]
;;    succ:       4

;;   basic block 3, loop depth 1
;;    pred:       4
  _1 = hash_6 * 33;
  temp.0_2 = (unsigned int) temp_11;
  hash_13 = _1 + temp.0_2;
;;    succ:       4

;;   basic block 4, loop depth 1
;;    pred:       2
;;                3
  # key_5 = PHI <key_8(D)(2), key_9(3)>
  # hash_6 = PHI <hash_7(2), hash_13(3)>
  key.1_3 = key_5;
  key_9 = key.1_3 + 1;
  _4 = *key.1_3;
  temp_11 = (int) _4;
  if (temp_11 != 0)
    goto <bb 3>; [0.00%]
  else
    goto <bb 5>; [0.00%]
;;    succ:       3
;;                5

;;   basic block 5, loop depth 0
;;    pred:       4
  _12 = hash_6;
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       5
<L3> [0.00%]:
  return _12;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (temp.0_2 - 2 )
Partition 3 (key.1_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (key_5 - 5 )
Partition 6 (hash_6 - 6 )
Partition 7 (hash_7 - 7 )
Partition 8 (key_8(D) - 8 )
Partition 9 (key_9 - 9 )
Partition 11 (temp_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (hash_13 - 13 )
Partition 14 (_14(D) - 14 )


Partition map 

Partition 0 (key_5 - 5 )
Partition 1 (hash_6 - 6 )
Partition 2 (hash_7 - 7 )
Partition 3 (key_8(D) - 8 )
Partition 4 (key_9 - 9 )
Partition 5 (hash_13 - 13 )
Partition 6 (_14(D) - 14 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483647, 0) key_5 <-> key_8(D)
(2147483647, 0) key_5 <-> key_9
(2147483646, 0) hash_6 <-> hash_7
(2147483646, 0) hash_6 <-> hash_13

Partition map 

Partition 0 (key_5 - 5 )
Partition 1 (hash_6 - 6 )
Partition 2 (hash_7 - 7 )
Partition 3 (key_8(D) - 8 )
Partition 4 (key_9 - 9 )
Partition 5 (hash_13 - 13 )
Partition 6 (_14(D) - 14 )

Coalesce list: (5)key_5 & (8)key_8(D) [map: 0, 3] : Success -> 0
Coalesce list: (5)key_5 & (9)key_9 [map: 0, 4] : Success -> 0
Coalesce list: (6)hash_6 & (7)hash_7 [map: 1, 2] : Success -> 1
Coalesce list: (6)hash_6 & (13)hash_13 [map: 1, 5] : Success -> 1
Coalesce list: (6)hash_6 & (13)hash_6: Already Coalesced.
Coalesce list: (6)hash_6 & (7)hash_6: Already Coalesced.
Coalesce list: (5)key_5 & (9)key_5: Already Coalesced.
Coalesce list: (5)key_5 & (8)key_5: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (temp.0_2 - 2 )
Partition 2 (key.1_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (key_5 - 5 8 9 )
Partition 5 (hash_6 - 6 7 13 )
Partition 6 (temp_11 - 11 )
Partition 7 (_12 - 12 )
Partition 8 (_14(D) - 14 )

hashComputeByHashFunc (const char * key)
{
  int temp;
  unsigned int hash;
  unsigned int D.3343;
  unsigned int _1;
  unsigned int temp.0_2;
  const char * key.1_3;
  char _4;
  unsigned int _12;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  hash_7 = 1;
  goto <bb 4>; [0.00%]
;;    succ:       4

;;   basic block 3, loop depth 1
;;    pred:       4
  _1 = hash_6 * 33;
  temp.0_2 = (unsigned int) temp_11;
  hash_13 = _1 + temp.0_2;
;;    succ:       4

;;   basic block 4, loop depth 1
;;    pred:       2
;;                3
  # key_5 = PHI <key_8(D)(2), key_9(3)>
  # hash_6 = PHI <hash_7(2), hash_13(3)>
  key.1_3 = key_5;
  key_9 = key.1_3 + 1;
  _4 = *key.1_3;
  temp_11 = (int) _4;
  if (temp_11 != 0)
    goto <bb 3>; [0.00%]
  else
    goto <bb 5>; [0.00%]
;;    succ:       3
;;                5

;;   basic block 5, loop depth 0
;;    pred:       4
  _12 = hash_6;
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       5
<L3> [0.00%]:
  return _12;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; hash_7 = 1;

(insn 6 5 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 hash+0 S4 A32])
        (const_int 1 [0x1])) "test1.c":31 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _1 = hash_6 * 33;

(insn 10 9 11 (set (reg:SI 93)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 hash+0 S4 A32])) "test1.c":35 -1
     (nil))

(insn 11 10 12 (set (reg:SI 94)
        (reg:SI 93)) "test1.c":35 -1
     (nil))

(insn 12 11 13 (parallel [
            (set (reg:SI 95)
                (ashift:SI (reg:SI 94)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":35 -1
     (nil))

(insn 13 12 14 (set (reg:SI 94)
        (reg:SI 95)) "test1.c":35 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 93)
            (const_int 32 [0x20]))
        (nil)))

(insn 14 13 0 (parallel [
            (set (reg:SI 87 [ _1 ])
                (plus:SI (reg:SI 94)
                    (reg:SI 93)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":35 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 93)
            (const_int 33 [0x21]))
        (nil)))

;; temp.0_2 = (unsigned int) temp_11;

(insn 15 14 0 (set (reg:SI 88 [ temp.0_2 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 temp+0 S4 A32])) "test1.c":35 -1
     (nil))

;; hash_13 = _1 + temp.0_2;

(insn 16 15 17 (parallel [
            (set (reg:SI 96)
                (plus:SI (reg:SI 87 [ _1 ])
                    (reg:SI 88 [ temp.0_2 ])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":35 -1
     (nil))

(insn 17 16 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 hash+0 S4 A32])
        (reg:SI 96)) "test1.c":35 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 18 17 19 2 (nil) [0 uses])

(note 19 18 0 NOTE_INSN_BASIC_BLOCK)

;; key.1_3 = key_5;

(insn 20 19 0 (set (reg/f:DI 89 [ key.1_3 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 key+0 S8 A64])) "test1.c":33 -1
     (nil))

;; key_9 = key.1_3 + 1;

(insn 21 20 22 (parallel [
            (set (reg:DI 97)
                (plus:DI (reg/f:DI 89 [ key.1_3 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":33 -1
     (nil))

(insn 22 21 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 key+0 S8 A64])
        (reg:DI 97)) "test1.c":33 -1
     (nil))

;; _4 = *key.1_3;

(insn 23 22 0 (set (reg:QI 90 [ _4 ])
        (mem:QI (reg/f:DI 89 [ key.1_3 ]) [0 *key.1_3+0 S1 A8])) "test1.c":33 -1
     (nil))

;; temp_11 = (int) _4;

(insn 24 23 25 (set (reg:SI 98)
        (sign_extend:SI (reg:QI 90 [ _4 ]))) "test1.c":33 -1
     (nil))

(insn 25 24 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 temp+0 S4 A32])
        (reg:SI 98)) "test1.c":33 -1
     (nil))

;; if (temp_11 != 0)

(insn 27 25 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 temp+0 S4 A32])
            (const_int 0 [0]))) "test1.c":33 -1
     (nil))

(jump_insn 28 27 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) "test1.c":33 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; _12 = hash_6;

(insn 30 29 0 (set (reg:SI 91 [ _12 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 hash+0 S4 A32])) "test1.c":37 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; <L3> [0.00%]:

(code_label 31 30 32 4 (nil) [0 uses])

(note 32 31 0 NOTE_INSN_BASIC_BLOCK)

;; return _12;

(insn 33 32 34 (set (reg:SI 92 [ <retval> ])
        (reg:SI 91 [ _12 ])) "test1.c":37 -1
     (nil))

(jump_insn 34 33 35 (set (pc)
        (label_ref 0)) "test1.c":37 -1
     (nil))

(barrier 35 34 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.
Removing jump 34.
Merging block 8 into block 6...
Merged blocks 6 and 8.
Merged 6 and 8 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 key+0 S8 A64])
        (reg:DI 5 di [ key ])) "test1.c":30 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 hash+0 S4 A32])
        (const_int 1 [0x1])) "test1.c":31 -1
     (nil))
(jump_insn 7 6 8 2 (set (pc)
        (label_ref 18)) "test1.c":33 -1
     (nil)
 -> 18)
;;  succ:       5

(barrier 8 7 26)
;; basic block 4, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
(code_label 26 8 9 4 3 (nil) [1 uses])
(note 9 26 10 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 4 (set (reg:SI 93)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 hash+0 S4 A32])) "test1.c":35 -1
     (nil))
(insn 11 10 12 4 (set (reg:SI 94)
        (reg:SI 93)) "test1.c":35 -1
     (nil))
(insn 12 11 13 4 (parallel [
            (set (reg:SI 95)
                (ashift:SI (reg:SI 94)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":35 -1
     (nil))
(insn 13 12 14 4 (set (reg:SI 94)
        (reg:SI 95)) "test1.c":35 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 93)
            (const_int 32 [0x20]))
        (nil)))
(insn 14 13 15 4 (parallel [
            (set (reg:SI 87 [ _1 ])
                (plus:SI (reg:SI 94)
                    (reg:SI 93)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":35 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 93)
            (const_int 33 [0x21]))
        (nil)))
(insn 15 14 16 4 (set (reg:SI 88 [ temp.0_2 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 temp+0 S4 A32])) "test1.c":35 -1
     (nil))
(insn 16 15 17 4 (parallel [
            (set (reg:SI 96)
                (plus:SI (reg:SI 87 [ _1 ])
                    (reg:SI 88 [ temp.0_2 ])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":35 -1
     (nil))
(insn 17 16 18 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 hash+0 S4 A32])
        (reg:SI 96)) "test1.c":35 -1
     (nil))
;;  succ:       5 (FALLTHRU,DFS_BACK)

;; basic block 5, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              4 (FALLTHRU,DFS_BACK)
(code_label 18 17 19 5 2 (nil) [1 uses])
(note 19 18 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 5 (set (reg/f:DI 89 [ key.1_3 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 key+0 S8 A64])) "test1.c":33 -1
     (nil))
(insn 21 20 22 5 (parallel [
            (set (reg:DI 97)
                (plus:DI (reg/f:DI 89 [ key.1_3 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":33 -1
     (nil))
(insn 22 21 23 5 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 key+0 S8 A64])
        (reg:DI 97)) "test1.c":33 -1
     (nil))
(insn 23 22 24 5 (set (reg:QI 90 [ _4 ])
        (mem:QI (reg/f:DI 89 [ key.1_3 ]) [0 *key.1_3+0 S1 A8])) "test1.c":33 -1
     (nil))
(insn 24 23 25 5 (set (reg:SI 98)
        (sign_extend:SI (reg:QI 90 [ _4 ]))) "test1.c":33 -1
     (nil))
(insn 25 24 27 5 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 temp+0 S4 A32])
        (reg:SI 98)) "test1.c":33 -1
     (nil))
(insn 27 25 28 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 temp+0 S4 A32])
            (const_int 0 [0]))) "test1.c":33 -1
     (nil))
(jump_insn 28 27 29 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) "test1.c":33 -1
     (nil)
 -> 26)
;;  succ:       4
;;              6 (FALLTHRU)

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
(note 29 28 30 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 33 6 (set (reg:SI 91 [ _12 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 hash+0 S4 A32])) "test1.c":37 -1
     (nil))
(insn 33 30 37 6 (set (reg:SI 92 [ <retval> ])
        (reg:SI 91 [ _12 ])) "test1.c":37 -1
     (nil))
(insn 37 33 38 6 (set (reg/i:SI 0 ax)
        (reg:SI 92 [ <retval> ])) "test1.c":38 -1
     (nil))
(insn 38 37 0 6 (use (reg/i:SI 0 ax)) "test1.c":38 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function hashTableInsertFunc (hashTableInsertFunc, funcdef_no=6, decl_uid=3232, cgraph_uid=6, symbol_order=9)

hashTableInsertFunc (const char * key, int value, int index)
{
  struct Node * NewNode;
  unsigned int poscheck;
  unsigned int pos;
  long unsigned int _1;
  long unsigned int _2;
  void * _3;
  char * _4;
  unsigned int _5;
  struct Node * _6;
  struct Node * _7;
  int _8;
  struct Node * _9;
  int _10;
  int _11;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  NewNode_15 = malloc (24);
  memset (NewNode_15, 0, 24);
  _1 = strlen (key_17(D));
  _2 = _1 + 1;
  _3 = malloc (_2);
  NewNode_15->Key = _3;
  _4 = NewNode_15->Key;
  strcpy (_4, key_17(D));
  NewNode_15->Value = value_21(D);
  _5 = hashComputeByHashFunc (key_17(D));
  pos_24 = _5 % 100000;
  poscheck_25 = pos_24;
  goto <bb 4>; [0.00%]
;;    succ:       4

;;   basic block 3, loop depth 1
;;    pred:       5
  poscheck_27 = poscheck_12 + 1;
  poscheck_28 = poscheck_27 % 100000;
;;    succ:       4

;;   basic block 4, loop depth 1
;;    pred:       2
;;                3
  # poscheck_12 = PHI <poscheck_25(2), poscheck_28(3)>
  _6 = hashTable[index_26(D)][poscheck_12];
  if (_6 != 0B)
    goto <bb 5>; [0.00%]
  else
    goto <bb 6>; [0.00%]
;;    succ:       5
;;                6

;;   basic block 5, loop depth 1
;;    pred:       4
  _7 = hashTable[index_26(D)][poscheck_12];
  _8 = _7->Value;
  if (_8 != -1)
    goto <bb 3>; [0.00%]
  else
    goto <bb 6>; [0.00%]
;;    succ:       3
;;                6

;;   basic block 6, loop depth 0
;;    pred:       4
;;                5
  _9 = hashTable[index_26(D)][pos_24];
  NewNode_15->pNext = _9;
  hashTable[index_26(D)][pos_24] = NewNode_15;
  _10 = hash_size[index_26(D)];
  _11 = _10 + 1;
  hash_size[index_26(D)] = _11;
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (poscheck_12 - 12 )
Partition 15 (NewNode_15 - 15 )
Partition 17 (key_17(D) - 17 )
Partition 21 (value_21(D) - 21 )
Partition 24 (pos_24 - 24 )
Partition 25 (poscheck_25 - 25 )
Partition 26 (index_26(D) - 26 )
Partition 27 (poscheck_27 - 27 )
Partition 28 (poscheck_28 - 28 )


Partition map 

Partition 0 (poscheck_12 - 12 )
Partition 1 (key_17(D) - 17 )
Partition 2 (value_21(D) - 21 )
Partition 3 (poscheck_25 - 25 )
Partition 4 (index_26(D) - 26 )
Partition 5 (poscheck_27 - 27 )
Partition 6 (poscheck_28 - 28 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646, 0) poscheck_12 <-> poscheck_25
(2147483646, 0) poscheck_12 <-> poscheck_27
(2147483646, 0) poscheck_12 <-> poscheck_28

Partition map 

Partition 0 (poscheck_12 - 12 )
Partition 1 (key_17(D) - 17 )
Partition 2 (value_21(D) - 21 )
Partition 3 (poscheck_25 - 25 )
Partition 4 (index_26(D) - 26 )
Partition 5 (poscheck_27 - 27 )
Partition 6 (poscheck_28 - 28 )

Coalesce list: (12)poscheck_12 & (25)poscheck_25 [map: 0, 3] : Success -> 0
Coalesce list: (12)poscheck_12 & (27)poscheck_27 [map: 0, 5] : Success -> 0
Coalesce list: (12)poscheck_12 & (28)poscheck_28 [map: 0, 6] : Success -> 0
Coalesce list: (12)poscheck_12 & (28)poscheck_12: Already Coalesced.
Coalesce list: (12)poscheck_12 & (25)poscheck_12: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (_8 - 8 )
Partition 8 (_9 - 9 )
Partition 9 (_10 - 10 )
Partition 10 (_11 - 11 )
Partition 11 (poscheck_12 - 12 25 27 28 )
Partition 12 (NewNode_15 - 15 )
Partition 13 (key_17(D) - 17 )
Partition 14 (value_21(D) - 21 )
Partition 15 (pos_24 - 24 )
Partition 16 (index_26(D) - 26 )

hashTableInsertFunc (const char * key, int value, int index)
{
  struct Node * NewNode;
  unsigned int poscheck;
  unsigned int pos;
  long unsigned int _1;
  long unsigned int _2;
  void * _3;
  char * _4;
  unsigned int _5;
  struct Node * _6;
  struct Node * _7;
  int _8;
  struct Node * _9;
  int _10;
  int _11;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  NewNode_15 = malloc (24);
  memset (NewNode_15, 0, 24);
  _1 = strlen (key_17(D));
  _2 = _1 + 1;
  _3 = malloc (_2);
  NewNode_15->Key = _3;
  _4 = NewNode_15->Key;
  strcpy (_4, key_17(D));
  NewNode_15->Value = value_21(D);
  _5 = hashComputeByHashFunc (key_17(D));
  pos_24 = _5 % 100000;
  poscheck_25 = pos_24;
  goto <bb 4>; [0.00%]
;;    succ:       4

;;   basic block 3, loop depth 1
;;    pred:       5
  poscheck_27 = poscheck_12 + 1;
  poscheck_28 = poscheck_27 % 100000;
;;    succ:       4

;;   basic block 4, loop depth 1
;;    pred:       2
;;                3
  # poscheck_12 = PHI <poscheck_25(2), poscheck_28(3)>
  _6 = hashTable[index_26(D)][poscheck_12];
  if (_6 != 0B)
    goto <bb 5>; [0.00%]
  else
    goto <bb 6>; [0.00%]
;;    succ:       5
;;                6

;;   basic block 5, loop depth 1
;;    pred:       4
  _7 = hashTable[index_26(D)][poscheck_12];
  _8 = _7->Value;
  if (_8 != -1)
    goto <bb 3>; [0.00%]
  else
    goto <bb 6>; [0.00%]
;;    succ:       3
;;                6

;;   basic block 6, loop depth 0
;;    pred:       4
;;                5
  _9 = hashTable[index_26(D)][pos_24];
  NewNode_15->pNext = _9;
  hashTable[index_26(D)][pos_24] = NewNode_15;
  _10 = hash_size[index_26(D)];
  _11 = _10 + 1;
  hash_size[index_26(D)] = _11;
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; NewNode_15 = malloc (24);

(insn 8 7 9 (set (reg:DI 5 di)
        (const_int 24 [0x18])) "test1.c":44 -1
     (nil))

(call_insn 9 8 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7fa517d22300 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) "test1.c":44 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 10 9 11 (set (reg/f:DI 98)
        (reg:DI 0 ax)) "test1.c":44 -1
     (expr_list:REG_NOALIAS (reg/f:DI 98)
        (nil)))

(insn 11 10 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 NewNode+0 S8 A64])
        (reg/f:DI 98)) "test1.c":44 -1
     (nil))

;; memset (NewNode_15, 0, 24);

(insn 12 11 13 (set (reg:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 NewNode+0 S8 A64])) "test1.c":45 -1
     (nil))

(insn 13 12 14 (set (reg:DI 1 dx)
        (const_int 24 [0x18])) "test1.c":45 -1
     (nil))

(insn 14 13 15 (set (reg:SI 4 si)
        (const_int 0 [0])) "test1.c":45 -1
     (nil))

(insn 15 14 16 (set (reg:DI 5 di)
        (reg:DI 99)) "test1.c":45 -1
     (nil))

(call_insn 16 15 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x7fa517cf6f00 memset>) [0 __builtin_memset S1 A8])
            (const_int 0 [0]))) "test1.c":45 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))

;; _1 = strlen (key_17(D));

(insn 17 16 18 (set (reg:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 key+0 S8 A64])) "test1.c":46 -1
     (nil))

(insn 18 17 19 (set (reg:DI 5 di)
        (reg:DI 100)) "test1.c":46 -1
     (nil))

(call_insn/i 19 18 20 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x7fa517cf9700 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) "test1.c":46 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 20 19 0 (set (reg:DI 87 [ _1 ])
        (reg:DI 0 ax)) "test1.c":46 -1
     (nil))

;; _2 = _1 + 1;

(insn 21 20 0 (parallel [
            (set (reg:DI 88 [ _2 ])
                (plus:DI (reg:DI 87 [ _1 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":46 -1
     (nil))

;; _3 = malloc (_2);

(insn 22 21 23 (set (reg:DI 5 di)
        (reg:DI 88 [ _2 ])) "test1.c":46 -1
     (nil))

(call_insn 23 22 24 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7fa517d22300 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) "test1.c":46 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 24 23 25 (set (reg/f:DI 101)
        (reg:DI 0 ax)) "test1.c":46 -1
     (expr_list:REG_NOALIAS (reg/f:DI 101)
        (nil)))

(insn 25 24 0 (set (reg/f:DI 89 [ _3 ])
        (reg/f:DI 101)) "test1.c":46 -1
     (nil))

;; NewNode_15->Key = _3;

(insn 26 25 27 (set (reg/f:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 NewNode+0 S8 A64])) "test1.c":46 -1
     (nil))

(insn 27 26 0 (set (mem/f:DI (reg/f:DI 102) [3 NewNode_15->Key+0 S8 A64])
        (reg/f:DI 89 [ _3 ])) "test1.c":46 -1
     (nil))

;; _4 = NewNode_15->Key;

(insn 28 27 29 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 NewNode+0 S8 A64])) "test1.c":47 -1
     (nil))

(insn 29 28 0 (set (reg/f:DI 90 [ _4 ])
        (mem/f:DI (reg/f:DI 103) [3 NewNode_15->Key+0 S8 A64])) "test1.c":47 -1
     (nil))

;; strcpy (_4, key_17(D));

(insn 30 29 31 (set (reg:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 key+0 S8 A64])) "test1.c":47 -1
     (nil))

(insn 31 30 32 (set (reg:DI 4 si)
        (reg:DI 104)) "test1.c":47 -1
     (nil))

(insn 32 31 33 (set (reg:DI 5 di)
        (reg/f:DI 90 [ _4 ])) "test1.c":47 -1
     (nil))

(call_insn 33 32 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x7fa517cf7f00 strcpy>) [0 __builtin_strcpy S1 A8])
            (const_int 0 [0]))) "test1.c":47 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))

;; NewNode_15->Value = value_21(D);

(insn 34 33 35 (set (reg/f:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 NewNode+0 S8 A64])) "test1.c":48 -1
     (nil))

(insn 35 34 36 (set (reg:SI 106)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [1 value+0 S4 A32])) "test1.c":48 -1
     (nil))

(insn 36 35 0 (set (mem:SI (plus:DI (reg/f:DI 105)
                (const_int 8 [0x8])) [1 NewNode_15->Value+0 S4 A64])
        (reg:SI 106)) "test1.c":48 -1
     (nil))

;; _5 = hashComputeByHashFunc (key_17(D));

(insn 37 36 38 (set (reg:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 key+0 S8 A64])) "test1.c":50 -1
     (nil))

(insn 38 37 39 (set (reg:DI 5 di)
        (reg:DI 107)) "test1.c":50 -1
     (nil))

(call_insn 39 38 40 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("hashComputeByHashFunc") [flags 0x3]  <function_decl 0x7fa517a72a00 hashComputeByHashFunc>) [0 hashComputeByHashFunc S1 A8])
            (const_int 0 [0]))) "test1.c":50 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 40 39 0 (set (reg:SI 91 [ _5 ])
        (reg:SI 0 ax)) "test1.c":50 -1
     (nil))

;; pos_24 = _5 % 100000;

(insn 41 40 42 (parallel [
            (set (reg:SI 108)
                (lshiftrt:SI (reg:SI 91 [ _5 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":50 -1
     (nil))

(insn 42 41 43 (set (reg:SI 110)
        (const_int 175921861 [0xa7c5ac5])) "test1.c":50 -1
     (nil))

(insn 43 42 44 (parallel [
            (set (reg:SI 109)
                (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg:SI 108))
                            (zero_extend:DI (reg:SI 110)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":50 -1
     (nil))

(insn 44 43 45 (parallel [
            (set (reg:SI 111)
                (lshiftrt:SI (reg:SI 109)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":50 -1
     (nil))

(insn 45 44 46 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 pos+0 S4 A32])
        (reg:SI 111)) "test1.c":50 -1
     (nil))

(insn 46 45 47 (set (reg:SI 113)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 pos+0 S4 A32])) "test1.c":50 -1
     (nil))

(insn 47 46 48 (parallel [
            (set (reg:SI 112)
                (mult:SI (reg:SI 113)
                    (const_int 100000 [0x186a0])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":50 -1
     (nil))

(insn 48 47 49 (parallel [
            (set (reg:SI 114)
                (minus:SI (reg:SI 91 [ _5 ])
                    (reg:SI 112)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":50 -1
     (nil))

(insn 49 48 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 pos+0 S4 A32])
        (reg:SI 114)) "test1.c":50 -1
     (nil))

;; poscheck_25 = pos_24;

(insn 50 49 51 (set (reg:SI 115)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 pos+0 S4 A32])) "test1.c":51 -1
     (nil))

(insn 51 50 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 poscheck+0 S4 A32])
        (reg:SI 115)) "test1.c":51 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; poscheck_27 = poscheck_12 + 1;

(insn 55 54 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [1 poscheck+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [1 poscheck+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":55 -1
     (nil))

;; poscheck_28 = poscheck_27 % 100000;

(insn 56 55 57 (set (reg:SI 117)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 poscheck+0 S4 A32])) "test1.c":56 -1
     (nil))

(insn 57 56 58 (parallel [
            (set (reg:SI 118)
                (lshiftrt:SI (reg:SI 117)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":56 -1
     (nil))

(insn 58 57 59 (set (reg:SI 120)
        (const_int 175921861 [0xa7c5ac5])) "test1.c":56 -1
     (nil))

(insn 59 58 60 (parallel [
            (set (reg:SI 119)
                (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg:SI 118))
                            (zero_extend:DI (reg:SI 120)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":56 -1
     (nil))

(insn 60 59 61 (parallel [
            (set (reg:SI 116)
                (lshiftrt:SI (reg:SI 119)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":56 -1
     (expr_list:REG_EQUAL (udiv:SI (reg:SI 117)
            (const_int 100000 [0x186a0]))
        (nil)))

(insn 61 60 62 (parallel [
            (set (reg:SI 121)
                (mult:SI (reg:SI 116)
                    (const_int 100000 [0x186a0])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":56 -1
     (nil))

(insn 62 61 63 (parallel [
            (set (reg:SI 122)
                (minus:SI (reg:SI 117)
                    (reg:SI 121)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":56 -1
     (nil))

(insn 63 62 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 poscheck+0 S4 A32])
        (reg:SI 122)) "test1.c":56 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 64 63 65 6 (nil) [0 uses])

(note 65 64 0 NOTE_INSN_BASIC_BLOCK)
Applying pattern match.pd:84, generic-match.c:11461
Applying pattern match.pd:84, generic-match.c:11461
Applying pattern match.pd:84, generic-match.c:11461

;; _6 = hashTable[index_26(D)][poscheck_12];

(insn 66 65 67 (set (reg:DI 123)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 poscheck+0 S4 A32]))) "test1.c":53 -1
     (nil))

(insn 67 66 68 (set (reg:SI 125)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [1 index+0 S4 A32])) "test1.c":53 -1
     (nil))

(insn 68 67 69 (set (reg:DI 124)
        (sign_extend:DI (reg:SI 125))) "test1.c":53 -1
     (nil))

(insn 69 68 70 (parallel [
            (set (reg:DI 126)
                (mult:DI (reg:DI 124)
                    (const_int 100000 [0x186a0])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":53 -1
     (nil))

(insn 70 69 71 (parallel [
            (set (reg:DI 127)
                (plus:DI (reg:DI 126)
                    (reg:DI 123)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":53 -1
     (nil))

(insn 71 70 72 (parallel [
            (set (reg:DI 128)
                (ashift:DI (reg:DI 127)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":53 -1
     (nil))

(insn 72 71 73 (set (reg:DI 129)
        (symbol_ref:DI ("hashTable") [flags 0x2]  <var_decl 0x7fa517a76000 hashTable>)) "test1.c":53 -1
     (nil))

(insn 73 72 0 (set (reg/f:DI 92 [ _6 ])
        (mem/f:DI (plus:DI (reg:DI 128)
                (reg:DI 129)) [2 hashTable S8 A64])) "test1.c":53 -1
     (nil))

;; if (_6 != 0B)

(insn 74 73 75 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 92 [ _6 ])
            (const_int 0 [0]))) "test1.c":53 -1
     (nil))

(jump_insn 75 74 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "test1.c":53 -1
     (nil))

;; Generating RTL for gimple basic block 5
Applying pattern match.pd:84, generic-match.c:11461
Applying pattern match.pd:84, generic-match.c:11461
Applying pattern match.pd:84, generic-match.c:11461

;; _7 = hashTable[index_26(D)][poscheck_12];

(insn 77 76 78 (set (reg:DI 130)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 poscheck+0 S4 A32]))) "test1.c":53 -1
     (nil))

(insn 78 77 79 (set (reg:SI 132)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [1 index+0 S4 A32])) "test1.c":53 -1
     (nil))

(insn 79 78 80 (set (reg:DI 131)
        (sign_extend:DI (reg:SI 132))) "test1.c":53 -1
     (nil))

(insn 80 79 81 (parallel [
            (set (reg:DI 133)
                (mult:DI (reg:DI 131)
                    (const_int 100000 [0x186a0])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":53 -1
     (nil))

(insn 81 80 82 (parallel [
            (set (reg:DI 134)
                (plus:DI (reg:DI 133)
                    (reg:DI 130)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":53 -1
     (nil))

(insn 82 81 83 (parallel [
            (set (reg:DI 135)
                (ashift:DI (reg:DI 134)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":53 -1
     (nil))

(insn 83 82 84 (set (reg:DI 136)
        (symbol_ref:DI ("hashTable") [flags 0x2]  <var_decl 0x7fa517a76000 hashTable>)) "test1.c":53 -1
     (nil))

(insn 84 83 0 (set (reg/f:DI 93 [ _7 ])
        (mem/f:DI (plus:DI (reg:DI 135)
                (reg:DI 136)) [2 hashTable S8 A64])) "test1.c":53 -1
     (nil))

;; _8 = _7->Value;

(insn 85 84 0 (set (reg:SI 94 [ _8 ])
        (mem:SI (plus:DI (reg/f:DI 93 [ _7 ])
                (const_int 8 [0x8])) [1 _7->Value+0 S4 A64])) "test1.c":53 -1
     (nil))

;; if (_8 != -1)

(insn 87 85 88 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 94 [ _8 ])
            (const_int -1 [0xffffffffffffffff]))) "test1.c":53 -1
     (nil))

(jump_insn 88 87 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 86)
            (pc))) "test1.c":53 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 89 88 90 7 (nil) [0 uses])

(note 90 89 0 NOTE_INSN_BASIC_BLOCK)
Applying pattern match.pd:84, generic-match.c:11461
Applying pattern match.pd:84, generic-match.c:11461
Applying pattern match.pd:84, generic-match.c:11461

;; _9 = hashTable[index_26(D)][pos_24];

(insn 91 90 92 (set (reg:DI 137)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 pos+0 S4 A32]))) "test1.c":58 -1
     (nil))

(insn 92 91 93 (set (reg:SI 139)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [1 index+0 S4 A32])) "test1.c":58 -1
     (nil))

(insn 93 92 94 (set (reg:DI 138)
        (sign_extend:DI (reg:SI 139))) "test1.c":58 -1
     (nil))

(insn 94 93 95 (parallel [
            (set (reg:DI 140)
                (mult:DI (reg:DI 138)
                    (const_int 100000 [0x186a0])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":58 -1
     (nil))

(insn 95 94 96 (parallel [
            (set (reg:DI 141)
                (plus:DI (reg:DI 140)
                    (reg:DI 137)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":58 -1
     (nil))

(insn 96 95 97 (parallel [
            (set (reg:DI 142)
                (ashift:DI (reg:DI 141)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":58 -1
     (nil))

(insn 97 96 98 (set (reg:DI 143)
        (symbol_ref:DI ("hashTable") [flags 0x2]  <var_decl 0x7fa517a76000 hashTable>)) "test1.c":58 -1
     (nil))

(insn 98 97 0 (set (reg/f:DI 95 [ _9 ])
        (mem/f:DI (plus:DI (reg:DI 142)
                (reg:DI 143)) [2 hashTable S8 A64])) "test1.c":58 -1
     (nil))

;; NewNode_15->pNext = _9;

(insn 99 98 100 (set (reg/f:DI 144)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 NewNode+0 S8 A64])) "test1.c":58 -1
     (nil))

(insn 100 99 0 (set (mem/f:DI (plus:DI (reg/f:DI 144)
                (const_int 16 [0x10])) [2 NewNode_15->pNext+0 S8 A64])
        (reg/f:DI 95 [ _9 ])) "test1.c":58 -1
     (nil))
Applying pattern match.pd:84, generic-match.c:11461
Applying pattern match.pd:84, generic-match.c:11461
Applying pattern match.pd:84, generic-match.c:11461

;; hashTable[index_26(D)][pos_24] = NewNode_15;

(insn 101 100 102 (set (reg:DI 145)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 pos+0 S4 A32]))) "test1.c":59 -1
     (nil))

(insn 102 101 103 (set (reg:SI 147)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [1 index+0 S4 A32])) "test1.c":59 -1
     (nil))

(insn 103 102 104 (set (reg:DI 146)
        (sign_extend:DI (reg:SI 147))) "test1.c":59 -1
     (nil))

(insn 104 103 105 (parallel [
            (set (reg:DI 148)
                (mult:DI (reg:DI 146)
                    (const_int 100000 [0x186a0])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":59 -1
     (nil))

(insn 105 104 106 (parallel [
            (set (reg:DI 149)
                (plus:DI (reg:DI 148)
                    (reg:DI 145)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":59 -1
     (nil))

(insn 106 105 107 (parallel [
            (set (reg:DI 150)
                (ashift:DI (reg:DI 149)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":59 -1
     (nil))

(insn 107 106 108 (set (reg:DI 151)
        (symbol_ref:DI ("hashTable") [flags 0x2]  <var_decl 0x7fa517a76000 hashTable>)) "test1.c":59 -1
     (nil))

(insn 108 107 109 (set (reg/f:DI 152)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 NewNode+0 S8 A64])) "test1.c":59 -1
     (nil))

(insn 109 108 0 (set (mem/f:DI (plus:DI (reg:DI 150)
                (reg:DI 151)) [2 hashTable S8 A64])
        (reg/f:DI 152)) "test1.c":59 -1
     (nil))
Applying pattern match.pd:84, generic-match.c:11461
Applying pattern match.pd:84, generic-match.c:11461
Applying pattern match.pd:84, generic-match.c:11461

;; _10 = hash_size[index_26(D)];

(insn 110 109 111 (set (reg:SI 154)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [1 index+0 S4 A32])) "test1.c":61 -1
     (nil))

(insn 111 110 112 (set (reg:DI 153)
        (sign_extend:DI (reg:SI 154))) "test1.c":61 -1
     (nil))

(insn 112 111 113 (parallel [
            (set (reg:DI 155)
                (ashift:DI (reg:DI 153)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":61 -1
     (nil))

(insn 113 112 114 (set (reg:DI 156)
        (symbol_ref:DI ("hash_size") [flags 0x2]  <var_decl 0x7fa517daaf30 hash_size>)) "test1.c":61 -1
     (nil))

(insn 114 113 0 (set (reg:SI 96 [ _10 ])
        (mem:SI (plus:DI (reg:DI 155)
                (reg:DI 156)) [1 hash_size S4 A32])) "test1.c":61 -1
     (nil))

;; _11 = _10 + 1;

(insn 115 114 0 (parallel [
            (set (reg:SI 97 [ _11 ])
                (plus:SI (reg:SI 96 [ _10 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":61 -1
     (nil))
Applying pattern match.pd:84, generic-match.c:11461
Applying pattern match.pd:84, generic-match.c:11461
Applying pattern match.pd:84, generic-match.c:11461

;; hash_size[index_26(D)] = _11;

(insn 116 115 117 (set (reg:SI 158)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [1 index+0 S4 A32])) "test1.c":61 -1
     (nil))

(insn 117 116 118 (set (reg:DI 157)
        (sign_extend:DI (reg:SI 158))) "test1.c":61 -1
     (nil))

(insn 118 117 119 (parallel [
            (set (reg:DI 159)
                (ashift:DI (reg:DI 157)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":61 -1
     (nil))

(insn 119 118 120 (set (reg:DI 160)
        (symbol_ref:DI ("hash_size") [flags 0x2]  <var_decl 0x7fa517daaf30 hash_size>)) "test1.c":61 -1
     (nil))

(insn 120 119 0 (set (mem:SI (plus:DI (reg:DI 159)
                (reg:DI 160)) [1 hash_size S4 A32])
        (reg:SI 97 [ _11 ])) "test1.c":61 -1
     (nil))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 8 into block 7...
Merged blocks 7 and 8.
Merged 7 and 8 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 key+0 S8 A64])
        (reg:DI 5 di [ key ])) "test1.c":42 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [1 value+0 S4 A32])
        (reg:SI 4 si [ value ])) "test1.c":42 -1
     (nil))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [1 index+0 S4 A32])
        (reg:SI 1 dx [ index ])) "test1.c":42 -1
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:DI 5 di)
        (const_int 24 [0x18])) "test1.c":44 -1
     (nil))
(call_insn 9 8 10 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7fa517d22300 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) "test1.c":44 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 10 9 11 2 (set (reg/f:DI 98)
        (reg:DI 0 ax)) "test1.c":44 -1
     (expr_list:REG_NOALIAS (reg/f:DI 98)
        (nil)))
(insn 11 10 12 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 NewNode+0 S8 A64])
        (reg/f:DI 98)) "test1.c":44 -1
     (nil))
(insn 12 11 13 2 (set (reg:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 NewNode+0 S8 A64])) "test1.c":45 -1
     (nil))
(insn 13 12 14 2 (set (reg:DI 1 dx)
        (const_int 24 [0x18])) "test1.c":45 -1
     (nil))
(insn 14 13 15 2 (set (reg:SI 4 si)
        (const_int 0 [0])) "test1.c":45 -1
     (nil))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (reg:DI 99)) "test1.c":45 -1
     (nil))
(call_insn 16 15 17 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x7fa517cf6f00 memset>) [0 __builtin_memset S1 A8])
            (const_int 0 [0]))) "test1.c":45 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 17 16 18 2 (set (reg:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 key+0 S8 A64])) "test1.c":46 -1
     (nil))
(insn 18 17 19 2 (set (reg:DI 5 di)
        (reg:DI 100)) "test1.c":46 -1
     (nil))
(call_insn/i 19 18 20 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x7fa517cf9700 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) "test1.c":46 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 20 19 21 2 (set (reg:DI 87 [ _1 ])
        (reg:DI 0 ax)) "test1.c":46 -1
     (nil))
(insn 21 20 22 2 (parallel [
            (set (reg:DI 88 [ _2 ])
                (plus:DI (reg:DI 87 [ _1 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":46 -1
     (nil))
(insn 22 21 23 2 (set (reg:DI 5 di)
        (reg:DI 88 [ _2 ])) "test1.c":46 -1
     (nil))
(call_insn 23 22 24 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7fa517d22300 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) "test1.c":46 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 24 23 25 2 (set (reg/f:DI 101)
        (reg:DI 0 ax)) "test1.c":46 -1
     (expr_list:REG_NOALIAS (reg/f:DI 101)
        (nil)))
(insn 25 24 26 2 (set (reg/f:DI 89 [ _3 ])
        (reg/f:DI 101)) "test1.c":46 -1
     (nil))
(insn 26 25 27 2 (set (reg/f:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 NewNode+0 S8 A64])) "test1.c":46 -1
     (nil))
(insn 27 26 28 2 (set (mem/f:DI (reg/f:DI 102) [3 NewNode_15->Key+0 S8 A64])
        (reg/f:DI 89 [ _3 ])) "test1.c":46 -1
     (nil))
(insn 28 27 29 2 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 NewNode+0 S8 A64])) "test1.c":47 -1
     (nil))
(insn 29 28 30 2 (set (reg/f:DI 90 [ _4 ])
        (mem/f:DI (reg/f:DI 103) [3 NewNode_15->Key+0 S8 A64])) "test1.c":47 -1
     (nil))
(insn 30 29 31 2 (set (reg:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 key+0 S8 A64])) "test1.c":47 -1
     (nil))
(insn 31 30 32 2 (set (reg:DI 4 si)
        (reg:DI 104)) "test1.c":47 -1
     (nil))
(insn 32 31 33 2 (set (reg:DI 5 di)
        (reg/f:DI 90 [ _4 ])) "test1.c":47 -1
     (nil))
(call_insn 33 32 34 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x7fa517cf7f00 strcpy>) [0 __builtin_strcpy S1 A8])
            (const_int 0 [0]))) "test1.c":47 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 34 33 35 2 (set (reg/f:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 NewNode+0 S8 A64])) "test1.c":48 -1
     (nil))
(insn 35 34 36 2 (set (reg:SI 106)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [1 value+0 S4 A32])) "test1.c":48 -1
     (nil))
(insn 36 35 37 2 (set (mem:SI (plus:DI (reg/f:DI 105)
                (const_int 8 [0x8])) [1 NewNode_15->Value+0 S4 A64])
        (reg:SI 106)) "test1.c":48 -1
     (nil))
(insn 37 36 38 2 (set (reg:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 key+0 S8 A64])) "test1.c":50 -1
     (nil))
(insn 38 37 39 2 (set (reg:DI 5 di)
        (reg:DI 107)) "test1.c":50 -1
     (nil))
(call_insn 39 38 40 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("hashComputeByHashFunc") [flags 0x3]  <function_decl 0x7fa517a72a00 hashComputeByHashFunc>) [0 hashComputeByHashFunc S1 A8])
            (const_int 0 [0]))) "test1.c":50 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 40 39 41 2 (set (reg:SI 91 [ _5 ])
        (reg:SI 0 ax)) "test1.c":50 -1
     (nil))
(insn 41 40 42 2 (parallel [
            (set (reg:SI 108)
                (lshiftrt:SI (reg:SI 91 [ _5 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":50 -1
     (nil))
(insn 42 41 43 2 (set (reg:SI 110)
        (const_int 175921861 [0xa7c5ac5])) "test1.c":50 -1
     (nil))
(insn 43 42 44 2 (parallel [
            (set (reg:SI 109)
                (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg:SI 108))
                            (zero_extend:DI (reg:SI 110)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":50 -1
     (nil))
(insn 44 43 45 2 (parallel [
            (set (reg:SI 111)
                (lshiftrt:SI (reg:SI 109)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":50 -1
     (nil))
(insn 45 44 46 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 pos+0 S4 A32])
        (reg:SI 111)) "test1.c":50 -1
     (nil))
(insn 46 45 47 2 (set (reg:SI 113)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 pos+0 S4 A32])) "test1.c":50 -1
     (nil))
(insn 47 46 48 2 (parallel [
            (set (reg:SI 112)
                (mult:SI (reg:SI 113)
                    (const_int 100000 [0x186a0])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":50 -1
     (nil))
(insn 48 47 49 2 (parallel [
            (set (reg:SI 114)
                (minus:SI (reg:SI 91 [ _5 ])
                    (reg:SI 112)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":50 -1
     (nil))
(insn 49 48 50 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 pos+0 S4 A32])
        (reg:SI 114)) "test1.c":50 -1
     (nil))
(insn 50 49 51 2 (set (reg:SI 115)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 pos+0 S4 A32])) "test1.c":51 -1
     (nil))
(insn 51 50 52 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 poscheck+0 S4 A32])
        (reg:SI 115)) "test1.c":51 -1
     (nil))
(jump_insn 52 51 53 2 (set (pc)
        (label_ref 64)) "test1.c":53 -1
     (nil)
 -> 64)
;;  succ:       5

(barrier 53 52 86)
;; basic block 4, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       6
(code_label 86 53 54 4 8 (nil) [1 uses])
(note 54 86 55 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 4 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [1 poscheck+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [1 poscheck+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":55 -1
     (nil))
(insn 56 55 57 4 (set (reg:SI 117)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 poscheck+0 S4 A32])) "test1.c":56 -1
     (nil))
(insn 57 56 58 4 (parallel [
            (set (reg:SI 118)
                (lshiftrt:SI (reg:SI 117)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":56 -1
     (nil))
(insn 58 57 59 4 (set (reg:SI 120)
        (const_int 175921861 [0xa7c5ac5])) "test1.c":56 -1
     (nil))
(insn 59 58 60 4 (parallel [
            (set (reg:SI 119)
                (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg:SI 118))
                            (zero_extend:DI (reg:SI 120)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":56 -1
     (nil))
(insn 60 59 61 4 (parallel [
            (set (reg:SI 116)
                (lshiftrt:SI (reg:SI 119)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":56 -1
     (expr_list:REG_EQUAL (udiv:SI (reg:SI 117)
            (const_int 100000 [0x186a0]))
        (nil)))
(insn 61 60 62 4 (parallel [
            (set (reg:SI 121)
                (mult:SI (reg:SI 116)
                    (const_int 100000 [0x186a0])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":56 -1
     (nil))
(insn 62 61 63 4 (parallel [
            (set (reg:SI 122)
                (minus:SI (reg:SI 117)
                    (reg:SI 121)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":56 -1
     (nil))
(insn 63 62 64 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 poscheck+0 S4 A32])
        (reg:SI 122)) "test1.c":56 -1
     (nil))
;;  succ:       5 (FALLTHRU,DFS_BACK)

;; basic block 5, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              4 (FALLTHRU,DFS_BACK)
(code_label 64 63 65 5 6 (nil) [1 uses])
(note 65 64 66 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 5 (set (reg:DI 123)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 poscheck+0 S4 A32]))) "test1.c":53 -1
     (nil))
(insn 67 66 68 5 (set (reg:SI 125)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [1 index+0 S4 A32])) "test1.c":53 -1
     (nil))
(insn 68 67 69 5 (set (reg:DI 124)
        (sign_extend:DI (reg:SI 125))) "test1.c":53 -1
     (nil))
(insn 69 68 70 5 (parallel [
            (set (reg:DI 126)
                (mult:DI (reg:DI 124)
                    (const_int 100000 [0x186a0])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":53 -1
     (nil))
(insn 70 69 71 5 (parallel [
            (set (reg:DI 127)
                (plus:DI (reg:DI 126)
                    (reg:DI 123)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":53 -1
     (nil))
(insn 71 70 72 5 (parallel [
            (set (reg:DI 128)
                (ashift:DI (reg:DI 127)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":53 -1
     (nil))
(insn 72 71 73 5 (set (reg:DI 129)
        (symbol_ref:DI ("hashTable") [flags 0x2]  <var_decl 0x7fa517a76000 hashTable>)) "test1.c":53 -1
     (nil))
(insn 73 72 74 5 (set (reg/f:DI 92 [ _6 ])
        (mem/f:DI (plus:DI (reg:DI 128)
                (reg:DI 129)) [2 hashTable S8 A64])) "test1.c":53 -1
     (nil))
(insn 74 73 75 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 92 [ _6 ])
            (const_int 0 [0]))) "test1.c":53 -1
     (nil))
(jump_insn 75 74 76 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 89)
            (pc))) "test1.c":53 -1
     (nil)
 -> 89)
;;  succ:       6 (FALLTHRU)
;;              7

;; basic block 6, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
(note 76 75 77 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 6 (set (reg:DI 130)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 poscheck+0 S4 A32]))) "test1.c":53 -1
     (nil))
(insn 78 77 79 6 (set (reg:SI 132)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [1 index+0 S4 A32])) "test1.c":53 -1
     (nil))
(insn 79 78 80 6 (set (reg:DI 131)
        (sign_extend:DI (reg:SI 132))) "test1.c":53 -1
     (nil))
(insn 80 79 81 6 (parallel [
            (set (reg:DI 133)
                (mult:DI (reg:DI 131)
                    (const_int 100000 [0x186a0])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":53 -1
     (nil))
(insn 81 80 82 6 (parallel [
            (set (reg:DI 134)
                (plus:DI (reg:DI 133)
                    (reg:DI 130)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":53 -1
     (nil))
(insn 82 81 83 6 (parallel [
            (set (reg:DI 135)
                (ashift:DI (reg:DI 134)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":53 -1
     (nil))
(insn 83 82 84 6 (set (reg:DI 136)
        (symbol_ref:DI ("hashTable") [flags 0x2]  <var_decl 0x7fa517a76000 hashTable>)) "test1.c":53 -1
     (nil))
(insn 84 83 85 6 (set (reg/f:DI 93 [ _7 ])
        (mem/f:DI (plus:DI (reg:DI 135)
                (reg:DI 136)) [2 hashTable S8 A64])) "test1.c":53 -1
     (nil))
(insn 85 84 87 6 (set (reg:SI 94 [ _8 ])
        (mem:SI (plus:DI (reg/f:DI 93 [ _7 ])
                (const_int 8 [0x8])) [1 _7->Value+0 S4 A64])) "test1.c":53 -1
     (nil))
(insn 87 85 88 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 94 [ _8 ])
            (const_int -1 [0xffffffffffffffff]))) "test1.c":53 -1
     (nil))
(jump_insn 88 87 89 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 86)
            (pc))) "test1.c":53 -1
     (nil)
 -> 86)
;;  succ:       4
;;              7 (FALLTHRU)

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
;;              6 (FALLTHRU)
(code_label 89 88 90 7 7 (nil) [1 uses])
(note 90 89 91 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 92 7 (set (reg:DI 137)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 pos+0 S4 A32]))) "test1.c":58 -1
     (nil))
(insn 92 91 93 7 (set (reg:SI 139)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [1 index+0 S4 A32])) "test1.c":58 -1
     (nil))
(insn 93 92 94 7 (set (reg:DI 138)
        (sign_extend:DI (reg:SI 139))) "test1.c":58 -1
     (nil))
(insn 94 93 95 7 (parallel [
            (set (reg:DI 140)
                (mult:DI (reg:DI 138)
                    (const_int 100000 [0x186a0])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":58 -1
     (nil))
(insn 95 94 96 7 (parallel [
            (set (reg:DI 141)
                (plus:DI (reg:DI 140)
                    (reg:DI 137)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":58 -1
     (nil))
(insn 96 95 97 7 (parallel [
            (set (reg:DI 142)
                (ashift:DI (reg:DI 141)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":58 -1
     (nil))
(insn 97 96 98 7 (set (reg:DI 143)
        (symbol_ref:DI ("hashTable") [flags 0x2]  <var_decl 0x7fa517a76000 hashTable>)) "test1.c":58 -1
     (nil))
(insn 98 97 99 7 (set (reg/f:DI 95 [ _9 ])
        (mem/f:DI (plus:DI (reg:DI 142)
                (reg:DI 143)) [2 hashTable S8 A64])) "test1.c":58 -1
     (nil))
(insn 99 98 100 7 (set (reg/f:DI 144)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 NewNode+0 S8 A64])) "test1.c":58 -1
     (nil))
(insn 100 99 101 7 (set (mem/f:DI (plus:DI (reg/f:DI 144)
                (const_int 16 [0x10])) [2 NewNode_15->pNext+0 S8 A64])
        (reg/f:DI 95 [ _9 ])) "test1.c":58 -1
     (nil))
(insn 101 100 102 7 (set (reg:DI 145)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 pos+0 S4 A32]))) "test1.c":59 -1
     (nil))
(insn 102 101 103 7 (set (reg:SI 147)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [1 index+0 S4 A32])) "test1.c":59 -1
     (nil))
(insn 103 102 104 7 (set (reg:DI 146)
        (sign_extend:DI (reg:SI 147))) "test1.c":59 -1
     (nil))
(insn 104 103 105 7 (parallel [
            (set (reg:DI 148)
                (mult:DI (reg:DI 146)
                    (const_int 100000 [0x186a0])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":59 -1
     (nil))
(insn 105 104 106 7 (parallel [
            (set (reg:DI 149)
                (plus:DI (reg:DI 148)
                    (reg:DI 145)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":59 -1
     (nil))
(insn 106 105 107 7 (parallel [
            (set (reg:DI 150)
                (ashift:DI (reg:DI 149)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":59 -1
     (nil))
(insn 107 106 108 7 (set (reg:DI 151)
        (symbol_ref:DI ("hashTable") [flags 0x2]  <var_decl 0x7fa517a76000 hashTable>)) "test1.c":59 -1
     (nil))
(insn 108 107 109 7 (set (reg/f:DI 152)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 NewNode+0 S8 A64])) "test1.c":59 -1
     (nil))
(insn 109 108 110 7 (set (mem/f:DI (plus:DI (reg:DI 150)
                (reg:DI 151)) [2 hashTable S8 A64])
        (reg/f:DI 152)) "test1.c":59 -1
     (nil))
(insn 110 109 111 7 (set (reg:SI 154)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [1 index+0 S4 A32])) "test1.c":61 -1
     (nil))
(insn 111 110 112 7 (set (reg:DI 153)
        (sign_extend:DI (reg:SI 154))) "test1.c":61 -1
     (nil))
(insn 112 111 113 7 (parallel [
            (set (reg:DI 155)
                (ashift:DI (reg:DI 153)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":61 -1
     (nil))
(insn 113 112 114 7 (set (reg:DI 156)
        (symbol_ref:DI ("hash_size") [flags 0x2]  <var_decl 0x7fa517daaf30 hash_size>)) "test1.c":61 -1
     (nil))
(insn 114 113 115 7 (set (reg:SI 96 [ _10 ])
        (mem:SI (plus:DI (reg:DI 155)
                (reg:DI 156)) [1 hash_size S4 A32])) "test1.c":61 -1
     (nil))
(insn 115 114 116 7 (parallel [
            (set (reg:SI 97 [ _11 ])
                (plus:SI (reg:SI 96 [ _10 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":61 -1
     (nil))
(insn 116 115 117 7 (set (reg:SI 158)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [1 index+0 S4 A32])) "test1.c":61 -1
     (nil))
(insn 117 116 118 7 (set (reg:DI 157)
        (sign_extend:DI (reg:SI 158))) "test1.c":61 -1
     (nil))
(insn 118 117 119 7 (parallel [
            (set (reg:DI 159)
                (ashift:DI (reg:DI 157)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":61 -1
     (nil))
(insn 119 118 120 7 (set (reg:DI 160)
        (symbol_ref:DI ("hash_size") [flags 0x2]  <var_decl 0x7fa517daaf30 hash_size>)) "test1.c":61 -1
     (nil))
(insn 120 119 123 7 (set (mem:SI (plus:DI (reg:DI 159)
                (reg:DI 160)) [1 hash_size S4 A32])
        (reg:SI 97 [ _11 ])) "test1.c":61 -1
     (nil))
(insn 123 120 0 7 (const_int 0 [0]) "test1.c":62 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function hashTableLookupFunc (hashTableLookupFunc, funcdef_no=7, decl_uid=3242, cgraph_uid=7, symbol_order=10)

hashTableLookupFunc (const char * key, int index)
{
  struct Node * pHead;
  unsigned int pos;
  struct Node * D.3350;
  unsigned int _1;
  struct Node * _2;
  char * _3;
  int _4;
  struct Node * _6;
  struct Node * _14;
  struct Node * _15;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = hashComputeByHashFunc (key_8(D));
  pos_10 = _1 % 100000;
  _2 = hashTable[index_11(D)][pos_10];
  if (_2 != 0B)
    goto <bb 3>; [0.00%]
  else
    goto <bb 8>; [0.00%]
;;    succ:       3
;;                8

;;   basic block 3, loop depth 0
;;    pred:       2
  pHead_12 = hashTable[index_11(D)][pos_10];
  goto <bb 7>; [0.00%]
;;    succ:       7

;;   basic block 4, loop depth 1
;;    pred:       7
  _3 = pHead_5->Key;
  _4 = strcmp (key_8(D), _3);
  if (_4 == 0)
    goto <bb 5>; [0.00%]
  else
    goto <bb 6>; [0.00%]
;;    succ:       5
;;                6

;;   basic block 5, loop depth 0
;;    pred:       4
  _14 = pHead_5;
  goto <bb 9> (<L7>); [0.00%]
;;    succ:       9

;;   basic block 6, loop depth 1
;;    pred:       4
  pHead_13 = pHead_5->pNext;
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       3
;;                6
  # pHead_5 = PHI <pHead_12(3), pHead_13(6)>
  if (pHead_5 != 0B)
    goto <bb 4>; [0.00%]
  else
    goto <bb 8>; [0.00%]
;;    succ:       4
;;                8

;;   basic block 8, loop depth 0
;;    pred:       2
;;                7
  _15 = 0B;
;;    succ:       9

;;   basic block 9, loop depth 0
;;    pred:       5
;;                8
  # _6 = PHI <_14(5), _15(8)>
<L7> [0.00%]:
  return _6;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (pHead_5 - 5 )
Partition 6 (_6 - 6 )
Partition 8 (key_8(D) - 8 )
Partition 10 (pos_10 - 10 )
Partition 11 (index_11(D) - 11 )
Partition 12 (pHead_12 - 12 )
Partition 13 (pHead_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (_16(D) - 16 )


Partition map 

Partition 0 (pHead_5 - 5 )
Partition 1 (_6 - 6 )
Partition 2 (key_8(D) - 8 )
Partition 3 (index_11(D) - 11 )
Partition 4 (pHead_12 - 12 )
Partition 5 (pHead_13 - 13 )
Partition 6 (_14 - 14 )
Partition 7 (_15 - 15 )
Partition 8 (_16(D) - 16 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646, 0) pHead_5 <-> pHead_12
(2147483646, 0) pHead_5 <-> pHead_13

Partition map 

Partition 0 (pHead_5 - 5 )
Partition 1 (_6 - 6 )
Partition 2 (key_8(D) - 8 )
Partition 3 (index_11(D) - 11 )
Partition 4 (pHead_12 - 12 )
Partition 5 (pHead_13 - 13 )
Partition 6 (_14 - 14 )
Partition 7 (_15 - 15 )
Partition 8 (_16(D) - 16 )

Coalesce list: (5)pHead_5 & (12)pHead_12 [map: 0, 4] : Success -> 0
Coalesce list: (5)pHead_5 & (13)pHead_13 [map: 0, 5] : Success -> 0
Coalesce list: (6)_6 & (15)_15 [map: 1, 7] : Success -> 1
Coalesce list: (6)_6 & (14)_14 [map: 1, 6] : Success -> 1
Coalesce list: (5)pHead_5 & (13)pHead_5: Already Coalesced.
Coalesce list: (5)pHead_5 & (12)pHead_5: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (pHead_5 - 5 12 13 )
Partition 5 (_6 - 6 14 15 )
Partition 6 (key_8(D) - 8 )
Partition 7 (pos_10 - 10 )
Partition 8 (index_11(D) - 11 )
Partition 9 (_16(D) - 16 )

hashTableLookupFunc (const char * key, int index)
{
  struct Node * pHead;
  unsigned int pos;
  struct Node * D.3350;
  unsigned int _1;
  struct Node * _2;
  char * _3;
  int _4;
  struct Node * _6;
  struct Node * _14;
  struct Node * _15;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = hashComputeByHashFunc (key_8(D));
  pos_10 = _1 % 100000;
  _2 = hashTable[index_11(D)][pos_10];
  if (_2 != 0B)
    goto <bb 3>; [0.00%]
  else
    goto <bb 8>; [0.00%]
;;    succ:       3
;;                8

;;   basic block 3, loop depth 0
;;    pred:       2
  pHead_12 = hashTable[index_11(D)][pos_10];
  goto <bb 7>; [0.00%]
;;    succ:       7

;;   basic block 4, loop depth 1
;;    pred:       7
  _3 = pHead_5->Key;
  _4 = strcmp (key_8(D), _3);
  if (_4 == 0)
    goto <bb 5>; [0.00%]
  else
    goto <bb 6>; [0.00%]
;;    succ:       5
;;                6

;;   basic block 5, loop depth 0
;;    pred:       4
  _14 = pHead_5;
  goto <bb 9> (<L7>); [0.00%]
;;    succ:       9

;;   basic block 6, loop depth 1
;;    pred:       4
  pHead_13 = pHead_5->pNext;
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       3
;;                6
  # pHead_5 = PHI <pHead_12(3), pHead_13(6)>
  if (pHead_5 != 0B)
    goto <bb 4>; [0.00%]
  else
    goto <bb 8>; [0.00%]
;;    succ:       4
;;                8

;;   basic block 8, loop depth 0
;;    pred:       2
;;                7
  _15 = 0B;
;;    succ:       9

;;   basic block 9, loop depth 0
;;    pred:       5
;;                8
  # _6 = PHI <_14(5), _15(8)>
<L7> [0.00%]:
  return _6;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _1 = hashComputeByHashFunc (key_8(D));

(insn 7 6 8 (set (reg:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 key+0 S8 A64])) "test1.c":66 -1
     (nil))

(insn 8 7 9 (set (reg:DI 5 di)
        (reg:DI 93)) "test1.c":66 -1
     (nil))

(call_insn 9 8 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("hashComputeByHashFunc") [flags 0x3]  <function_decl 0x7fa517a72a00 hashComputeByHashFunc>) [0 hashComputeByHashFunc S1 A8])
            (const_int 0 [0]))) "test1.c":66 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 10 9 0 (set (reg:SI 87 [ _1 ])
        (reg:SI 0 ax)) "test1.c":66 -1
     (nil))

;; pos_10 = _1 % 100000;

(insn 11 10 12 (parallel [
            (set (reg:SI 94)
                (lshiftrt:SI (reg:SI 87 [ _1 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":66 -1
     (nil))

(insn 12 11 13 (set (reg:SI 96)
        (const_int 175921861 [0xa7c5ac5])) "test1.c":66 -1
     (nil))

(insn 13 12 14 (parallel [
            (set (reg:SI 95)
                (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg:SI 94))
                            (zero_extend:DI (reg:SI 96)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":66 -1
     (nil))

(insn 14 13 15 (parallel [
            (set (reg:SI 97)
                (lshiftrt:SI (reg:SI 95)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":66 -1
     (nil))

(insn 15 14 16 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 pos+0 S4 A32])
        (reg:SI 97)) "test1.c":66 -1
     (nil))

(insn 16 15 17 (set (reg:SI 99)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 pos+0 S4 A32])) "test1.c":66 -1
     (nil))

(insn 17 16 18 (parallel [
            (set (reg:SI 98)
                (mult:SI (reg:SI 99)
                    (const_int 100000 [0x186a0])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":66 -1
     (nil))

(insn 18 17 19 (parallel [
            (set (reg:SI 100)
                (minus:SI (reg:SI 87 [ _1 ])
                    (reg:SI 98)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":66 -1
     (nil))

(insn 19 18 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 pos+0 S4 A32])
        (reg:SI 100)) "test1.c":66 -1
     (nil))
Applying pattern match.pd:84, generic-match.c:11461
Applying pattern match.pd:84, generic-match.c:11461
Applying pattern match.pd:84, generic-match.c:11461

;; _2 = hashTable[index_11(D)][pos_10];

(insn 20 19 21 (set (reg:DI 101)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 pos+0 S4 A32]))) "test1.c":68 -1
     (nil))

(insn 21 20 22 (set (reg:SI 103)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [1 index+0 S4 A32])) "test1.c":68 -1
     (nil))

(insn 22 21 23 (set (reg:DI 102)
        (sign_extend:DI (reg:SI 103))) "test1.c":68 -1
     (nil))

(insn 23 22 24 (parallel [
            (set (reg:DI 104)
                (mult:DI (reg:DI 102)
                    (const_int 100000 [0x186a0])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":68 -1
     (nil))

(insn 24 23 25 (parallel [
            (set (reg:DI 105)
                (plus:DI (reg:DI 104)
                    (reg:DI 101)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":68 -1
     (nil))

(insn 25 24 26 (parallel [
            (set (reg:DI 106)
                (ashift:DI (reg:DI 105)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":68 -1
     (nil))

(insn 26 25 27 (set (reg:DI 107)
        (symbol_ref:DI ("hashTable") [flags 0x2]  <var_decl 0x7fa517a76000 hashTable>)) "test1.c":68 -1
     (nil))

(insn 27 26 0 (set (reg/f:DI 88 [ _2 ])
        (mem/f:DI (plus:DI (reg:DI 106)
                (reg:DI 107)) [2 hashTable S8 A64])) "test1.c":68 -1
     (nil))

;; if (_2 != 0B)

(insn 28 27 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 88 [ _2 ])
            (const_int 0 [0]))) "test1.c":68 -1
     (nil))

(jump_insn 29 28 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "test1.c":68 -1
     (nil))

;; Generating RTL for gimple basic block 3
Applying pattern match.pd:84, generic-match.c:11461
Applying pattern match.pd:84, generic-match.c:11461
Applying pattern match.pd:84, generic-match.c:11461

;; pHead_12 = hashTable[index_11(D)][pos_10];

(insn 31 30 32 (set (reg:DI 108)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 pos+0 S4 A32]))) "test1.c":70 -1
     (nil))

(insn 32 31 33 (set (reg:SI 110)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [1 index+0 S4 A32])) "test1.c":70 -1
     (nil))

(insn 33 32 34 (set (reg:DI 109)
        (sign_extend:DI (reg:SI 110))) "test1.c":70 -1
     (nil))

(insn 34 33 35 (parallel [
            (set (reg:DI 111)
                (mult:DI (reg:DI 109)
                    (const_int 100000 [0x186a0])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":70 -1
     (nil))

(insn 35 34 36 (parallel [
            (set (reg:DI 112)
                (plus:DI (reg:DI 111)
                    (reg:DI 108)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":70 -1
     (nil))

(insn 36 35 37 (parallel [
            (set (reg:DI 113)
                (ashift:DI (reg:DI 112)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":70 -1
     (nil))

(insn 37 36 38 (set (reg:DI 114)
        (symbol_ref:DI ("hashTable") [flags 0x2]  <var_decl 0x7fa517a76000 hashTable>)) "test1.c":70 -1
     (nil))

(insn 38 37 39 (set (reg/f:DI 115)
        (mem/f:DI (plus:DI (reg:DI 113)
                (reg:DI 114)) [2 hashTable S8 A64])) "test1.c":70 -1
     (nil))

(insn 39 38 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [2 pHead+0 S8 A64])
        (reg/f:DI 115)) "test1.c":70 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; _3 = pHead_5->Key;

(insn 43 42 44 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [2 pHead+0 S8 A64])) "test1.c":73 -1
     (nil))

(insn 44 43 0 (set (reg/f:DI 89 [ _3 ])
        (mem/f:DI (reg/f:DI 116) [3 pHead_5->Key+0 S8 A64])) "test1.c":73 -1
     (nil))

;; _4 = strcmp (key_8(D), _3);

(insn 45 44 46 (set (reg:DI 117)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 key+0 S8 A64])) "test1.c":73 -1
     (nil))

(insn 46 45 47 (set (reg:DI 4 si)
        (reg/f:DI 89 [ _3 ])) "test1.c":73 -1
     (nil))

(insn 47 46 48 (set (reg:DI 5 di)
        (reg:DI 117)) "test1.c":73 -1
     (nil))

(call_insn/i 48 47 49 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fa517cf7d00 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) "test1.c":73 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 49 48 0 (set (reg:SI 90 [ _4 ])
        (reg:SI 0 ax)) "test1.c":73 -1
     (nil))

;; if (_4 == 0)

(insn 50 49 51 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 90 [ _4 ])
            (const_int 0 [0]))) "test1.c":73 -1
     (nil))

(jump_insn 51 50 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "test1.c":73 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; _14 = pHead_5;

(insn 53 52 0 (set (reg/f:DI 91 [ _6 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [2 pHead+0 S8 A64])) "test1.c":75 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 56 55 57 12 (nil) [0 uses])

(note 57 56 0 NOTE_INSN_BASIC_BLOCK)

;; pHead_13 = pHead_5->pNext;

(insn 58 57 59 (set (reg/f:DI 118)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [2 pHead+0 S8 A64])) "test1.c":77 -1
     (nil))

(insn 59 58 60 (set (reg/f:DI 119)
        (mem/f:DI (plus:DI (reg/f:DI 118)
                (const_int 16 [0x10])) [2 pHead_5->pNext+0 S8 A64])) "test1.c":77 -1
     (nil))

(insn 60 59 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [2 pHead+0 S8 A64])
        (reg/f:DI 119)) "test1.c":77 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; 

(code_label 61 60 62 11 (nil) [0 uses])

(note 62 61 0 NOTE_INSN_BASIC_BLOCK)

;; if (pHead_5 != 0B)

(insn 64 62 65 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [2 pHead+0 S8 A64])
            (const_int 0 [0]))) "test1.c":71 -1
     (nil))

(jump_insn 65 64 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 63)
            (pc))) "test1.c":71 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; 

(code_label 66 65 67 10 (nil) [0 uses])

(note 67 66 0 NOTE_INSN_BASIC_BLOCK)

;; _15 = 0B;

(insn 68 67 0 (set (reg/f:DI 91 [ _6 ])
        (const_int 0 [0])) "test1.c":80 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; <L7> [0.00%]:

(code_label 69 68 70 13 (nil) [0 uses])

(note 70 69 0 NOTE_INSN_BASIC_BLOCK)

;; return _6;

(insn 71 70 72 (set (reg/f:DI 92 [ <retval> ])
        (reg/f:DI 91 [ _6 ])) -1
     (nil))

(jump_insn 72 71 73 (set (pc)
        (label_ref 0)) -1
     (nil))

(barrier 73 72 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 72.
Merging block 11 into block 10...
Merged blocks 10 and 11.
Merged 10 and 11 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 key+0 S8 A64])
        (reg:DI 5 di [ key ])) "test1.c":65 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [1 index+0 S4 A32])
        (reg:SI 4 si [ index ])) "test1.c":65 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 key+0 S8 A64])) "test1.c":66 -1
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (reg:DI 93)) "test1.c":66 -1
     (nil))
(call_insn 9 8 10 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("hashComputeByHashFunc") [flags 0x3]  <function_decl 0x7fa517a72a00 hashComputeByHashFunc>) [0 hashComputeByHashFunc S1 A8])
            (const_int 0 [0]))) "test1.c":66 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 10 9 11 2 (set (reg:SI 87 [ _1 ])
        (reg:SI 0 ax)) "test1.c":66 -1
     (nil))
(insn 11 10 12 2 (parallel [
            (set (reg:SI 94)
                (lshiftrt:SI (reg:SI 87 [ _1 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":66 -1
     (nil))
(insn 12 11 13 2 (set (reg:SI 96)
        (const_int 175921861 [0xa7c5ac5])) "test1.c":66 -1
     (nil))
(insn 13 12 14 2 (parallel [
            (set (reg:SI 95)
                (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg:SI 94))
                            (zero_extend:DI (reg:SI 96)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":66 -1
     (nil))
(insn 14 13 15 2 (parallel [
            (set (reg:SI 97)
                (lshiftrt:SI (reg:SI 95)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":66 -1
     (nil))
(insn 15 14 16 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 pos+0 S4 A32])
        (reg:SI 97)) "test1.c":66 -1
     (nil))
(insn 16 15 17 2 (set (reg:SI 99)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 pos+0 S4 A32])) "test1.c":66 -1
     (nil))
(insn 17 16 18 2 (parallel [
            (set (reg:SI 98)
                (mult:SI (reg:SI 99)
                    (const_int 100000 [0x186a0])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":66 -1
     (nil))
(insn 18 17 19 2 (parallel [
            (set (reg:SI 100)
                (minus:SI (reg:SI 87 [ _1 ])
                    (reg:SI 98)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":66 -1
     (nil))
(insn 19 18 20 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 pos+0 S4 A32])
        (reg:SI 100)) "test1.c":66 -1
     (nil))
(insn 20 19 21 2 (set (reg:DI 101)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 pos+0 S4 A32]))) "test1.c":68 -1
     (nil))
(insn 21 20 22 2 (set (reg:SI 103)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [1 index+0 S4 A32])) "test1.c":68 -1
     (nil))
(insn 22 21 23 2 (set (reg:DI 102)
        (sign_extend:DI (reg:SI 103))) "test1.c":68 -1
     (nil))
(insn 23 22 24 2 (parallel [
            (set (reg:DI 104)
                (mult:DI (reg:DI 102)
                    (const_int 100000 [0x186a0])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":68 -1
     (nil))
(insn 24 23 25 2 (parallel [
            (set (reg:DI 105)
                (plus:DI (reg:DI 104)
                    (reg:DI 101)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":68 -1
     (nil))
(insn 25 24 26 2 (parallel [
            (set (reg:DI 106)
                (ashift:DI (reg:DI 105)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":68 -1
     (nil))
(insn 26 25 27 2 (set (reg:DI 107)
        (symbol_ref:DI ("hashTable") [flags 0x2]  <var_decl 0x7fa517a76000 hashTable>)) "test1.c":68 -1
     (nil))
(insn 27 26 28 2 (set (reg/f:DI 88 [ _2 ])
        (mem/f:DI (plus:DI (reg:DI 106)
                (reg:DI 107)) [2 hashTable S8 A64])) "test1.c":68 -1
     (nil))
(insn 28 27 29 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 88 [ _2 ])
            (const_int 0 [0]))) "test1.c":68 -1
     (nil))
(jump_insn 29 28 30 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 66)
            (pc))) "test1.c":68 -1
     (nil)
 -> 66)
;;  succ:       4 (FALLTHRU)
;;              9

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 30 29 31 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 4 (set (reg:DI 108)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 pos+0 S4 A32]))) "test1.c":70 -1
     (nil))
(insn 32 31 33 4 (set (reg:SI 110)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [1 index+0 S4 A32])) "test1.c":70 -1
     (nil))
(insn 33 32 34 4 (set (reg:DI 109)
        (sign_extend:DI (reg:SI 110))) "test1.c":70 -1
     (nil))
(insn 34 33 35 4 (parallel [
            (set (reg:DI 111)
                (mult:DI (reg:DI 109)
                    (const_int 100000 [0x186a0])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":70 -1
     (nil))
(insn 35 34 36 4 (parallel [
            (set (reg:DI 112)
                (plus:DI (reg:DI 111)
                    (reg:DI 108)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":70 -1
     (nil))
(insn 36 35 37 4 (parallel [
            (set (reg:DI 113)
                (ashift:DI (reg:DI 112)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":70 -1
     (nil))
(insn 37 36 38 4 (set (reg:DI 114)
        (symbol_ref:DI ("hashTable") [flags 0x2]  <var_decl 0x7fa517a76000 hashTable>)) "test1.c":70 -1
     (nil))
(insn 38 37 39 4 (set (reg/f:DI 115)
        (mem/f:DI (plus:DI (reg:DI 113)
                (reg:DI 114)) [2 hashTable S8 A64])) "test1.c":70 -1
     (nil))
(insn 39 38 40 4 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [2 pHead+0 S8 A64])
        (reg/f:DI 115)) "test1.c":70 -1
     (nil))
(jump_insn 40 39 41 4 (set (pc)
        (label_ref 61)) "test1.c":71 -1
     (nil)
 -> 61)
;;  succ:       8

(barrier 41 40 63)
;; basic block 5, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       8
(code_label 63 41 42 5 14 (nil) [1 uses])
(note 42 63 43 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 5 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [2 pHead+0 S8 A64])) "test1.c":73 -1
     (nil))
(insn 44 43 45 5 (set (reg/f:DI 89 [ _3 ])
        (mem/f:DI (reg/f:DI 116) [3 pHead_5->Key+0 S8 A64])) "test1.c":73 -1
     (nil))
(insn 45 44 46 5 (set (reg:DI 117)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 key+0 S8 A64])) "test1.c":73 -1
     (nil))
(insn 46 45 47 5 (set (reg:DI 4 si)
        (reg/f:DI 89 [ _3 ])) "test1.c":73 -1
     (nil))
(insn 47 46 48 5 (set (reg:DI 5 di)
        (reg:DI 117)) "test1.c":73 -1
     (nil))
(call_insn/i 48 47 49 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fa517cf7d00 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) "test1.c":73 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 49 48 50 5 (set (reg:SI 90 [ _4 ])
        (reg:SI 0 ax)) "test1.c":73 -1
     (nil))
(insn 50 49 51 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 90 [ _4 ])
            (const_int 0 [0]))) "test1.c":73 -1
     (nil))
(jump_insn 51 50 52 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) "test1.c":73 -1
     (nil)
 -> 56)
;;  succ:       6 (FALLTHRU)
;;              7

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
(note 52 51 53 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 6 (set (reg/f:DI 91 [ _6 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [2 pHead+0 S8 A64])) "test1.c":75 -1
     (nil))
(jump_insn 54 53 55 6 (set (pc)
        (label_ref 69)) "test1.c":75 -1
     (nil)
 -> 69)
;;  succ:       10

(barrier 55 54 56)
;; basic block 7, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
(code_label 56 55 57 7 12 (nil) [1 uses])
(note 57 56 58 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 7 (set (reg/f:DI 118)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [2 pHead+0 S8 A64])) "test1.c":77 -1
     (nil))
(insn 59 58 60 7 (set (reg/f:DI 119)
        (mem/f:DI (plus:DI (reg/f:DI 118)
                (const_int 16 [0x10])) [2 pHead_5->pNext+0 S8 A64])) "test1.c":77 -1
     (nil))
(insn 60 59 61 7 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [2 pHead+0 S8 A64])
        (reg/f:DI 119)) "test1.c":77 -1
     (nil))
;;  succ:       8 (FALLTHRU,DFS_BACK)

;; basic block 8, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
;;              7 (FALLTHRU,DFS_BACK)
(code_label 61 60 62 8 11 (nil) [1 uses])
(note 62 61 64 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 64 62 65 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [2 pHead+0 S8 A64])
            (const_int 0 [0]))) "test1.c":71 -1
     (nil))
(jump_insn 65 64 66 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 63)
            (pc))) "test1.c":71 -1
     (nil)
 -> 63)
;;  succ:       5
;;              9 (FALLTHRU)

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              8 (FALLTHRU)
(code_label 66 65 67 9 10 (nil) [1 uses])
(note 67 66 68 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 69 9 (set (reg/f:DI 91 [ _6 ])
        (const_int 0 [0])) "test1.c":80 -1
     (nil))
;;  succ:       10 (FALLTHRU)

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       6
;;              9 (FALLTHRU)
(code_label 69 68 70 10 13 (nil) [1 uses])
(note 70 69 71 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 75 10 (set (reg/f:DI 92 [ <retval> ])
        (reg/f:DI 91 [ _6 ])) -1
     (nil))
(insn 75 71 76 10 (set (reg/i:DI 0 ax)
        (reg/f:DI 92 [ <retval> ])) "test1.c":81 -1
     (nil))
(insn 76 75 0 10 (use (reg/i:DI 0 ax)) "test1.c":81 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function hashTablePrintFunc (hashTablePrintFunc, funcdef_no=8, decl_uid=3250, cgraph_uid=8, symbol_order=11)

hashTablePrintFunc (int index)
{
  struct Node * pHead;
  int i;
  struct Node * _1;
  int _2;
  char * _3;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  i_9 = 0;
  __builtin_puts (&"=========== content of hash table ==========="[0]);
  goto <bb 8>; [0.00%]
;;    succ:       8

;;   basic block 3, loop depth 1
;;    pred:       8
  _1 = hashTable[index_12(D)][i_4];
  if (_1 != 0B)
    goto <bb 4>; [0.00%]
  else
    goto <bb 7>; [0.00%]
;;    succ:       4
;;                7

;;   basic block 4, loop depth 1
;;    pred:       3
  pHead_13 = hashTable[index_12(D)][i_4];
  goto <bb 6>; [0.00%]
;;    succ:       6

;;   basic block 5, loop depth 2
;;    pred:       6
  _2 = pHead_5->Value;
  _3 = pHead_5->Key;
  printf ("Word: %s, count: %d ", _3, _2);
  pHead_15 = pHead_5->pNext;
  __builtin_putchar (10);
;;    succ:       6

;;   basic block 6, loop depth 2
;;    pred:       4
;;                5
  # pHead_5 = PHI <pHead_13(4), pHead_15(5)>
  if (pHead_5 != 0B)
    goto <bb 5>; [0.00%]
  else
    goto <bb 7>; [0.00%]
;;    succ:       5
;;                7

;;   basic block 7, loop depth 1
;;    pred:       3
;;                6
  i_17 = i_4 + 1;
;;    succ:       8

;;   basic block 8, loop depth 1
;;    pred:       2
;;                7
  # i_4 = PHI <i_9(2), i_17(7)>
  if (i_4 <= 99999)
    goto <bb 3>; [0.00%]
  else
    goto <bb 9>; [0.00%]
;;    succ:       3
;;                9

;;   basic block 9, loop depth 0
;;    pred:       8
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (i_4 - 4 )
Partition 5 (pHead_5 - 5 )
Partition 9 (i_9 - 9 )
Partition 12 (index_12(D) - 12 )
Partition 13 (pHead_13 - 13 )
Partition 15 (pHead_15 - 15 )
Partition 17 (i_17 - 17 )


Partition map 

Partition 0 (i_4 - 4 )
Partition 1 (pHead_5 - 5 )
Partition 2 (i_9 - 9 )
Partition 3 (index_12(D) - 12 )
Partition 4 (pHead_13 - 13 )
Partition 5 (pHead_15 - 15 )
Partition 6 (i_17 - 17 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646, 0) i_4 <-> i_9
(2147483646, 0) pHead_5 <-> pHead_13
(2147483646, 0) pHead_5 <-> pHead_15
(2147483646, 0) i_4 <-> i_17

Partition map 

Partition 0 (i_4 - 4 )
Partition 1 (pHead_5 - 5 )
Partition 2 (i_9 - 9 )
Partition 3 (index_12(D) - 12 )
Partition 4 (pHead_13 - 13 )
Partition 5 (pHead_15 - 15 )
Partition 6 (i_17 - 17 )

Coalesce list: (4)i_4 & (9)i_9 [map: 0, 2] : Success -> 0
Coalesce list: (5)pHead_5 & (13)pHead_13 [map: 1, 4] : Success -> 1
Coalesce list: (5)pHead_5 & (15)pHead_15 [map: 1, 5] : Success -> 1
Coalesce list: (4)i_4 & (17)i_17 [map: 0, 6] : Success -> 0
Coalesce list: (4)i_4 & (17)i_4: Already Coalesced.
Coalesce list: (4)i_4 & (9)i_4: Already Coalesced.
Coalesce list: (5)pHead_5 & (15)pHead_5: Already Coalesced.
Coalesce list: (5)pHead_5 & (13)pHead_5: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (i_4 - 4 9 17 )
Partition 4 (pHead_5 - 5 13 15 )
Partition 5 (index_12(D) - 12 )

hashTablePrintFunc (int index)
{
  struct Node * pHead;
  int i;
  struct Node * _1;
  int _2;
  char * _3;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  i_9 = 0;
  __builtin_puts (&"=========== content of hash table ==========="[0]);
  goto <bb 8>; [0.00%]
;;    succ:       8

;;   basic block 3, loop depth 1
;;    pred:       8
  _1 = hashTable[index_12(D)][i_4];
  if (_1 != 0B)
    goto <bb 4>; [0.00%]
  else
    goto <bb 7>; [0.00%]
;;    succ:       4
;;                7

;;   basic block 4, loop depth 1
;;    pred:       3
  pHead_13 = hashTable[index_12(D)][i_4];
  goto <bb 6>; [0.00%]
;;    succ:       6

;;   basic block 5, loop depth 2
;;    pred:       6
  _2 = pHead_5->Value;
  _3 = pHead_5->Key;
  printf ("Word: %s, count: %d ", _3, _2);
  pHead_15 = pHead_5->pNext;
  __builtin_putchar (10);
;;    succ:       6

;;   basic block 6, loop depth 2
;;    pred:       4
;;                5
  # pHead_5 = PHI <pHead_13(4), pHead_15(5)>
  if (pHead_5 != 0B)
    goto <bb 5>; [0.00%]
  else
    goto <bb 7>; [0.00%]
;;    succ:       5
;;                7

;;   basic block 7, loop depth 1
;;    pred:       3
;;                6
  i_17 = i_4 + 1;
;;    succ:       8

;;   basic block 8, loop depth 1
;;    pred:       2
;;                7
  # i_4 = PHI <i_9(2), i_17(7)>
  if (i_4 <= 99999)
    goto <bb 3>; [0.00%]
  else
    goto <bb 9>; [0.00%]
;;    succ:       3
;;                9

;;   basic block 9, loop depth 0
;;    pred:       8
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; i_9 = 0;

(insn 6 5 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 0 [0])) "test1.c":85 -1
     (nil))

;; __builtin_puts (&"=========== content of hash table ==========="[0]);

(insn 7 6 8 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fa517acfab0 *.LC0>)) "test1.c":87 -1
     (nil))

(call_insn 8 7 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa517d00600 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "test1.c":87 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; Generating RTL for gimple basic block 3
Applying pattern match.pd:84, generic-match.c:11461
Applying pattern match.pd:84, generic-match.c:11461
Applying pattern match.pd:84, generic-match.c:11461

;; _1 = hashTable[index_12(D)][i_4];

(insn 12 11 13 (set (reg:SI 91)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "test1.c":90 -1
     (nil))

(insn 13 12 14 (set (reg:DI 90)
        (sign_extend:DI (reg:SI 91))) "test1.c":90 -1
     (nil))

(insn 14 13 15 (set (reg:SI 93)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 index+0 S4 A32])) "test1.c":90 -1
     (nil))

(insn 15 14 16 (set (reg:DI 92)
        (sign_extend:DI (reg:SI 93))) "test1.c":90 -1
     (nil))

(insn 16 15 17 (parallel [
            (set (reg:DI 94)
                (mult:DI (reg:DI 92)
                    (const_int 100000 [0x186a0])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":90 -1
     (nil))

(insn 17 16 18 (parallel [
            (set (reg:DI 95)
                (plus:DI (reg:DI 94)
                    (reg:DI 90)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":90 -1
     (nil))

(insn 18 17 19 (parallel [
            (set (reg:DI 96)
                (ashift:DI (reg:DI 95)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":90 -1
     (nil))

(insn 19 18 20 (set (reg:DI 97)
        (symbol_ref:DI ("hashTable") [flags 0x2]  <var_decl 0x7fa517a76000 hashTable>)) "test1.c":90 -1
     (nil))

(insn 20 19 0 (set (reg/f:DI 87 [ _1 ])
        (mem/f:DI (plus:DI (reg:DI 96)
                (reg:DI 97)) [2 hashTable S8 A64])) "test1.c":90 -1
     (nil))

;; if (_1 != 0B)

(insn 21 20 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 87 [ _1 ])
            (const_int 0 [0]))) "test1.c":90 -1
     (nil))

(jump_insn 22 21 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "test1.c":90 -1
     (nil))

;; Generating RTL for gimple basic block 4
Applying pattern match.pd:84, generic-match.c:11461
Applying pattern match.pd:84, generic-match.c:11461
Applying pattern match.pd:84, generic-match.c:11461

;; pHead_13 = hashTable[index_12(D)][i_4];

(insn 24 23 25 (set (reg:SI 99)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "test1.c":92 -1
     (nil))

(insn 25 24 26 (set (reg:DI 98)
        (sign_extend:DI (reg:SI 99))) "test1.c":92 -1
     (nil))

(insn 26 25 27 (set (reg:SI 101)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 index+0 S4 A32])) "test1.c":92 -1
     (nil))

(insn 27 26 28 (set (reg:DI 100)
        (sign_extend:DI (reg:SI 101))) "test1.c":92 -1
     (nil))

(insn 28 27 29 (parallel [
            (set (reg:DI 102)
                (mult:DI (reg:DI 100)
                    (const_int 100000 [0x186a0])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":92 -1
     (nil))

(insn 29 28 30 (parallel [
            (set (reg:DI 103)
                (plus:DI (reg:DI 102)
                    (reg:DI 98)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":92 -1
     (nil))

(insn 30 29 31 (parallel [
            (set (reg:DI 104)
                (ashift:DI (reg:DI 103)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":92 -1
     (nil))

(insn 31 30 32 (set (reg:DI 105)
        (symbol_ref:DI ("hashTable") [flags 0x2]  <var_decl 0x7fa517a76000 hashTable>)) "test1.c":92 -1
     (nil))

(insn 32 31 33 (set (reg/f:DI 106)
        (mem/f:DI (plus:DI (reg:DI 104)
                (reg:DI 105)) [2 hashTable S8 A64])) "test1.c":92 -1
     (nil))

(insn 33 32 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 pHead+0 S8 A64])
        (reg/f:DI 106)) "test1.c":92 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; _2 = pHead_5->Value;

(insn 37 36 38 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 pHead+0 S8 A64])) "test1.c":95 -1
     (nil))

(insn 38 37 0 (set (reg:SI 88 [ _2 ])
        (mem:SI (plus:DI (reg/f:DI 107)
                (const_int 8 [0x8])) [1 pHead_5->Value+0 S4 A64])) "test1.c":95 -1
     (nil))

;; _3 = pHead_5->Key;

(insn 39 38 40 (set (reg/f:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 pHead+0 S8 A64])) "test1.c":95 -1
     (nil))

(insn 40 39 0 (set (reg/f:DI 89 [ _3 ])
        (mem/f:DI (reg/f:DI 108) [3 pHead_5->Key+0 S8 A64])) "test1.c":95 -1
     (nil))

;; printf ("Word: %s, count: %d ", _3, _2);

(insn 41 40 42 (set (reg:SI 1 dx)
        (reg:SI 88 [ _2 ])) "test1.c":95 -1
     (nil))

(insn 42 41 43 (set (reg:DI 4 si)
        (reg/f:DI 89 [ _3 ])) "test1.c":95 -1
     (nil))

(insn 43 42 44 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fa517acfb40 *.LC1>)) "test1.c":95 -1
     (nil))

(insn 44 43 45 (set (reg:QI 0 ax)
        (const_int 0 [0])) "test1.c":95 -1
     (nil))

(call_insn 45 44 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fa517cfff00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "test1.c":95 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))

;; pHead_15 = pHead_5->pNext;

(insn 46 45 47 (set (reg/f:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 pHead+0 S8 A64])) "test1.c":96 -1
     (nil))

(insn 47 46 48 (set (reg/f:DI 110)
        (mem/f:DI (plus:DI (reg/f:DI 109)
                (const_int 16 [0x10])) [2 pHead_5->pNext+0 S8 A64])) "test1.c":96 -1
     (nil))

(insn 48 47 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 pHead+0 S8 A64])
        (reg/f:DI 110)) "test1.c":96 -1
     (nil))

;; __builtin_putchar (10);

(insn 49 48 50 (set (reg:SI 5 di)
        (const_int 10 [0xa])) "test1.c":97 -1
     (nil))

(call_insn 50 49 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7fa517d00200 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) "test1.c":97 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))

;; Generating RTL for gimple basic block 6

;; 

(code_label 51 50 52 18 (nil) [0 uses])

(note 52 51 0 NOTE_INSN_BASIC_BLOCK)

;; if (pHead_5 != 0B)

(insn 54 52 55 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [2 pHead+0 S8 A64])
            (const_int 0 [0]))) "test1.c":93 -1
     (nil))

(jump_insn 55 54 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 53)
            (pc))) "test1.c":93 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; 

(code_label 56 55 57 17 (nil) [0 uses])

(note 57 56 0 NOTE_INSN_BASIC_BLOCK)

;; i_17 = i_4 + 1;

(insn 58 57 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":100 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; 

(code_label 59 58 60 16 (nil) [0 uses])

(note 60 59 0 NOTE_INSN_BASIC_BLOCK)

;; if (i_4 <= 99999)

(insn 62 60 63 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
            (const_int 99999 [0x1869f]))) "test1.c":88 -1
     (nil))

(jump_insn 63 62 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 61)
            (pc))) "test1.c":88 -1
     (nil))

;; Generating RTL for gimple basic block 9


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 9->10 to 11 failed.
Merging block 11 into block 10...
Merged blocks 10 and 11.
Merged 10 and 11 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 index+0 S4 A32])
        (reg:SI 5 di [ index ])) "test1.c":84 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 0 [0])) "test1.c":85 -1
     (nil))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fa517acfab0 *.LC0>)) "test1.c":87 -1
     (nil))
(call_insn 8 7 9 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa517d00600 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "test1.c":87 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 9 8 10 2 (set (pc)
        (label_ref 59)) "test1.c":88 -1
     (nil)
 -> 59)
;;  succ:       9

(barrier 10 9 61)
;; basic block 4, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       9
(code_label 61 10 11 4 20 (nil) [1 uses])
(note 11 61 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 4 (set (reg:SI 91)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "test1.c":90 -1
     (nil))
(insn 13 12 14 4 (set (reg:DI 90)
        (sign_extend:DI (reg:SI 91))) "test1.c":90 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 93)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 index+0 S4 A32])) "test1.c":90 -1
     (nil))
(insn 15 14 16 4 (set (reg:DI 92)
        (sign_extend:DI (reg:SI 93))) "test1.c":90 -1
     (nil))
(insn 16 15 17 4 (parallel [
            (set (reg:DI 94)
                (mult:DI (reg:DI 92)
                    (const_int 100000 [0x186a0])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":90 -1
     (nil))
(insn 17 16 18 4 (parallel [
            (set (reg:DI 95)
                (plus:DI (reg:DI 94)
                    (reg:DI 90)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":90 -1
     (nil))
(insn 18 17 19 4 (parallel [
            (set (reg:DI 96)
                (ashift:DI (reg:DI 95)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":90 -1
     (nil))
(insn 19 18 20 4 (set (reg:DI 97)
        (symbol_ref:DI ("hashTable") [flags 0x2]  <var_decl 0x7fa517a76000 hashTable>)) "test1.c":90 -1
     (nil))
(insn 20 19 21 4 (set (reg/f:DI 87 [ _1 ])
        (mem/f:DI (plus:DI (reg:DI 96)
                (reg:DI 97)) [2 hashTable S8 A64])) "test1.c":90 -1
     (nil))
(insn 21 20 22 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 87 [ _1 ])
            (const_int 0 [0]))) "test1.c":90 -1
     (nil))
(jump_insn 22 21 23 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) "test1.c":90 -1
     (nil)
 -> 56)
;;  succ:       5 (FALLTHRU)
;;              8

;; basic block 5, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 5 (set (reg:SI 99)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "test1.c":92 -1
     (nil))
(insn 25 24 26 5 (set (reg:DI 98)
        (sign_extend:DI (reg:SI 99))) "test1.c":92 -1
     (nil))
(insn 26 25 27 5 (set (reg:SI 101)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 index+0 S4 A32])) "test1.c":92 -1
     (nil))
(insn 27 26 28 5 (set (reg:DI 100)
        (sign_extend:DI (reg:SI 101))) "test1.c":92 -1
     (nil))
(insn 28 27 29 5 (parallel [
            (set (reg:DI 102)
                (mult:DI (reg:DI 100)
                    (const_int 100000 [0x186a0])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":92 -1
     (nil))
(insn 29 28 30 5 (parallel [
            (set (reg:DI 103)
                (plus:DI (reg:DI 102)
                    (reg:DI 98)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":92 -1
     (nil))
(insn 30 29 31 5 (parallel [
            (set (reg:DI 104)
                (ashift:DI (reg:DI 103)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":92 -1
     (nil))
(insn 31 30 32 5 (set (reg:DI 105)
        (symbol_ref:DI ("hashTable") [flags 0x2]  <var_decl 0x7fa517a76000 hashTable>)) "test1.c":92 -1
     (nil))
(insn 32 31 33 5 (set (reg/f:DI 106)
        (mem/f:DI (plus:DI (reg:DI 104)
                (reg:DI 105)) [2 hashTable S8 A64])) "test1.c":92 -1
     (nil))
(insn 33 32 34 5 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 pHead+0 S8 A64])
        (reg/f:DI 106)) "test1.c":92 -1
     (nil))
(jump_insn 34 33 35 5 (set (pc)
        (label_ref 51)) "test1.c":93 -1
     (nil)
 -> 51)
;;  succ:       7

(barrier 35 34 53)
;; basic block 6, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
(code_label 53 35 36 6 19 (nil) [1 uses])
(note 36 53 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 6 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 pHead+0 S8 A64])) "test1.c":95 -1
     (nil))
(insn 38 37 39 6 (set (reg:SI 88 [ _2 ])
        (mem:SI (plus:DI (reg/f:DI 107)
                (const_int 8 [0x8])) [1 pHead_5->Value+0 S4 A64])) "test1.c":95 -1
     (nil))
(insn 39 38 40 6 (set (reg/f:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 pHead+0 S8 A64])) "test1.c":95 -1
     (nil))
(insn 40 39 41 6 (set (reg/f:DI 89 [ _3 ])
        (mem/f:DI (reg/f:DI 108) [3 pHead_5->Key+0 S8 A64])) "test1.c":95 -1
     (nil))
(insn 41 40 42 6 (set (reg:SI 1 dx)
        (reg:SI 88 [ _2 ])) "test1.c":95 -1
     (nil))
(insn 42 41 43 6 (set (reg:DI 4 si)
        (reg/f:DI 89 [ _3 ])) "test1.c":95 -1
     (nil))
(insn 43 42 44 6 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fa517acfb40 *.LC1>)) "test1.c":95 -1
     (nil))
(insn 44 43 45 6 (set (reg:QI 0 ax)
        (const_int 0 [0])) "test1.c":95 -1
     (nil))
(call_insn 45 44 46 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fa517cfff00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "test1.c":95 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 46 45 47 6 (set (reg/f:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 pHead+0 S8 A64])) "test1.c":96 -1
     (nil))
(insn 47 46 48 6 (set (reg/f:DI 110)
        (mem/f:DI (plus:DI (reg/f:DI 109)
                (const_int 16 [0x10])) [2 pHead_5->pNext+0 S8 A64])) "test1.c":96 -1
     (nil))
(insn 48 47 49 6 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 pHead+0 S8 A64])
        (reg/f:DI 110)) "test1.c":96 -1
     (nil))
(insn 49 48 50 6 (set (reg:SI 5 di)
        (const_int 10 [0xa])) "test1.c":97 -1
     (nil))
(call_insn 50 49 51 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7fa517d00200 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) "test1.c":97 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:       7 (FALLTHRU,DFS_BACK)

;; basic block 7, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
;;              6 (FALLTHRU,DFS_BACK)
(code_label 51 50 52 7 18 (nil) [1 uses])
(note 52 51 54 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 54 52 55 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [2 pHead+0 S8 A64])
            (const_int 0 [0]))) "test1.c":93 -1
     (nil))
(jump_insn 55 54 56 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 53)
            (pc))) "test1.c":93 -1
     (nil)
 -> 53)
;;  succ:       6
;;              8 (FALLTHRU)

;; basic block 8, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
;;              7 (FALLTHRU)
(code_label 56 55 57 8 17 (nil) [1 uses])
(note 57 56 58 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 8 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":100 -1
     (nil))
;;  succ:       9 (FALLTHRU,DFS_BACK)

;; basic block 9, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              8 (FALLTHRU,DFS_BACK)
(code_label 59 58 60 9 16 (nil) [1 uses])
(note 60 59 62 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 62 60 63 9 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
            (const_int 99999 [0x1869f]))) "test1.c":88 -1
     (nil))
(jump_insn 63 62 64 9 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 61)
            (pc))) "test1.c":88 -1
     (nil)
 -> 61)
;;  succ:       4
;;              10 (FALLTHRU)

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 (FALLTHRU)
(note 64 63 67 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 67 64 0 10 (const_int 0 [0]) "test1.c":102 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function rmPunct2LowerFunc (rmPunct2LowerFunc, funcdef_no=9, decl_uid=3261, cgraph_uid=9, symbol_order=12)

rmPunct2LowerFunc (char * p)
{
  char * dst;
  char * src;
  const short unsigned int * * _1;
  const short unsigned int * _2;
  char _3;
  unsigned char _4;
  long unsigned int _5;
  long unsigned int _6;
  const short unsigned int * _7;
  short unsigned int _8;
  int _9;
  int _10;
  const short unsigned int * * _11;
  const short unsigned int * _12;
  char _13;
  unsigned char _14;
  long unsigned int _15;
  long unsigned int _16;
  const short unsigned int * _17;
  short unsigned int _18;
  int _19;
  int _20;
  const short unsigned int * * _21;
  const short unsigned int * _22;
  char _23;
  unsigned char _24;
  long unsigned int _25;
  long unsigned int _26;
  const short unsigned int * _27;
  short unsigned int _28;
  int _29;
  int _30;
  char _31;
  unsigned char _32;
  int _33;
  int _34;
  char * dst.2_35;
  char _36;
  char * src.3_37;
  char * dst.4_38;
  char _39;
  char _40;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  src_45 = p_44(D);
  dst_46 = p_44(D);
  goto <bb 11>; [0.00%]
;;    succ:       11

;;   basic block 3, loop depth 1
;;    pred:       11
  _1 = __ctype_b_loc ();
  _2 = *_1;
  _3 = *src_41;
  _4 = (unsigned char) _3;
  _5 = (long unsigned int) _4;
  _6 = _5 * 2;
  _7 = _2 + _6;
  _8 = *_7;
  _9 = (int) _8;
  _10 = _9 & 4;
  if (_10 != 0)
    goto <bb 5>; [0.00%]
  else
    goto <bb 4>; [0.00%]
;;    succ:       5
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  _11 = __ctype_b_loc ();
  _12 = *_11;
  _13 = *src_41;
  _14 = (unsigned char) _13;
  _15 = (long unsigned int) _14;
  _16 = _15 * 2;
  _17 = _12 + _16;
  _18 = *_17;
  _19 = (int) _18;
  _20 = _19 & 2048;
  if (_20 != 0)
    goto <bb 5>; [0.00%]
  else
    goto <bb 6>; [0.00%]
;;    succ:       5
;;                6

;;   basic block 5, loop depth 1
;;    pred:       3
;;                4
  src_57 = src_41 + 1;
  dst_58 = dst_42;
  goto <bb 11>; [0.00%]
;;    succ:       11

;;   basic block 6, loop depth 1
;;    pred:       4
  _21 = __ctype_b_loc ();
  _22 = *_21;
  _23 = *src_41;
  _24 = (unsigned char) _23;
  _25 = (long unsigned int) _24;
  _26 = _25 * 2;
  _27 = _22 + _26;
  _28 = *_27;
  _29 = (int) _28;
  _30 = _29 & 256;
  if (_30 != 0)
    goto <bb 7>; [0.00%]
  else
    goto <bb 8>; [0.00%]
;;    succ:       7
;;                8

;;   basic block 7, loop depth 1
;;    pred:       6
  _31 = *src_41;
  _32 = (unsigned char) _31;
  _33 = (int) _32;
  _34 = tolower (_33);
  dst.2_35 = dst_42;
  dst_54 = dst.2_35 + 1;
  _36 = (char) _34;
  *dst.2_35 = _36;
  src_56 = src_41 + 1;
  goto <bb 11>; [0.00%]
;;    succ:       11

;;   basic block 8, loop depth 1
;;    pred:       6
  if (src_41 == dst_42)
    goto <bb 9>; [0.00%]
  else
    goto <bb 10>; [0.00%]
;;    succ:       9
;;                10

;;   basic block 9, loop depth 1
;;    pred:       8
  src_52 = src_41 + 1;
  dst_53 = dst_42 + 1;
  goto <bb 11>; [0.00%]
;;    succ:       11

;;   basic block 10, loop depth 1
;;    pred:       8
  src.3_37 = src_41;
  src_49 = src.3_37 + 1;
  dst.4_38 = dst_42;
  dst_50 = dst.4_38 + 1;
  _39 = *src.3_37;
  *dst.4_38 = _39;
;;    succ:       11

;;   basic block 11, loop depth 1
;;    pred:       2
;;                5
;;                7
;;                9
;;                10
  # src_41 = PHI <src_45(2), src_57(5), src_56(7), src_52(9), src_49(10)>
  # dst_42 = PHI <dst_46(2), dst_58(5), dst_54(7), dst_53(9), dst_50(10)>
  _40 = *src_41;
  if (_40 != 0)
    goto <bb 3>; [0.00%]
  else
    goto <bb 12>; [0.00%]
;;    succ:       3
;;                12

;;   basic block 12, loop depth 0
;;    pred:       11
  *dst_42 = 0;
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (_26 - 26 )
Partition 27 (_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (_29 - 29 )
Partition 30 (_30 - 30 )
Partition 31 (_31 - 31 )
Partition 32 (_32 - 32 )
Partition 33 (_33 - 33 )
Partition 34 (_34 - 34 )
Partition 35 (dst.2_35 - 35 )
Partition 36 (_36 - 36 )
Partition 37 (src.3_37 - 37 )
Partition 38 (dst.4_38 - 38 )
Partition 39 (_39 - 39 )
Partition 40 (_40 - 40 )
Partition 41 (src_41 - 41 )
Partition 42 (dst_42 - 42 )
Partition 44 (p_44(D) - 44 )
Partition 45 (src_45 - 45 )
Partition 46 (dst_46 - 46 )
Partition 49 (src_49 - 49 )
Partition 50 (dst_50 - 50 )
Partition 52 (src_52 - 52 )
Partition 53 (dst_53 - 53 )
Partition 54 (dst_54 - 54 )
Partition 56 (src_56 - 56 )
Partition 57 (src_57 - 57 )
Partition 58 (dst_58 - 58 )


Partition map 

Partition 0 (src_41 - 41 )
Partition 1 (dst_42 - 42 )
Partition 2 (p_44(D) - 44 )
Partition 3 (src_45 - 45 )
Partition 4 (dst_46 - 46 )
Partition 5 (src_49 - 49 )
Partition 6 (dst_50 - 50 )
Partition 7 (src_52 - 52 )
Partition 8 (dst_53 - 53 )
Partition 9 (dst_54 - 54 )
Partition 10 (src_56 - 56 )
Partition 11 (src_57 - 57 )
Partition 12 (dst_58 - 58 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646, 0) dst_42 <-> dst_58
(2147483646, 0) src_41 <-> src_45
(2147483646, 0) dst_42 <-> dst_46
(2147483646, 0) src_41 <-> src_49
(2147483646, 0) dst_42 <-> dst_50
(2147483646, 0) src_41 <-> src_52
(2147483646, 0) dst_42 <-> dst_53
(2147483646, 0) dst_42 <-> dst_54
(2147483646, 0) src_41 <-> src_56
(2147483646, 0) src_41 <-> src_57

Partition map 

Partition 0 (src_41 - 41 )
Partition 1 (dst_42 - 42 )
Partition 2 (p_44(D) - 44 )
Partition 3 (src_45 - 45 )
Partition 4 (dst_46 - 46 )
Partition 5 (src_49 - 49 )
Partition 6 (dst_50 - 50 )
Partition 7 (src_52 - 52 )
Partition 8 (dst_53 - 53 )
Partition 9 (dst_54 - 54 )
Partition 10 (src_56 - 56 )
Partition 11 (src_57 - 57 )
Partition 12 (dst_58 - 58 )

Coalesce list: (42)dst_42 & (58)dst_58 [map: 1, 12] : Success -> 1
Coalesce list: (41)src_41 & (45)src_45 [map: 0, 3] : Success -> 0
Coalesce list: (42)dst_42 & (46)dst_46 [map: 1, 4] : Success -> 1
Coalesce list: (41)src_41 & (49)src_49 [map: 0, 5] : Success -> 0
Coalesce list: (42)dst_42 & (50)dst_50 [map: 1, 6] : Success -> 1
Coalesce list: (41)src_41 & (52)src_52 [map: 0, 7] : Success -> 0
Coalesce list: (42)dst_42 & (53)dst_53 [map: 1, 8] : Success -> 1
Coalesce list: (42)dst_42 & (54)dst_54 [map: 1, 9] : Success -> 1
Coalesce list: (41)src_41 & (56)src_56 [map: 0, 10] : Success -> 0
Coalesce list: (41)src_41 & (57)src_57 [map: 0, 11] : Success -> 0
Coalesce list: (42)dst_42 & (50)dst_42: Already Coalesced.
Coalesce list: (42)dst_42 & (53)dst_42: Already Coalesced.
Coalesce list: (42)dst_42 & (54)dst_42: Already Coalesced.
Coalesce list: (42)dst_42 & (58)dst_42: Already Coalesced.
Coalesce list: (42)dst_42 & (46)dst_42: Already Coalesced.
Coalesce list: (41)src_41 & (49)src_41: Already Coalesced.
Coalesce list: (41)src_41 & (52)src_41: Already Coalesced.
Coalesce list: (41)src_41 & (56)src_41: Already Coalesced.
Coalesce list: (41)src_41 & (57)src_41: Already Coalesced.
Coalesce list: (41)src_41 & (45)src_41: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (_8 - 8 )
Partition 8 (_9 - 9 )
Partition 9 (_10 - 10 )
Partition 10 (_11 - 11 )
Partition 11 (_12 - 12 )
Partition 12 (_13 - 13 )
Partition 13 (_14 - 14 )
Partition 14 (_15 - 15 )
Partition 15 (_16 - 16 )
Partition 16 (_17 - 17 )
Partition 17 (_18 - 18 )
Partition 18 (_19 - 19 )
Partition 19 (_20 - 20 )
Partition 20 (_21 - 21 )
Partition 21 (_22 - 22 )
Partition 22 (_23 - 23 )
Partition 23 (_24 - 24 )
Partition 24 (_25 - 25 )
Partition 25 (_26 - 26 )
Partition 26 (_27 - 27 )
Partition 27 (_28 - 28 )
Partition 28 (_29 - 29 )
Partition 29 (_30 - 30 )
Partition 30 (_31 - 31 )
Partition 31 (_32 - 32 )
Partition 32 (_33 - 33 )
Partition 33 (_34 - 34 )
Partition 34 (dst.2_35 - 35 )
Partition 35 (_36 - 36 )
Partition 36 (src.3_37 - 37 )
Partition 37 (dst.4_38 - 38 )
Partition 38 (_39 - 39 )
Partition 39 (_40 - 40 )
Partition 40 (src_41 - 41 45 49 52 56 57 )
Partition 41 (dst_42 - 42 46 50 53 54 58 )
Partition 42 (p_44(D) - 44 )

rmPunct2LowerFunc (char * p)
{
  char * dst;
  char * src;
  const short unsigned int * * _1;
  const short unsigned int * _2;
  char _3;
  unsigned char _4;
  long unsigned int _5;
  long unsigned int _6;
  const short unsigned int * _7;
  short unsigned int _8;
  int _9;
  int _10;
  const short unsigned int * * _11;
  const short unsigned int * _12;
  char _13;
  unsigned char _14;
  long unsigned int _15;
  long unsigned int _16;
  const short unsigned int * _17;
  short unsigned int _18;
  int _19;
  int _20;
  const short unsigned int * * _21;
  const short unsigned int * _22;
  char _23;
  unsigned char _24;
  long unsigned int _25;
  long unsigned int _26;
  const short unsigned int * _27;
  short unsigned int _28;
  int _29;
  int _30;
  char _31;
  unsigned char _32;
  int _33;
  int _34;
  char * dst.2_35;
  char _36;
  char * src.3_37;
  char * dst.4_38;
  char _39;
  char _40;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  src_45 = p_44(D);
  dst_46 = p_44(D);
  goto <bb 11>; [0.00%]
;;    succ:       11

;;   basic block 3, loop depth 1
;;    pred:       11
  _1 = __ctype_b_loc ();
  _2 = *_1;
  _3 = *src_41;
  _4 = (unsigned char) _3;
  _5 = (long unsigned int) _4;
  _6 = _5 * 2;
  _7 = _2 + _6;
  _8 = *_7;
  _9 = (int) _8;
  _10 = _9 & 4;
  if (_10 != 0)
    goto <bb 5>; [0.00%]
  else
    goto <bb 4>; [0.00%]
;;    succ:       5
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  _11 = __ctype_b_loc ();
  _12 = *_11;
  _13 = *src_41;
  _14 = (unsigned char) _13;
  _15 = (long unsigned int) _14;
  _16 = _15 * 2;
  _17 = _12 + _16;
  _18 = *_17;
  _19 = (int) _18;
  _20 = _19 & 2048;
  if (_20 != 0)
    goto <bb 5>; [0.00%]
  else
    goto <bb 6>; [0.00%]
;;    succ:       5
;;                6

;;   basic block 5, loop depth 1
;;    pred:       3
;;                4
  src_57 = src_41 + 1;
  dst_58 = dst_42;
  goto <bb 11>; [0.00%]
;;    succ:       11

;;   basic block 6, loop depth 1
;;    pred:       4
  _21 = __ctype_b_loc ();
  _22 = *_21;
  _23 = *src_41;
  _24 = (unsigned char) _23;
  _25 = (long unsigned int) _24;
  _26 = _25 * 2;
  _27 = _22 + _26;
  _28 = *_27;
  _29 = (int) _28;
  _30 = _29 & 256;
  if (_30 != 0)
    goto <bb 7>; [0.00%]
  else
    goto <bb 8>; [0.00%]
;;    succ:       7
;;                8

;;   basic block 7, loop depth 1
;;    pred:       6
  _31 = *src_41;
  _32 = (unsigned char) _31;
  _33 = (int) _32;
  _34 = tolower (_33);
  dst.2_35 = dst_42;
  dst_54 = dst.2_35 + 1;
  _36 = (char) _34;
  *dst.2_35 = _36;
  src_56 = src_41 + 1;
  goto <bb 11>; [0.00%]
;;    succ:       11

;;   basic block 8, loop depth 1
;;    pred:       6
  if (src_41 == dst_42)
    goto <bb 9>; [0.00%]
  else
    goto <bb 10>; [0.00%]
;;    succ:       9
;;                10

;;   basic block 9, loop depth 1
;;    pred:       8
  src_52 = src_41 + 1;
  dst_53 = dst_42 + 1;
  goto <bb 11>; [0.00%]
;;    succ:       11

;;   basic block 10, loop depth 1
;;    pred:       8
  src.3_37 = src_41;
  src_49 = src.3_37 + 1;
  dst.4_38 = dst_42;
  dst_50 = dst.4_38 + 1;
  _39 = *src.3_37;
  *dst.4_38 = _39;
;;    succ:       11

;;   basic block 11, loop depth 1
;;    pred:       2
;;                5
;;                7
;;                9
;;                10
  # src_41 = PHI <src_45(2), src_57(5), src_56(7), src_52(9), src_49(10)>
  # dst_42 = PHI <dst_46(2), dst_58(5), dst_54(7), dst_53(9), dst_50(10)>
  _40 = *src_41;
  if (_40 != 0)
    goto <bb 3>; [0.00%]
  else
    goto <bb 12>; [0.00%]
;;    succ:       3
;;                12

;;   basic block 12, loop depth 0
;;    pred:       11
  *dst_42 = 0;
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; src_45 = p_44(D);

(insn 6 5 7 (set (reg/f:DI 127)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 p+0 S8 A64])) "test1.c":107 -1
     (nil))

(insn 7 6 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 src+0 S8 A64])
        (reg/f:DI 127)) "test1.c":107 -1
     (nil))

;; dst_46 = p_44(D);

(insn 8 7 9 (set (reg/f:DI 128)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 p+0 S8 A64])) "test1.c":107 -1
     (nil))

(insn 9 8 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 dst+0 S8 A64])
        (reg/f:DI 128)) "test1.c":107 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _1 = __ctype_b_loc ();

(call_insn/u 13 12 14 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__ctype_b_loc") [flags 0x41]  <function_decl 0x7fa517e09400 __ctype_b_loc>) [0 __ctype_b_loc S1 A8])
            (const_int 0 [0]))) "test1.c":110 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 14 13 0 (set (reg/f:DI 87 [ _1 ])
        (reg:DI 0 ax)) "test1.c":110 -1
     (nil))

;; _2 = *_1;

(insn 15 14 0 (set (reg/f:DI 88 [ _2 ])
        (mem/f:DI (reg/f:DI 87 [ _1 ]) [5 *_1+0 S8 A64])) "test1.c":110 -1
     (nil))

;; _3 = *src_41;

(insn 16 15 17 (set (reg/f:DI 129)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 src+0 S8 A64])) "test1.c":110 -1
     (nil))

(insn 17 16 0 (set (reg:QI 89 [ _3 ])
        (mem:QI (reg/f:DI 129) [0 *src_41+0 S1 A8])) "test1.c":110 -1
     (nil))

;; _4 = (unsigned char) _3;

(insn 18 17 0 (set (reg:QI 90 [ _4 ])
        (reg:QI 89 [ _3 ])) "test1.c":110 -1
     (nil))

;; _5 = (long unsigned int) _4;

(insn 19 18 0 (set (reg:DI 91 [ _5 ])
        (zero_extend:DI (reg:QI 90 [ _4 ]))) "test1.c":110 -1
     (nil))

;; _6 = _5 * 2;

(insn 20 19 0 (parallel [
            (set (reg:DI 92 [ _6 ])
                (ashift:DI (reg:DI 91 [ _5 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":110 -1
     (nil))

;; _7 = _2 + _6;

(insn 21 20 0 (parallel [
            (set (reg/f:DI 93 [ _7 ])
                (plus:DI (reg/f:DI 88 [ _2 ])
                    (reg:DI 92 [ _6 ])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":110 -1
     (nil))

;; _8 = *_7;

(insn 22 21 0 (set (reg:HI 94 [ _8 ])
        (mem:HI (reg/f:DI 93 [ _7 ]) [6 *_7+0 S2 A16])) "test1.c":110 -1
     (nil))

;; _9 = (int) _8;

(insn 23 22 0 (set (reg:SI 95 [ _9 ])
        (zero_extend:SI (reg:HI 94 [ _8 ]))) "test1.c":110 -1
     (nil))

;; _10 = _9 & 4;

(insn 24 23 0 (parallel [
            (set (reg:SI 96 [ _10 ])
                (and:SI (reg:SI 95 [ _9 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":110 -1
     (nil))

;; if (_10 != 0)

(insn 25 24 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 96 [ _10 ])
            (const_int 0 [0]))) "test1.c":110 -1
     (nil))

(jump_insn 26 25 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "test1.c":110 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; _11 = __ctype_b_loc ();

(call_insn/u 28 27 29 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__ctype_b_loc") [flags 0x41]  <function_decl 0x7fa517e09400 __ctype_b_loc>) [0 __ctype_b_loc S1 A8])
            (const_int 0 [0]))) "test1.c":110 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 29 28 0 (set (reg/f:DI 97 [ _11 ])
        (reg:DI 0 ax)) "test1.c":110 -1
     (nil))

;; _12 = *_11;

(insn 30 29 0 (set (reg/f:DI 98 [ _12 ])
        (mem/f:DI (reg/f:DI 97 [ _11 ]) [5 *_11+0 S8 A64])) "test1.c":110 -1
     (nil))

;; _13 = *src_41;

(insn 31 30 32 (set (reg/f:DI 130)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 src+0 S8 A64])) "test1.c":110 -1
     (nil))

(insn 32 31 0 (set (reg:QI 99 [ _13 ])
        (mem:QI (reg/f:DI 130) [0 *src_41+0 S1 A8])) "test1.c":110 -1
     (nil))

;; _14 = (unsigned char) _13;

(insn 33 32 0 (set (reg:QI 100 [ _14 ])
        (reg:QI 99 [ _13 ])) "test1.c":110 -1
     (nil))

;; _15 = (long unsigned int) _14;

(insn 34 33 0 (set (reg:DI 101 [ _15 ])
        (zero_extend:DI (reg:QI 100 [ _14 ]))) "test1.c":110 -1
     (nil))

;; _16 = _15 * 2;

(insn 35 34 0 (parallel [
            (set (reg:DI 102 [ _16 ])
                (ashift:DI (reg:DI 101 [ _15 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":110 -1
     (nil))

;; _17 = _12 + _16;

(insn 36 35 0 (parallel [
            (set (reg/f:DI 103 [ _17 ])
                (plus:DI (reg/f:DI 98 [ _12 ])
                    (reg:DI 102 [ _16 ])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":110 -1
     (nil))

;; _18 = *_17;

(insn 37 36 0 (set (reg:HI 104 [ _18 ])
        (mem:HI (reg/f:DI 103 [ _17 ]) [6 *_17+0 S2 A16])) "test1.c":110 -1
     (nil))

;; _19 = (int) _18;

(insn 38 37 0 (set (reg:SI 105 [ _19 ])
        (zero_extend:SI (reg:HI 104 [ _18 ]))) "test1.c":110 -1
     (nil))

;; _20 = _19 & 2048;

(insn 39 38 0 (parallel [
            (set (reg:SI 106 [ _20 ])
                (and:SI (reg:SI 105 [ _19 ])
                    (const_int 2048 [0x800])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":110 -1
     (nil))

;; if (_20 != 0)

(insn 40 39 41 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 106 [ _20 ])
            (const_int 0 [0]))) "test1.c":110 -1
     (nil))

(jump_insn 41 40 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "test1.c":110 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; 

(code_label 42 41 43 23 (nil) [0 uses])

(note 43 42 0 NOTE_INSN_BASIC_BLOCK)

;; src_57 = src_41 + 1;

(insn 44 43 0 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [3 src+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [3 src+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":112 -1
     (nil))

;; dst_58 = dst_42;

(nil)

;; Generating RTL for gimple basic block 6

;; 

(code_label 47 46 48 24 (nil) [0 uses])

(note 48 47 0 NOTE_INSN_BASIC_BLOCK)

;; _21 = __ctype_b_loc ();

(call_insn/u 49 48 50 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__ctype_b_loc") [flags 0x41]  <function_decl 0x7fa517e09400 __ctype_b_loc>) [0 __ctype_b_loc S1 A8])
            (const_int 0 [0]))) "test1.c":114 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 50 49 0 (set (reg/f:DI 107 [ _21 ])
        (reg:DI 0 ax)) "test1.c":114 -1
     (nil))

;; _22 = *_21;

(insn 51 50 0 (set (reg/f:DI 108 [ _22 ])
        (mem/f:DI (reg/f:DI 107 [ _21 ]) [5 *_21+0 S8 A64])) "test1.c":114 -1
     (nil))

;; _23 = *src_41;

(insn 52 51 53 (set (reg/f:DI 131)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 src+0 S8 A64])) "test1.c":114 -1
     (nil))

(insn 53 52 0 (set (reg:QI 109 [ _23 ])
        (mem:QI (reg/f:DI 131) [0 *src_41+0 S1 A8])) "test1.c":114 -1
     (nil))

;; _24 = (unsigned char) _23;

(insn 54 53 0 (set (reg:QI 110 [ _24 ])
        (reg:QI 109 [ _23 ])) "test1.c":114 -1
     (nil))

;; _25 = (long unsigned int) _24;

(insn 55 54 0 (set (reg:DI 111 [ _25 ])
        (zero_extend:DI (reg:QI 110 [ _24 ]))) "test1.c":114 -1
     (nil))

;; _26 = _25 * 2;

(insn 56 55 0 (parallel [
            (set (reg:DI 112 [ _26 ])
                (ashift:DI (reg:DI 111 [ _25 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":114 -1
     (nil))

;; _27 = _22 + _26;

(insn 57 56 0 (parallel [
            (set (reg/f:DI 113 [ _27 ])
                (plus:DI (reg/f:DI 108 [ _22 ])
                    (reg:DI 112 [ _26 ])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":114 -1
     (nil))

;; _28 = *_27;

(insn 58 57 0 (set (reg:HI 114 [ _28 ])
        (mem:HI (reg/f:DI 113 [ _27 ]) [6 *_27+0 S2 A16])) "test1.c":114 -1
     (nil))

;; _29 = (int) _28;

(insn 59 58 0 (set (reg:SI 115 [ _29 ])
        (zero_extend:SI (reg:HI 114 [ _28 ]))) "test1.c":114 -1
     (nil))

;; _30 = _29 & 256;

(insn 60 59 0 (parallel [
            (set (reg:SI 116 [ _30 ])
                (and:SI (reg:SI 115 [ _29 ])
                    (const_int 256 [0x100])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":114 -1
     (nil))

;; if (_30 != 0)

(insn 61 60 62 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 116 [ _30 ])
            (const_int 0 [0]))) "test1.c":114 -1
     (nil))

(jump_insn 62 61 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "test1.c":114 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; _31 = *src_41;

(insn 64 63 65 (set (reg/f:DI 132)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 src+0 S8 A64])) "test1.c":116 -1
     (nil))

(insn 65 64 0 (set (reg:QI 117 [ _31 ])
        (mem:QI (reg/f:DI 132) [0 *src_41+0 S1 A8])) "test1.c":116 -1
     (nil))

;; _32 = (unsigned char) _31;

(insn 66 65 0 (set (reg:QI 118 [ _32 ])
        (reg:QI 117 [ _31 ])) "test1.c":116 -1
     (nil))

;; _33 = (int) _32;

(insn 67 66 0 (set (reg:SI 119 [ _33 ])
        (zero_extend:SI (reg:QI 118 [ _32 ]))) "test1.c":116 -1
     (nil))

;; _34 = tolower (_33);

(insn 68 67 69 (set (reg:SI 5 di)
        (reg:SI 119 [ _33 ])) "test1.c":116 -1
     (nil))

(call_insn/i 69 68 70 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("tolower") [flags 0x41]  <function_decl 0x7fa517d08d00 tolower>) [0 __builtin_tolower S1 A8])
            (const_int 0 [0]))) "test1.c":116 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))

(insn 70 69 0 (set (reg:SI 120 [ _34 ])
        (reg:SI 0 ax)) "test1.c":116 -1
     (nil))

;; dst.2_35 = dst_42;

(insn 71 70 0 (set (reg/f:DI 121 [ dst.2_35 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 dst+0 S8 A64])) "test1.c":116 -1
     (nil))

;; dst_54 = dst.2_35 + 1;

(insn 72 71 73 (parallel [
            (set (reg:DI 133)
                (plus:DI (reg/f:DI 121 [ dst.2_35 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":116 -1
     (nil))

(insn 73 72 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 dst+0 S8 A64])
        (reg:DI 133)) "test1.c":116 -1
     (nil))

;; _36 = (char) _34;

(insn 74 73 0 (set (reg:QI 122 [ _36 ])
        (subreg:QI (reg:SI 120 [ _34 ]) 0)) "test1.c":116 -1
     (nil))

;; *dst.2_35 = _36;

(insn 75 74 0 (set (mem:QI (reg/f:DI 121 [ dst.2_35 ]) [0 *dst.2_35+0 S1 A8])
        (reg:QI 122 [ _36 ])) "test1.c":116 -1
     (nil))

;; src_56 = src_41 + 1;

(insn 76 75 0 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [3 src+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [3 src+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":117 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; 

(code_label 79 78 80 25 (nil) [0 uses])

(note 80 79 0 NOTE_INSN_BASIC_BLOCK)

;; if (src_41 == dst_42)

(insn 81 80 82 (set (reg/f:DI 134)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 src+0 S8 A64])) "test1.c":119 -1
     (nil))

(insn 82 81 83 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 134)
            (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [3 dst+0 S8 A64]))) "test1.c":119 -1
     (nil))

(jump_insn 83 82 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "test1.c":119 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; src_52 = src_41 + 1;

(insn 85 84 0 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [3 src+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [3 src+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":121 -1
     (nil))

;; dst_53 = dst_42 + 1;

(insn 86 85 0 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -16 [0xfffffffffffffff0])) [3 dst+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -16 [0xfffffffffffffff0])) [3 dst+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":122 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; 

(code_label 89 88 90 26 (nil) [0 uses])

(note 90 89 0 NOTE_INSN_BASIC_BLOCK)

;; src.3_37 = src_41;

(insn 91 90 0 (set (reg/f:DI 123 [ src.3_37 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 src+0 S8 A64])) "test1.c":126 -1
     (nil))

;; src_49 = src.3_37 + 1;

(insn 92 91 93 (parallel [
            (set (reg:DI 135)
                (plus:DI (reg/f:DI 123 [ src.3_37 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":126 -1
     (nil))

(insn 93 92 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 src+0 S8 A64])
        (reg:DI 135)) "test1.c":126 -1
     (nil))

;; dst.4_38 = dst_42;

(insn 94 93 0 (set (reg/f:DI 124 [ dst.4_38 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 dst+0 S8 A64])) "test1.c":126 -1
     (nil))

;; dst_50 = dst.4_38 + 1;

(insn 95 94 96 (parallel [
            (set (reg:DI 136)
                (plus:DI (reg/f:DI 124 [ dst.4_38 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":126 -1
     (nil))

(insn 96 95 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 dst+0 S8 A64])
        (reg:DI 136)) "test1.c":126 -1
     (nil))

;; _39 = *src.3_37;

(insn 97 96 0 (set (reg:QI 125 [ _39 ])
        (mem:QI (reg/f:DI 123 [ src.3_37 ]) [0 *src.3_37+0 S1 A8])) "test1.c":126 -1
     (nil))

;; *dst.4_38 = _39;

(insn 98 97 0 (set (mem:QI (reg/f:DI 124 [ dst.4_38 ]) [0 *dst.4_38+0 S1 A8])
        (reg:QI 125 [ _39 ])) "test1.c":126 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; 

(code_label 99 98 100 22 (nil) [0 uses])

(note 100 99 0 NOTE_INSN_BASIC_BLOCK)

;; _40 = *src_41;

(insn 101 100 102 (set (reg/f:DI 137)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 src+0 S8 A64])) "test1.c":108 -1
     (nil))

(insn 102 101 0 (set (reg:QI 126 [ _40 ])
        (mem:QI (reg/f:DI 137) [0 *src_41+0 S1 A8])) "test1.c":108 -1
     (nil))

;; if (_40 != 0)

(insn 104 102 105 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 126 [ _40 ])
            (const_int 0 [0]))) "test1.c":108 -1
     (nil))

(jump_insn 105 104 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 103)
            (pc))) "test1.c":108 -1
     (nil))

;; Generating RTL for gimple basic block 12

;; *dst_42 = 0;

(insn 107 106 108 (set (reg/f:DI 138)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 dst+0 S8 A64])) "test1.c":129 -1
     (nil))

(insn 108 107 0 (set (mem:QI (reg/f:DI 138) [0 *dst_42+0 S1 A8])
        (const_int 0 [0])) "test1.c":129 -1
     (nil))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 14 into block 13...
Merged blocks 13 and 14.
Merged 13 and 14 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 p+0 S8 A64])
        (reg:DI 5 di [ p ])) "test1.c":106 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 127)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 p+0 S8 A64])) "test1.c":107 -1
     (nil))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 src+0 S8 A64])
        (reg/f:DI 127)) "test1.c":107 -1
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 128)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 p+0 S8 A64])) "test1.c":107 -1
     (nil))
(insn 9 8 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 dst+0 S8 A64])
        (reg/f:DI 128)) "test1.c":107 -1
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (label_ref 99)) "test1.c":108 -1
     (nil)
 -> 99)
;;  succ:       12

(barrier 11 10 103)
;; basic block 4, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       12
(code_label 103 11 12 4 27 (nil) [1 uses])
(note 12 103 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(call_insn/u 13 12 14 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__ctype_b_loc") [flags 0x41]  <function_decl 0x7fa517e09400 __ctype_b_loc>) [0 __ctype_b_loc S1 A8])
            (const_int 0 [0]))) "test1.c":110 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 14 13 15 4 (set (reg/f:DI 87 [ _1 ])
        (reg:DI 0 ax)) "test1.c":110 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 88 [ _2 ])
        (mem/f:DI (reg/f:DI 87 [ _1 ]) [5 *_1+0 S8 A64])) "test1.c":110 -1
     (nil))
(insn 16 15 17 4 (set (reg/f:DI 129)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 src+0 S8 A64])) "test1.c":110 -1
     (nil))
(insn 17 16 18 4 (set (reg:QI 89 [ _3 ])
        (mem:QI (reg/f:DI 129) [0 *src_41+0 S1 A8])) "test1.c":110 -1
     (nil))
(insn 18 17 19 4 (set (reg:QI 90 [ _4 ])
        (reg:QI 89 [ _3 ])) "test1.c":110 -1
     (nil))
(insn 19 18 20 4 (set (reg:DI 91 [ _5 ])
        (zero_extend:DI (reg:QI 90 [ _4 ]))) "test1.c":110 -1
     (nil))
(insn 20 19 21 4 (parallel [
            (set (reg:DI 92 [ _6 ])
                (ashift:DI (reg:DI 91 [ _5 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":110 -1
     (nil))
(insn 21 20 22 4 (parallel [
            (set (reg/f:DI 93 [ _7 ])
                (plus:DI (reg/f:DI 88 [ _2 ])
                    (reg:DI 92 [ _6 ])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":110 -1
     (nil))
(insn 22 21 23 4 (set (reg:HI 94 [ _8 ])
        (mem:HI (reg/f:DI 93 [ _7 ]) [6 *_7+0 S2 A16])) "test1.c":110 -1
     (nil))
(insn 23 22 24 4 (set (reg:SI 95 [ _9 ])
        (zero_extend:SI (reg:HI 94 [ _8 ]))) "test1.c":110 -1
     (nil))
(insn 24 23 25 4 (parallel [
            (set (reg:SI 96 [ _10 ])
                (and:SI (reg:SI 95 [ _9 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":110 -1
     (nil))
(insn 25 24 26 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 96 [ _10 ])
            (const_int 0 [0]))) "test1.c":110 -1
     (nil))
(jump_insn 26 25 27 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 42)
            (pc))) "test1.c":110 -1
     (nil)
 -> 42)
;;  succ:       6
;;              5 (FALLTHRU)

;; basic block 5, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 27 26 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(call_insn/u 28 27 29 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__ctype_b_loc") [flags 0x41]  <function_decl 0x7fa517e09400 __ctype_b_loc>) [0 __ctype_b_loc S1 A8])
            (const_int 0 [0]))) "test1.c":110 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 29 28 30 5 (set (reg/f:DI 97 [ _11 ])
        (reg:DI 0 ax)) "test1.c":110 -1
     (nil))
(insn 30 29 31 5 (set (reg/f:DI 98 [ _12 ])
        (mem/f:DI (reg/f:DI 97 [ _11 ]) [5 *_11+0 S8 A64])) "test1.c":110 -1
     (nil))
(insn 31 30 32 5 (set (reg/f:DI 130)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 src+0 S8 A64])) "test1.c":110 -1
     (nil))
(insn 32 31 33 5 (set (reg:QI 99 [ _13 ])
        (mem:QI (reg/f:DI 130) [0 *src_41+0 S1 A8])) "test1.c":110 -1
     (nil))
(insn 33 32 34 5 (set (reg:QI 100 [ _14 ])
        (reg:QI 99 [ _13 ])) "test1.c":110 -1
     (nil))
(insn 34 33 35 5 (set (reg:DI 101 [ _15 ])
        (zero_extend:DI (reg:QI 100 [ _14 ]))) "test1.c":110 -1
     (nil))
(insn 35 34 36 5 (parallel [
            (set (reg:DI 102 [ _16 ])
                (ashift:DI (reg:DI 101 [ _15 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":110 -1
     (nil))
(insn 36 35 37 5 (parallel [
            (set (reg/f:DI 103 [ _17 ])
                (plus:DI (reg/f:DI 98 [ _12 ])
                    (reg:DI 102 [ _16 ])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":110 -1
     (nil))
(insn 37 36 38 5 (set (reg:HI 104 [ _18 ])
        (mem:HI (reg/f:DI 103 [ _17 ]) [6 *_17+0 S2 A16])) "test1.c":110 -1
     (nil))
(insn 38 37 39 5 (set (reg:SI 105 [ _19 ])
        (zero_extend:SI (reg:HI 104 [ _18 ]))) "test1.c":110 -1
     (nil))
(insn 39 38 40 5 (parallel [
            (set (reg:SI 106 [ _20 ])
                (and:SI (reg:SI 105 [ _19 ])
                    (const_int 2048 [0x800])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":110 -1
     (nil))
(insn 40 39 41 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 106 [ _20 ])
            (const_int 0 [0]))) "test1.c":110 -1
     (nil))
(jump_insn 41 40 42 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 47)
            (pc))) "test1.c":110 -1
     (nil)
 -> 47)
;;  succ:       6 (FALLTHRU)
;;              7

;; basic block 6, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
;;              5 (FALLTHRU)
(code_label 42 41 43 6 23 (nil) [1 uses])
(note 43 42 44 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 6 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [3 src+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [3 src+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":112 -1
     (nil))
(jump_insn 45 44 46 6 (set (pc)
        (label_ref 99)) "test1.c":112 -1
     (nil)
 -> 99)
;;  succ:       12 (DFS_BACK)

(barrier 46 45 47)
;; basic block 7, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
(code_label 47 46 48 7 24 (nil) [1 uses])
(note 48 47 49 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(call_insn/u 49 48 50 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__ctype_b_loc") [flags 0x41]  <function_decl 0x7fa517e09400 __ctype_b_loc>) [0 __ctype_b_loc S1 A8])
            (const_int 0 [0]))) "test1.c":114 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 50 49 51 7 (set (reg/f:DI 107 [ _21 ])
        (reg:DI 0 ax)) "test1.c":114 -1
     (nil))
(insn 51 50 52 7 (set (reg/f:DI 108 [ _22 ])
        (mem/f:DI (reg/f:DI 107 [ _21 ]) [5 *_21+0 S8 A64])) "test1.c":114 -1
     (nil))
(insn 52 51 53 7 (set (reg/f:DI 131)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 src+0 S8 A64])) "test1.c":114 -1
     (nil))
(insn 53 52 54 7 (set (reg:QI 109 [ _23 ])
        (mem:QI (reg/f:DI 131) [0 *src_41+0 S1 A8])) "test1.c":114 -1
     (nil))
(insn 54 53 55 7 (set (reg:QI 110 [ _24 ])
        (reg:QI 109 [ _23 ])) "test1.c":114 -1
     (nil))
(insn 55 54 56 7 (set (reg:DI 111 [ _25 ])
        (zero_extend:DI (reg:QI 110 [ _24 ]))) "test1.c":114 -1
     (nil))
(insn 56 55 57 7 (parallel [
            (set (reg:DI 112 [ _26 ])
                (ashift:DI (reg:DI 111 [ _25 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":114 -1
     (nil))
(insn 57 56 58 7 (parallel [
            (set (reg/f:DI 113 [ _27 ])
                (plus:DI (reg/f:DI 108 [ _22 ])
                    (reg:DI 112 [ _26 ])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":114 -1
     (nil))
(insn 58 57 59 7 (set (reg:HI 114 [ _28 ])
        (mem:HI (reg/f:DI 113 [ _27 ]) [6 *_27+0 S2 A16])) "test1.c":114 -1
     (nil))
(insn 59 58 60 7 (set (reg:SI 115 [ _29 ])
        (zero_extend:SI (reg:HI 114 [ _28 ]))) "test1.c":114 -1
     (nil))
(insn 60 59 61 7 (parallel [
            (set (reg:SI 116 [ _30 ])
                (and:SI (reg:SI 115 [ _29 ])
                    (const_int 256 [0x100])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":114 -1
     (nil))
(insn 61 60 62 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 116 [ _30 ])
            (const_int 0 [0]))) "test1.c":114 -1
     (nil))
(jump_insn 62 61 63 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 79)
            (pc))) "test1.c":114 -1
     (nil)
 -> 79)
;;  succ:       8 (FALLTHRU)
;;              9

;; basic block 8, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
(note 63 62 64 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 8 (set (reg/f:DI 132)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 src+0 S8 A64])) "test1.c":116 -1
     (nil))
(insn 65 64 66 8 (set (reg:QI 117 [ _31 ])
        (mem:QI (reg/f:DI 132) [0 *src_41+0 S1 A8])) "test1.c":116 -1
     (nil))
(insn 66 65 67 8 (set (reg:QI 118 [ _32 ])
        (reg:QI 117 [ _31 ])) "test1.c":116 -1
     (nil))
(insn 67 66 68 8 (set (reg:SI 119 [ _33 ])
        (zero_extend:SI (reg:QI 118 [ _32 ]))) "test1.c":116 -1
     (nil))
(insn 68 67 69 8 (set (reg:SI 5 di)
        (reg:SI 119 [ _33 ])) "test1.c":116 -1
     (nil))
(call_insn/i 69 68 70 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("tolower") [flags 0x41]  <function_decl 0x7fa517d08d00 tolower>) [0 __builtin_tolower S1 A8])
            (const_int 0 [0]))) "test1.c":116 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 70 69 71 8 (set (reg:SI 120 [ _34 ])
        (reg:SI 0 ax)) "test1.c":116 -1
     (nil))
(insn 71 70 72 8 (set (reg/f:DI 121 [ dst.2_35 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 dst+0 S8 A64])) "test1.c":116 -1
     (nil))
(insn 72 71 73 8 (parallel [
            (set (reg:DI 133)
                (plus:DI (reg/f:DI 121 [ dst.2_35 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":116 -1
     (nil))
(insn 73 72 74 8 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 dst+0 S8 A64])
        (reg:DI 133)) "test1.c":116 -1
     (nil))
(insn 74 73 75 8 (set (reg:QI 122 [ _36 ])
        (subreg:QI (reg:SI 120 [ _34 ]) 0)) "test1.c":116 -1
     (nil))
(insn 75 74 76 8 (set (mem:QI (reg/f:DI 121 [ dst.2_35 ]) [0 *dst.2_35+0 S1 A8])
        (reg:QI 122 [ _36 ])) "test1.c":116 -1
     (nil))
(insn 76 75 77 8 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [3 src+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [3 src+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":117 -1
     (nil))
(jump_insn 77 76 78 8 (set (pc)
        (label_ref 99)) -1
     (nil)
 -> 99)
;;  succ:       12 (DFS_BACK)

(barrier 78 77 79)
;; basic block 9, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
(code_label 79 78 80 9 25 (nil) [1 uses])
(note 80 79 81 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 9 (set (reg/f:DI 134)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 src+0 S8 A64])) "test1.c":119 -1
     (nil))
(insn 82 81 83 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 134)
            (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [3 dst+0 S8 A64]))) "test1.c":119 -1
     (nil))
(jump_insn 83 82 84 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 89)
            (pc))) "test1.c":119 -1
     (nil)
 -> 89)
;;  succ:       10 (FALLTHRU)
;;              11

;; basic block 10, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 (FALLTHRU)
(note 84 83 85 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 86 10 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [3 src+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [3 src+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":121 -1
     (nil))
(insn 86 85 87 10 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -16 [0xfffffffffffffff0])) [3 dst+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -16 [0xfffffffffffffff0])) [3 dst+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":122 -1
     (nil))
(jump_insn 87 86 88 10 (set (pc)
        (label_ref 99)) -1
     (nil)
 -> 99)
;;  succ:       12 (DFS_BACK)

(barrier 88 87 89)
;; basic block 11, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       9
(code_label 89 88 90 11 26 (nil) [1 uses])
(note 90 89 91 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 92 11 (set (reg/f:DI 123 [ src.3_37 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 src+0 S8 A64])) "test1.c":126 -1
     (nil))
(insn 92 91 93 11 (parallel [
            (set (reg:DI 135)
                (plus:DI (reg/f:DI 123 [ src.3_37 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":126 -1
     (nil))
(insn 93 92 94 11 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 src+0 S8 A64])
        (reg:DI 135)) "test1.c":126 -1
     (nil))
(insn 94 93 95 11 (set (reg/f:DI 124 [ dst.4_38 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 dst+0 S8 A64])) "test1.c":126 -1
     (nil))
(insn 95 94 96 11 (parallel [
            (set (reg:DI 136)
                (plus:DI (reg/f:DI 124 [ dst.4_38 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":126 -1
     (nil))
(insn 96 95 97 11 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 dst+0 S8 A64])
        (reg:DI 136)) "test1.c":126 -1
     (nil))
(insn 97 96 98 11 (set (reg:QI 125 [ _39 ])
        (mem:QI (reg/f:DI 123 [ src.3_37 ]) [0 *src.3_37+0 S1 A8])) "test1.c":126 -1
     (nil))
(insn 98 97 99 11 (set (mem:QI (reg/f:DI 124 [ dst.4_38 ]) [0 *dst.4_38+0 S1 A8])
        (reg:QI 125 [ _39 ])) "test1.c":126 -1
     (nil))
;;  succ:       12 (FALLTHRU,DFS_BACK)

;; basic block 12, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              6 (DFS_BACK)
;;              8 (DFS_BACK)
;;              10 (DFS_BACK)
;;              11 (FALLTHRU,DFS_BACK)
(code_label 99 98 100 12 22 (nil) [4 uses])
(note 100 99 101 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 101 100 102 12 (set (reg/f:DI 137)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 src+0 S8 A64])) "test1.c":108 -1
     (nil))
(insn 102 101 104 12 (set (reg:QI 126 [ _40 ])
        (mem:QI (reg/f:DI 137) [0 *src_41+0 S1 A8])) "test1.c":108 -1
     (nil))
(insn 104 102 105 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 126 [ _40 ])
            (const_int 0 [0]))) "test1.c":108 -1
     (nil))
(jump_insn 105 104 106 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 103)
            (pc))) "test1.c":108 -1
     (nil)
 -> 103)
;;  succ:       4
;;              13 (FALLTHRU)

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       12 (FALLTHRU)
(note 106 105 107 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 107 106 108 13 (set (reg/f:DI 138)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 dst+0 S8 A64])) "test1.c":129 -1
     (nil))
(insn 108 107 111 13 (set (mem:QI (reg/f:DI 138) [0 *dst_42+0 S1 A8])
        (const_int 0 [0])) "test1.c":129 -1
     (nil))
(insn 111 108 0 13 (const_int 0 [0]) "test1.c":130 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function readFunc (readFunc, funcdef_no=10, decl_uid=3270, cgraph_uid=10, symbol_order=13)

readFunc (const char * filename, int index)
{
  char word[1000];
  struct FILE * fp;
  long unsigned int D.3366;
  char[5000000] * D.3367;
  char[5000000] * _1;
  char[5000000] * _2;
  int _3;
  long unsigned int _16;
  char[5000000] * _17;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  fp_9 = fopen (filename_7(D), "r");
  if (fp_9 == 0B)
    goto <bb 3>; [0.00%]
  else
    goto <bb 4>; [0.00%]
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  printf ("input file is invalid !");
  word ={v} {CLOBBER};
  goto <bb 8> (<L7>); [0.00%]
;;    succ:       8

;;   basic block 4, loop depth 0
;;    pred:       2
  goto <bb 6>; [0.00%]
;;    succ:       6

;;   basic block 5, loop depth 1
;;    pred:       6
  rmPunct2LowerFunc (&word);
  _1 = &text[index_14(D)];
  strcat (_1, &word);
  _2 = &text[index_14(D)];
  _16 = __builtin_strlen (_2);
  _17 = _2 + _16;
  __builtin_memcpy (_17, " ", 2);
;;    succ:       6

;;   basic block 6, loop depth 1
;;    pred:       4
;;                5
  _3 = fscanf (fp_9, " %s", &word);
  if (_3 == 1)
    goto <bb 5>; [0.00%]
  else
    goto <bb 7>; [0.00%]
;;    succ:       5
;;                7

;;   basic block 7, loop depth 0
;;    pred:       6
  fclose (fp_9);
  word ={v} {CLOBBER};
;;    succ:       8

;;   basic block 8, loop depth 0
;;    pred:       7
;;                3
<L7> [0.00%]:
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 7 (filename_7(D) - 7 )
Partition 9 (fp_9 - 9 )
Partition 14 (index_14(D) - 14 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )


Partition map 

Partition 0 (filename_7(D) - 7 )
Partition 1 (index_14(D) - 14 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (filename_7(D) - 7 )
Partition 1 (index_14(D) - 14 )

After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (filename_7(D) - 7 )
Partition 4 (fp_9 - 9 )
Partition 5 (index_14(D) - 14 )
Partition 6 (_16 - 16 )
Partition 7 (_17 - 17 )

readFunc (const char * filename, int index)
{
  char word[1000];
  struct FILE * fp;
  long unsigned int D.3366;
  char[5000000] * D.3367;
  char[5000000] * _1;
  char[5000000] * _2;
  int _3;
  long unsigned int _16;
  char[5000000] * _17;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  fp_9 = fopen (filename_7(D), "r");
  if (fp_9 == 0B)
    goto <bb 3>; [0.00%]
  else
    goto <bb 4>; [0.00%]
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  printf ("input file is invalid !");
  word ={v} {CLOBBER};
  goto <bb 8> (<L7>); [0.00%]
;;    succ:       8

;;   basic block 4, loop depth 0
;;    pred:       2
  goto <bb 6>; [0.00%]
;;    succ:       6

;;   basic block 5, loop depth 1
;;    pred:       6
  rmPunct2LowerFunc (&word);
  _1 = &text[index_14(D)];
  strcat (_1, &word);
  _2 = &text[index_14(D)];
  _16 = __builtin_strlen (_2);
  _17 = _2 + _16;
  __builtin_memcpy (_17, " ", 2);
;;    succ:       6

;;   basic block 6, loop depth 1
;;    pred:       4
;;                5
  _3 = fscanf (fp_9, " %s", &word);
  if (_3 == 1)
    goto <bb 5>; [0.00%]
  else
    goto <bb 7>; [0.00%]
;;    succ:       5
;;                7

;;   basic block 7, loop depth 0
;;    pred:       6
  fclose (fp_9);
  word ={v} {CLOBBER};
;;    succ:       8

;;   basic block 8, loop depth 0
;;    pred:       7
;;                3
<L7> [0.00%]:
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; fp_9 = fopen (filename_7(D), "r");

(insn 7 6 8 (set (reg:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1016 [0xfffffffffffffc08])) [3 filename+0 S8 A64])) "test1.c":135 -1
     (nil))

(insn 8 7 9 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fa517adce10 *.LC2>)) "test1.c":135 -1
     (nil))

(insn 9 8 10 (set (reg:DI 5 di)
        (reg:DI 92)) "test1.c":135 -1
     (nil))

(call_insn 10 9 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7fa517dd2a00 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) "test1.c":135 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 11 10 12 (set (reg:DI 93)
        (reg:DI 0 ax)) "test1.c":135 -1
     (nil))

(insn 12 11 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [7 fp+0 S8 A64])
        (reg:DI 93)) "test1.c":135 -1
     (nil))

;; if (fp_9 == 0B)

(insn 13 12 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [7 fp+0 S8 A64])
            (const_int 0 [0]))) "test1.c":137 -1
     (nil))

(jump_insn 14 13 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "test1.c":137 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; printf ("input file is invalid !");

(insn 16 15 17 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7fa517adcea0 *.LC3>)) "test1.c":139 -1
     (nil))

(insn 17 16 18 (set (reg:QI 0 ax)
        (const_int 0 [0])) "test1.c":139 -1
     (nil))

(call_insn 18 17 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fa517cfff00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "test1.c":139 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; word ={v} {CLOBBER};

(nil)

;; Generating RTL for gimple basic block 4

;; 

(code_label 21 20 22 29 (nil) [0 uses])

(note 22 21 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 5

;; rmPunct2LowerFunc (&word);

(insn 26 25 27 (parallel [
            (set (reg:DI 94)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1008 [0xfffffffffffffc10])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":145 -1
     (nil))

(insn 27 26 28 (set (reg:DI 5 di)
        (reg:DI 94)) "test1.c":145 -1
     (nil))

(call_insn 28 27 0 (call (mem:QI (symbol_ref:DI ("rmPunct2LowerFunc") [flags 0x3]  <function_decl 0x7fa517a7c200 rmPunct2LowerFunc>) [0 rmPunct2LowerFunc S1 A8])
        (const_int 0 [0])) "test1.c":145 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
Applying pattern match.pd:84, generic-match.c:11461

;; _1 = &text[index_14(D)];

(insn 29 28 30 (set (reg:SI 96)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1020 [0xfffffffffffffc04])) [1 index+0 S4 A32])) "test1.c":146 -1
     (nil))

(insn 30 29 31 (set (reg:DI 95)
        (sign_extend:DI (reg:SI 96))) "test1.c":146 -1
     (nil))

(insn 31 30 32 (parallel [
            (set (reg:DI 97)
                (mult:DI (reg:DI 95)
                    (const_int 5000000 [0x4c4b40])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":146 -1
     (nil))

(insn 32 31 33 (set (reg:DI 98)
        (symbol_ref:DI ("text") [flags 0x2]  <var_decl 0x7fa517daaea0 text>)) "test1.c":146 -1
     (nil))

(insn 33 32 0 (parallel [
            (set (reg/f:DI 87 [ _1 ])
                (plus:DI (reg:DI 97)
                    (reg:DI 98)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":146 -1
     (nil))

;; strcat (_1, &word);

(insn 34 33 35 (parallel [
            (set (reg:DI 99)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1008 [0xfffffffffffffc10])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":146 -1
     (nil))

(insn 35 34 36 (set (reg:DI 4 si)
        (reg:DI 99)) "test1.c":146 -1
     (nil))

(insn 36 35 37 (set (reg:DI 5 di)
        (reg/f:DI 87 [ _1 ])) "test1.c":146 -1
     (nil))

(call_insn 37 36 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcat") [flags 0x41]  <function_decl 0x7fa517cf7900 strcat>) [0 __builtin_strcat S1 A8])
            (const_int 0 [0]))) "test1.c":146 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
Applying pattern match.pd:84, generic-match.c:11461

;; _2 = &text[index_14(D)];

(insn 38 37 39 (set (reg:SI 101)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1020 [0xfffffffffffffc04])) [1 index+0 S4 A32])) "test1.c":147 -1
     (nil))

(insn 39 38 40 (set (reg:DI 100)
        (sign_extend:DI (reg:SI 101))) "test1.c":147 -1
     (nil))

(insn 40 39 41 (parallel [
            (set (reg:DI 102)
                (mult:DI (reg:DI 100)
                    (const_int 5000000 [0x4c4b40])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":147 -1
     (nil))

(insn 41 40 42 (set (reg:DI 103)
        (symbol_ref:DI ("text") [flags 0x2]  <var_decl 0x7fa517daaea0 text>)) "test1.c":147 -1
     (nil))

(insn 42 41 0 (parallel [
            (set (reg/f:DI 88 [ _2 ])
                (plus:DI (reg:DI 102)
                    (reg:DI 103)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":147 -1
     (nil))

;; _16 = __builtin_strlen (_2);

(insn 49 42 43 (set (reg:DI 104)
        (reg/f:DI 88 [ _2 ])) "test1.c":147 -1
     (nil))

(insn 43 49 44 (set (reg:DI 108)
        (const_int -1 [0xffffffffffffffff])) "test1.c":147 -1
     (nil))

(insn 44 43 45 (set (reg:DI 107)
        (reg:DI 104)) "test1.c":147 -1
     (nil))

(insn 45 44 46 (set (reg:QI 109)
        (const_int 0 [0])) "test1.c":147 -1
     (nil))

(insn 46 45 47 (parallel [
            (set (reg:DI 105)
                (unspec:DI [
                        (mem:BLK (reg:DI 107) [0  A8])
                        (reg:QI 109)
                        (const_int 1 [0x1])
                        (reg:DI 108)
                    ] UNSPEC_SCAS))
            (clobber (reg:DI 107))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":147 -1
     (nil))

(insn 47 46 48 (set (reg:DI 106)
        (not:DI (reg:DI 105))) "test1.c":147 -1
     (nil))

(insn 48 47 0 (parallel [
            (set (reg:DI 90 [ _16 ])
                (plus:DI (reg:DI 106)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":147 -1
     (nil))

;; _17 = _2 + _16;

(insn 50 48 0 (parallel [
            (set (reg/f:DI 91 [ _17 ])
                (plus:DI (reg/f:DI 88 [ _2 ])
                    (reg:DI 90 [ _16 ])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":147 -1
     (nil))

;; __builtin_memcpy (_17, " ", 2);

(insn 51 50 0 (set (mem:HI (reg/f:DI 91 [ _17 ]) [0 MEM[(void *)_17]+0 S2 A8])
        (const_int 32 [0x20])) "test1.c":147 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 52 51 53 31 (nil) [0 uses])

(note 53 52 0 NOTE_INSN_BASIC_BLOCK)

;; _3 = fscanf (fp_9, " %s", &word);

(insn 54 53 55 (parallel [
            (set (reg:DI 110)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1008 [0xfffffffffffffc10])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":143 -1
     (nil))

(insn 55 54 56 (set (reg:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [7 fp+0 S8 A64])) "test1.c":143 -1
     (nil))

(insn 56 55 57 (set (reg:DI 1 dx)
        (reg:DI 110)) "test1.c":143 -1
     (nil))

(insn 57 56 58 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7fa517adcf30 *.LC4>)) "test1.c":143 -1
     (nil))

(insn 58 57 59 (set (reg:DI 5 di)
        (reg:DI 111)) "test1.c":143 -1
     (nil))

(insn 59 58 60 (set (reg:QI 0 ax)
        (const_int 0 [0])) "test1.c":143 -1
     (nil))

(call_insn 60 59 61 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_fscanf") [flags 0x41]  <function_decl 0x7fa517cff900 fscanf>) [0 __builtin_fscanf S1 A8])
            (const_int 0 [0]))) "test1.c":143 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))

(insn 61 60 0 (set (reg:SI 89 [ _3 ])
        (reg:SI 0 ax)) "test1.c":143 -1
     (nil))

;; if (_3 == 1)

(insn 63 61 64 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ _3 ])
            (const_int 1 [0x1]))) "test1.c":143 -1
     (nil))

(jump_insn 64 63 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 62)
            (pc))) "test1.c":143 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; fclose (fp_9);

(insn 66 65 67 (set (reg:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [7 fp+0 S8 A64])) "test1.c":149 -1
     (nil))

(insn 67 66 68 (set (reg:DI 5 di)
        (reg:DI 112)) "test1.c":149 -1
     (nil))

(call_insn 68 67 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7fa517dd2700 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) "test1.c":149 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; word ={v} {CLOBBER};

(nil)

;; Generating RTL for gimple basic block 8

;; <L7> [0.00%]:

(code_label 69 68 70 30 (nil) [0 uses])

(note 70 69 0 NOTE_INSN_BASIC_BLOCK)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 19 from 9 to 10.
Merging block 9 into block 8...
Merged blocks 8 and 9.
Merged 8 and 9 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1016 [0xfffffffffffffc08])) [3 filename+0 S8 A64])
        (reg:DI 5 di [ filename ])) "test1.c":134 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1020 [0xfffffffffffffc04])) [1 index+0 S4 A32])
        (reg:SI 4 si [ index ])) "test1.c":134 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1016 [0xfffffffffffffc08])) [3 filename+0 S8 A64])) "test1.c":135 -1
     (nil))
(insn 8 7 9 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fa517adce10 *.LC2>)) "test1.c":135 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg:DI 92)) "test1.c":135 -1
     (nil))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7fa517dd2a00 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) "test1.c":135 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 11 10 12 2 (set (reg:DI 93)
        (reg:DI 0 ax)) "test1.c":135 -1
     (nil))
(insn 12 11 13 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [7 fp+0 S8 A64])
        (reg:DI 93)) "test1.c":135 -1
     (nil))
(insn 13 12 14 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [7 fp+0 S8 A64])
            (const_int 0 [0]))) "test1.c":137 -1
     (nil))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) "test1.c":137 -1
     (nil)
 -> 21)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7fa517adcea0 *.LC3>)) "test1.c":139 -1
     (nil))
(insn 17 16 18 4 (set (reg:QI 0 ax)
        (const_int 0 [0])) "test1.c":139 -1
     (nil))
(call_insn 18 17 19 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fa517cfff00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "test1.c":139 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(jump_insn 19 18 20 4 (set (pc)
        (label_ref:DI 71)) "test1.c":140 659 {jump}
     (nil)
 -> 71)
;;  succ:       10 [100.0%] 

(barrier 20 19 21)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
(code_label 21 20 22 5 29 (nil) [1 uses])
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(jump_insn 23 22 24 5 (set (pc)
        (label_ref 52)) "test1.c":143 -1
     (nil)
 -> 52)
;;  succ:       7

(barrier 24 23 62)
;; basic block 6, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
(code_label 62 24 25 6 32 (nil) [1 uses])
(note 25 62 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 6 (parallel [
            (set (reg:DI 94)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1008 [0xfffffffffffffc10])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":145 -1
     (nil))
(insn 27 26 28 6 (set (reg:DI 5 di)
        (reg:DI 94)) "test1.c":145 -1
     (nil))
(call_insn 28 27 29 6 (call (mem:QI (symbol_ref:DI ("rmPunct2LowerFunc") [flags 0x3]  <function_decl 0x7fa517a7c200 rmPunct2LowerFunc>) [0 rmPunct2LowerFunc S1 A8])
        (const_int 0 [0])) "test1.c":145 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 29 28 30 6 (set (reg:SI 96)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1020 [0xfffffffffffffc04])) [1 index+0 S4 A32])) "test1.c":146 -1
     (nil))
(insn 30 29 31 6 (set (reg:DI 95)
        (sign_extend:DI (reg:SI 96))) "test1.c":146 -1
     (nil))
(insn 31 30 32 6 (parallel [
            (set (reg:DI 97)
                (mult:DI (reg:DI 95)
                    (const_int 5000000 [0x4c4b40])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":146 -1
     (nil))
(insn 32 31 33 6 (set (reg:DI 98)
        (symbol_ref:DI ("text") [flags 0x2]  <var_decl 0x7fa517daaea0 text>)) "test1.c":146 -1
     (nil))
(insn 33 32 34 6 (parallel [
            (set (reg/f:DI 87 [ _1 ])
                (plus:DI (reg:DI 97)
                    (reg:DI 98)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":146 -1
     (nil))
(insn 34 33 35 6 (parallel [
            (set (reg:DI 99)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1008 [0xfffffffffffffc10])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":146 -1
     (nil))
(insn 35 34 36 6 (set (reg:DI 4 si)
        (reg:DI 99)) "test1.c":146 -1
     (nil))
(insn 36 35 37 6 (set (reg:DI 5 di)
        (reg/f:DI 87 [ _1 ])) "test1.c":146 -1
     (nil))
(call_insn 37 36 38 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcat") [flags 0x41]  <function_decl 0x7fa517cf7900 strcat>) [0 __builtin_strcat S1 A8])
            (const_int 0 [0]))) "test1.c":146 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 38 37 39 6 (set (reg:SI 101)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1020 [0xfffffffffffffc04])) [1 index+0 S4 A32])) "test1.c":147 -1
     (nil))
(insn 39 38 40 6 (set (reg:DI 100)
        (sign_extend:DI (reg:SI 101))) "test1.c":147 -1
     (nil))
(insn 40 39 41 6 (parallel [
            (set (reg:DI 102)
                (mult:DI (reg:DI 100)
                    (const_int 5000000 [0x4c4b40])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":147 -1
     (nil))
(insn 41 40 42 6 (set (reg:DI 103)
        (symbol_ref:DI ("text") [flags 0x2]  <var_decl 0x7fa517daaea0 text>)) "test1.c":147 -1
     (nil))
(insn 42 41 49 6 (parallel [
            (set (reg/f:DI 88 [ _2 ])
                (plus:DI (reg:DI 102)
                    (reg:DI 103)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":147 -1
     (nil))
(insn 49 42 43 6 (set (reg:DI 104)
        (reg/f:DI 88 [ _2 ])) "test1.c":147 -1
     (nil))
(insn 43 49 44 6 (set (reg:DI 108)
        (const_int -1 [0xffffffffffffffff])) "test1.c":147 -1
     (nil))
(insn 44 43 45 6 (set (reg:DI 107)
        (reg:DI 104)) "test1.c":147 -1
     (nil))
(insn 45 44 46 6 (set (reg:QI 109)
        (const_int 0 [0])) "test1.c":147 -1
     (nil))
(insn 46 45 47 6 (parallel [
            (set (reg:DI 105)
                (unspec:DI [
                        (mem:BLK (reg:DI 107) [0  A8])
                        (reg:QI 109)
                        (const_int 1 [0x1])
                        (reg:DI 108)
                    ] UNSPEC_SCAS))
            (clobber (reg:DI 107))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":147 -1
     (nil))
(insn 47 46 48 6 (set (reg:DI 106)
        (not:DI (reg:DI 105))) "test1.c":147 -1
     (nil))
(insn 48 47 50 6 (parallel [
            (set (reg:DI 90 [ _16 ])
                (plus:DI (reg:DI 106)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":147 -1
     (nil))
(insn 50 48 51 6 (parallel [
            (set (reg/f:DI 91 [ _17 ])
                (plus:DI (reg/f:DI 88 [ _2 ])
                    (reg:DI 90 [ _16 ])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":147 -1
     (nil))
(insn 51 50 52 6 (set (mem:HI (reg/f:DI 91 [ _17 ]) [0 MEM[(void *)_17]+0 S2 A8])
        (const_int 32 [0x20])) "test1.c":147 -1
     (nil))
;;  succ:       7 (FALLTHRU,DFS_BACK)

;; basic block 7, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
;;              6 (FALLTHRU,DFS_BACK)
(code_label 52 51 53 7 31 (nil) [1 uses])
(note 53 52 54 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 7 (parallel [
            (set (reg:DI 110)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1008 [0xfffffffffffffc10])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":143 -1
     (nil))
(insn 55 54 56 7 (set (reg:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [7 fp+0 S8 A64])) "test1.c":143 -1
     (nil))
(insn 56 55 57 7 (set (reg:DI 1 dx)
        (reg:DI 110)) "test1.c":143 -1
     (nil))
(insn 57 56 58 7 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7fa517adcf30 *.LC4>)) "test1.c":143 -1
     (nil))
(insn 58 57 59 7 (set (reg:DI 5 di)
        (reg:DI 111)) "test1.c":143 -1
     (nil))
(insn 59 58 60 7 (set (reg:QI 0 ax)
        (const_int 0 [0])) "test1.c":143 -1
     (nil))
(call_insn 60 59 61 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_fscanf") [flags 0x41]  <function_decl 0x7fa517cff900 fscanf>) [0 __builtin_fscanf S1 A8])
            (const_int 0 [0]))) "test1.c":143 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 61 60 63 7 (set (reg:SI 89 [ _3 ])
        (reg:SI 0 ax)) "test1.c":143 -1
     (nil))
(insn 63 61 64 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ _3 ])
            (const_int 1 [0x1]))) "test1.c":143 -1
     (nil))
(jump_insn 64 63 65 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 62)
            (pc))) "test1.c":143 -1
     (nil)
 -> 62)
;;  succ:       6
;;              8 (FALLTHRU)

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
(note 65 64 66 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 8 (set (reg:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [7 fp+0 S8 A64])) "test1.c":149 -1
     (nil))
(insn 67 66 68 8 (set (reg:DI 5 di)
        (reg:DI 112)) "test1.c":149 -1
     (nil))
(call_insn 68 67 71 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7fa517dd2700 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) "test1.c":149 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       10 (FALLTHRU)

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 (FALLTHRU)
;;              4 [100.0%] 
(code_label 71 68 72 10 28 (nil) [1 uses])
(note 72 71 0 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function mapperFunc (mapperFunc, funcdef_no=11, decl_uid=3278, cgraph_uid=11, symbol_order=14)

mapperFunc (int index)
{
  char * nextWord;
  char[5000000] * _1;
  struct Node * _2;
  struct Node * _3;
  int _4;
  int _5;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = &text[index_9(D)];
  nextWord_12 = strtok (_1, " \r\n");
  goto <bb 7>; [0.00%]
;;    succ:       7

;;   basic block 3, loop depth 1
;;    pred:       7
  _2 = hashTableLookupFunc (nextWord_6, index_9(D));
  if (_2 == 0B)
    goto <bb 4>; [0.00%]
  else
    goto <bb 5>; [0.00%]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 1
;;    pred:       3
  hashTableInsertFunc (nextWord_6, 1, index_9(D));
  goto <bb 6>; [0.00%]
;;    succ:       6

;;   basic block 5, loop depth 1
;;    pred:       3
  _3 = hashTableLookupFunc (nextWord_6, index_9(D));
  _4 = _3->Value;
  _5 = _4 + 1;
  _3->Value = _5;
;;    succ:       6

;;   basic block 6, loop depth 1
;;    pred:       4
;;                5
  nextWord_18 = strtok (0B, " \r\n");
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                6
  # nextWord_6 = PHI <nextWord_12(2), nextWord_18(6)>
  if (nextWord_6 != 0B)
    goto <bb 3>; [0.00%]
  else
    goto <bb 8>; [0.00%]
;;    succ:       3
;;                8

;;   basic block 8, loop depth 0
;;    pred:       7
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (nextWord_6 - 6 )
Partition 9 (index_9(D) - 9 )
Partition 12 (nextWord_12 - 12 )
Partition 18 (nextWord_18 - 18 )


Partition map 

Partition 0 (nextWord_6 - 6 )
Partition 1 (index_9(D) - 9 )
Partition 2 (nextWord_12 - 12 )
Partition 3 (nextWord_18 - 18 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646, 0) nextWord_6 <-> nextWord_12
(2147483646, 0) nextWord_6 <-> nextWord_18

Partition map 

Partition 0 (nextWord_6 - 6 )
Partition 1 (index_9(D) - 9 )
Partition 2 (nextWord_12 - 12 )
Partition 3 (nextWord_18 - 18 )

Coalesce list: (6)nextWord_6 & (12)nextWord_12 [map: 0, 2] : Success -> 0
Coalesce list: (6)nextWord_6 & (18)nextWord_18 [map: 0, 3] : Success -> 0
Coalesce list: (6)nextWord_6 & (18)nextWord_6: Already Coalesced.
Coalesce list: (6)nextWord_6 & (12)nextWord_6: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (nextWord_6 - 6 12 18 )
Partition 6 (index_9(D) - 9 )

mapperFunc (int index)
{
  char * nextWord;
  char[5000000] * _1;
  struct Node * _2;
  struct Node * _3;
  int _4;
  int _5;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = &text[index_9(D)];
  nextWord_12 = strtok (_1, " \r\n");
  goto <bb 7>; [0.00%]
;;    succ:       7

;;   basic block 3, loop depth 1
;;    pred:       7
  _2 = hashTableLookupFunc (nextWord_6, index_9(D));
  if (_2 == 0B)
    goto <bb 4>; [0.00%]
  else
    goto <bb 5>; [0.00%]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 1
;;    pred:       3
  hashTableInsertFunc (nextWord_6, 1, index_9(D));
  goto <bb 6>; [0.00%]
;;    succ:       6

;;   basic block 5, loop depth 1
;;    pred:       3
  _3 = hashTableLookupFunc (nextWord_6, index_9(D));
  _4 = _3->Value;
  _5 = _4 + 1;
  _3->Value = _5;
;;    succ:       6

;;   basic block 6, loop depth 1
;;    pred:       4
;;                5
  nextWord_18 = strtok (0B, " \r\n");
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                6
  # nextWord_6 = PHI <nextWord_12(2), nextWord_18(6)>
  if (nextWord_6 != 0B)
    goto <bb 3>; [0.00%]
  else
    goto <bb 8>; [0.00%]
;;    succ:       3
;;                8

;;   basic block 8, loop depth 0
;;    pred:       7
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2
Applying pattern match.pd:84, generic-match.c:11461

;; _1 = &text[index_9(D)];

(insn 6 5 7 (set (reg:SI 93)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 index+0 S4 A32])) "test1.c":157 -1
     (nil))

(insn 7 6 8 (set (reg:DI 92)
        (sign_extend:DI (reg:SI 93))) "test1.c":157 -1
     (nil))

(insn 8 7 9 (parallel [
            (set (reg:DI 94)
                (mult:DI (reg:DI 92)
                    (const_int 5000000 [0x4c4b40])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":157 -1
     (nil))

(insn 9 8 10 (set (reg:DI 95)
        (symbol_ref:DI ("text") [flags 0x2]  <var_decl 0x7fa517daaea0 text>)) "test1.c":157 -1
     (nil))

(insn 10 9 0 (parallel [
            (set (reg/f:DI 87 [ _1 ])
                (plus:DI (reg:DI 94)
                    (reg:DI 95)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":157 -1
     (nil))

;; nextWord_12 = strtok (_1, " \r\n");

(insn 11 10 12 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7fa517aea630 *.LC5>)) "test1.c":157 -1
     (nil))

(insn 12 11 13 (set (reg:DI 5 di)
        (reg/f:DI 87 [ _1 ])) "test1.c":157 -1
     (nil))

(call_insn 13 12 14 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7fa517dee000 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) "test1.c":157 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 14 13 15 (set (reg:DI 96)
        (reg:DI 0 ax)) "test1.c":157 -1
     (nil))

(insn 15 14 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 nextWord+0 S8 A64])
        (reg:DI 96)) "test1.c":157 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _2 = hashTableLookupFunc (nextWord_6, index_9(D));

(insn 19 18 20 (set (reg:SI 97)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 index+0 S4 A32])) "test1.c":162 -1
     (nil))

(insn 20 19 21 (set (reg:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 nextWord+0 S8 A64])) "test1.c":162 -1
     (nil))

(insn 21 20 22 (set (reg:SI 4 si)
        (reg:SI 97)) "test1.c":162 -1
     (nil))

(insn 22 21 23 (set (reg:DI 5 di)
        (reg:DI 98)) "test1.c":162 -1
     (nil))

(call_insn 23 22 24 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("hashTableLookupFunc") [flags 0x3]  <function_decl 0x7fa517a72e00 hashTableLookupFunc>) [0 hashTableLookupFunc S1 A8])
            (const_int 0 [0]))) "test1.c":162 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))

(insn 24 23 0 (set (reg/f:DI 88 [ _2 ])
        (reg:DI 0 ax)) "test1.c":162 -1
     (nil))

;; if (_2 == 0B)

(insn 25 24 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 88 [ _2 ])
            (const_int 0 [0]))) "test1.c":162 -1
     (nil))

(jump_insn 26 25 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "test1.c":162 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; hashTableInsertFunc (nextWord_6, 1, index_9(D));

(insn 28 27 29 (set (reg:SI 99)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 index+0 S4 A32])) "test1.c":164 -1
     (nil))

(insn 29 28 30 (set (reg:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 nextWord+0 S8 A64])) "test1.c":164 -1
     (nil))

(insn 30 29 31 (set (reg:SI 1 dx)
        (reg:SI 99)) "test1.c":164 -1
     (nil))

(insn 31 30 32 (set (reg:SI 4 si)
        (const_int 1 [0x1])) "test1.c":164 -1
     (nil))

(insn 32 31 33 (set (reg:DI 5 di)
        (reg:DI 100)) "test1.c":164 -1
     (nil))

(call_insn 33 32 0 (call (mem:QI (symbol_ref:DI ("hashTableInsertFunc") [flags 0x3]  <function_decl 0x7fa517a72c00 hashTableInsertFunc>) [0 hashTableInsertFunc S1 A8])
        (const_int 0 [0])) "test1.c":164 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; Generating RTL for gimple basic block 5

;; 

(code_label 36 35 37 35 (nil) [0 uses])

(note 37 36 0 NOTE_INSN_BASIC_BLOCK)

;; _3 = hashTableLookupFunc (nextWord_6, index_9(D));

(insn 38 37 39 (set (reg:SI 101)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 index+0 S4 A32])) "test1.c":168 -1
     (nil))

(insn 39 38 40 (set (reg:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 nextWord+0 S8 A64])) "test1.c":168 -1
     (nil))

(insn 40 39 41 (set (reg:SI 4 si)
        (reg:SI 101)) "test1.c":168 -1
     (nil))

(insn 41 40 42 (set (reg:DI 5 di)
        (reg:DI 102)) "test1.c":168 -1
     (nil))

(call_insn 42 41 43 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("hashTableLookupFunc") [flags 0x3]  <function_decl 0x7fa517a72e00 hashTableLookupFunc>) [0 hashTableLookupFunc S1 A8])
            (const_int 0 [0]))) "test1.c":168 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))

(insn 43 42 0 (set (reg/f:DI 89 [ _3 ])
        (reg:DI 0 ax)) "test1.c":168 -1
     (nil))

;; _4 = _3->Value;

(insn 44 43 0 (set (reg:SI 90 [ _4 ])
        (mem:SI (plus:DI (reg/f:DI 89 [ _3 ])
                (const_int 8 [0x8])) [1 _3->Value+0 S4 A64])) "test1.c":168 -1
     (nil))

;; _5 = _4 + 1;

(insn 45 44 0 (parallel [
            (set (reg:SI 91 [ _5 ])
                (plus:SI (reg:SI 90 [ _4 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":168 -1
     (nil))

;; _3->Value = _5;

(insn 46 45 0 (set (mem:SI (plus:DI (reg/f:DI 89 [ _3 ])
                (const_int 8 [0x8])) [1 _3->Value+0 S4 A64])
        (reg:SI 91 [ _5 ])) "test1.c":168 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 47 46 48 36 (nil) [0 uses])

(note 48 47 0 NOTE_INSN_BASIC_BLOCK)

;; nextWord_18 = strtok (0B, " \r\n");

(insn 49 48 50 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7fa517aea630 *.LC5>)) "test1.c":170 -1
     (nil))

(insn 50 49 51 (set (reg:DI 5 di)
        (const_int 0 [0])) "test1.c":170 -1
     (nil))

(call_insn 51 50 52 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7fa517dee000 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) "test1.c":170 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 52 51 53 (set (reg:DI 103)
        (reg:DI 0 ax)) "test1.c":170 -1
     (nil))

(insn 53 52 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 nextWord+0 S8 A64])
        (reg:DI 103)) "test1.c":170 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; 

(code_label 54 53 55 34 (nil) [0 uses])

(note 55 54 0 NOTE_INSN_BASIC_BLOCK)

;; if (nextWord_6 != 0B)

(insn 57 55 58 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [3 nextWord+0 S8 A64])
            (const_int 0 [0]))) "test1.c":158 -1
     (nil))

(jump_insn 58 57 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) "test1.c":158 -1
     (nil))

;; Generating RTL for gimple basic block 8


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 8->9 to 10 failed.
Merging block 10 into block 9...
Merged blocks 9 and 10.
Merged 9 and 10 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 index+0 S4 A32])
        (reg:SI 5 di [ index ])) "test1.c":155 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:SI 93)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 index+0 S4 A32])) "test1.c":157 -1
     (nil))
(insn 7 6 8 2 (set (reg:DI 92)
        (sign_extend:DI (reg:SI 93))) "test1.c":157 -1
     (nil))
(insn 8 7 9 2 (parallel [
            (set (reg:DI 94)
                (mult:DI (reg:DI 92)
                    (const_int 5000000 [0x4c4b40])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":157 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 95)
        (symbol_ref:DI ("text") [flags 0x2]  <var_decl 0x7fa517daaea0 text>)) "test1.c":157 -1
     (nil))
(insn 10 9 11 2 (parallel [
            (set (reg/f:DI 87 [ _1 ])
                (plus:DI (reg:DI 94)
                    (reg:DI 95)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":157 -1
     (nil))
(insn 11 10 12 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7fa517aea630 *.LC5>)) "test1.c":157 -1
     (nil))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ _1 ])) "test1.c":157 -1
     (nil))
(call_insn 13 12 14 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7fa517dee000 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) "test1.c":157 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 14 13 15 2 (set (reg:DI 96)
        (reg:DI 0 ax)) "test1.c":157 -1
     (nil))
(insn 15 14 16 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 nextWord+0 S8 A64])
        (reg:DI 96)) "test1.c":157 -1
     (nil))
(jump_insn 16 15 17 2 (set (pc)
        (label_ref 54)) "test1.c":158 -1
     (nil)
 -> 54)
;;  succ:       8

(barrier 17 16 56)
;; basic block 4, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       8
(code_label 56 17 18 4 37 (nil) [1 uses])
(note 18 56 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (set (reg:SI 97)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 index+0 S4 A32])) "test1.c":162 -1
     (nil))
(insn 20 19 21 4 (set (reg:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 nextWord+0 S8 A64])) "test1.c":162 -1
     (nil))
(insn 21 20 22 4 (set (reg:SI 4 si)
        (reg:SI 97)) "test1.c":162 -1
     (nil))
(insn 22 21 23 4 (set (reg:DI 5 di)
        (reg:DI 98)) "test1.c":162 -1
     (nil))
(call_insn 23 22 24 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("hashTableLookupFunc") [flags 0x3]  <function_decl 0x7fa517a72e00 hashTableLookupFunc>) [0 hashTableLookupFunc S1 A8])
            (const_int 0 [0]))) "test1.c":162 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 24 23 25 4 (set (reg/f:DI 88 [ _2 ])
        (reg:DI 0 ax)) "test1.c":162 -1
     (nil))
(insn 25 24 26 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 88 [ _2 ])
            (const_int 0 [0]))) "test1.c":162 -1
     (nil))
(jump_insn 26 25 27 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) "test1.c":162 -1
     (nil)
 -> 36)
;;  succ:       5 (FALLTHRU)
;;              6

;; basic block 5, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 27 26 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 5 (set (reg:SI 99)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 index+0 S4 A32])) "test1.c":164 -1
     (nil))
(insn 29 28 30 5 (set (reg:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 nextWord+0 S8 A64])) "test1.c":164 -1
     (nil))
(insn 30 29 31 5 (set (reg:SI 1 dx)
        (reg:SI 99)) "test1.c":164 -1
     (nil))
(insn 31 30 32 5 (set (reg:SI 4 si)
        (const_int 1 [0x1])) "test1.c":164 -1
     (nil))
(insn 32 31 33 5 (set (reg:DI 5 di)
        (reg:DI 100)) "test1.c":164 -1
     (nil))
(call_insn 33 32 34 5 (call (mem:QI (symbol_ref:DI ("hashTableInsertFunc") [flags 0x3]  <function_decl 0x7fa517a72c00 hashTableInsertFunc>) [0 hashTableInsertFunc S1 A8])
        (const_int 0 [0])) "test1.c":164 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(jump_insn 34 33 35 5 (set (pc)
        (label_ref 47)) -1
     (nil)
 -> 47)
;;  succ:       7

(barrier 35 34 36)
;; basic block 6, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
(code_label 36 35 37 6 35 (nil) [1 uses])
(note 37 36 38 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 6 (set (reg:SI 101)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 index+0 S4 A32])) "test1.c":168 -1
     (nil))
(insn 39 38 40 6 (set (reg:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 nextWord+0 S8 A64])) "test1.c":168 -1
     (nil))
(insn 40 39 41 6 (set (reg:SI 4 si)
        (reg:SI 101)) "test1.c":168 -1
     (nil))
(insn 41 40 42 6 (set (reg:DI 5 di)
        (reg:DI 102)) "test1.c":168 -1
     (nil))
(call_insn 42 41 43 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("hashTableLookupFunc") [flags 0x3]  <function_decl 0x7fa517a72e00 hashTableLookupFunc>) [0 hashTableLookupFunc S1 A8])
            (const_int 0 [0]))) "test1.c":168 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 43 42 44 6 (set (reg/f:DI 89 [ _3 ])
        (reg:DI 0 ax)) "test1.c":168 -1
     (nil))
(insn 44 43 45 6 (set (reg:SI 90 [ _4 ])
        (mem:SI (plus:DI (reg/f:DI 89 [ _3 ])
                (const_int 8 [0x8])) [1 _3->Value+0 S4 A64])) "test1.c":168 -1
     (nil))
(insn 45 44 46 6 (parallel [
            (set (reg:SI 91 [ _5 ])
                (plus:SI (reg:SI 90 [ _4 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":168 -1
     (nil))
(insn 46 45 47 6 (set (mem:SI (plus:DI (reg/f:DI 89 [ _3 ])
                (const_int 8 [0x8])) [1 _3->Value+0 S4 A64])
        (reg:SI 91 [ _5 ])) "test1.c":168 -1
     (nil))
;;  succ:       7 (FALLTHRU)

;; basic block 7, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
;;              6 (FALLTHRU)
(code_label 47 46 48 7 36 (nil) [1 uses])
(note 48 47 49 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 7 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7fa517aea630 *.LC5>)) "test1.c":170 -1
     (nil))
(insn 50 49 51 7 (set (reg:DI 5 di)
        (const_int 0 [0])) "test1.c":170 -1
     (nil))
(call_insn 51 50 52 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7fa517dee000 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) "test1.c":170 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 52 51 53 7 (set (reg:DI 103)
        (reg:DI 0 ax)) "test1.c":170 -1
     (nil))
(insn 53 52 54 7 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 nextWord+0 S8 A64])
        (reg:DI 103)) "test1.c":170 -1
     (nil))
;;  succ:       8 (FALLTHRU,DFS_BACK)

;; basic block 8, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              7 (FALLTHRU,DFS_BACK)
(code_label 54 53 55 8 34 (nil) [1 uses])
(note 55 54 57 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 57 55 58 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [3 nextWord+0 S8 A64])
            (const_int 0 [0]))) "test1.c":158 -1
     (nil))
(jump_insn 58 57 59 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) "test1.c":158 -1
     (nil)
 -> 56)
;;  succ:       4
;;              9 (FALLTHRU)

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 (FALLTHRU)
(note 59 58 62 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 62 59 0 9 (const_int 0 [0]) "test1.c":173 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function reducerFunc (reducerFunc, funcdef_no=12, decl_uid=3285, cgraph_uid=12, symbol_order=15)

reducerFunc (int reduceCount)
{
  int val;
  struct Node * pHead;
  int j;
  int i;
  struct Node * D.3379;
  struct Node * _1;
  char * _2;
  struct Node * _3;
  int _4;
  char * _5;
  char * _6;
  int _7;
  int _8;
  struct Node * _26;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  i_17 = 0;
  goto <bb 14>; [0.00%]
;;    succ:       14

;;   basic block 3, loop depth 1
;;    pred:       14
  j_20 = 0;
  goto <bb 12>; [0.00%]
;;    succ:       12

;;   basic block 4, loop depth 2
;;    pred:       12
  _1 = hashTable[i_9][j_10];
  if (_1 != 0B)
    goto <bb 5>; [0.00%]
  else
    goto <bb 11>; [0.00%]
;;    succ:       5
;;                11

;;   basic block 5, loop depth 2
;;    pred:       4
  pHead_22 = hashTable[i_9][j_10];
  goto <bb 10>; [0.00%]
;;    succ:       10

;;   basic block 6, loop depth 3
;;    pred:       10
  _2 = pHead_11->Key;
  _3 = hashTableLookupFunc (_2, 100);
  if (_3 == 0B)
    goto <bb 7>; [0.00%]
  else
    goto <bb 8>; [0.00%]
;;    succ:       7
;;                8

;;   basic block 7, loop depth 3
;;    pred:       6
  _4 = pHead_11->Value;
  _5 = pHead_11->Key;
  hashTableInsertFunc (_5, _4, 100);
  goto <bb 9>; [0.00%]
;;    succ:       9

;;   basic block 8, loop depth 3
;;    pred:       6
  val_24 = pHead_11->Value;
  _6 = pHead_11->Key;
  _26 = hashTableLookupFunc (_6, 100);
  _7 = _26->Value;
  _8 = val_24 + _7;
  _26->Value = _8;
;;    succ:       9

;;   basic block 9, loop depth 3
;;    pred:       7
;;                8
  pHead_29 = pHead_11->pNext;
;;    succ:       10

;;   basic block 10, loop depth 3
;;    pred:       5
;;                9
  # pHead_11 = PHI <pHead_22(5), pHead_29(9)>
  if (pHead_11 != 0B)
    goto <bb 6>; [0.00%]
  else
    goto <bb 11>; [0.00%]
;;    succ:       6
;;                11

;;   basic block 11, loop depth 2
;;    pred:       4
;;                10
  j_30 = j_10 + 1;
;;    succ:       12

;;   basic block 12, loop depth 2
;;    pred:       3
;;                11
  # j_10 = PHI <j_20(3), j_30(11)>
  if (j_10 <= 99999)
    goto <bb 4>; [0.00%]
  else
    goto <bb 13>; [0.00%]
;;    succ:       4
;;                13

;;   basic block 13, loop depth 1
;;    pred:       12
  i_21 = i_9 + 1;
;;    succ:       14

;;   basic block 14, loop depth 1
;;    pred:       2
;;                13
  # i_9 = PHI <i_17(2), i_21(13)>
  if (i_9 < reduceCount_19(D))
    goto <bb 3>; [0.00%]
  else
    goto <bb 15>; [0.00%]
;;    succ:       3
;;                15

;;   basic block 15, loop depth 0
;;    pred:       14
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (i_9 - 9 )
Partition 10 (j_10 - 10 )
Partition 11 (pHead_11 - 11 )
Partition 17 (i_17 - 17 )
Partition 19 (reduceCount_19(D) - 19 )
Partition 20 (j_20 - 20 )
Partition 21 (i_21 - 21 )
Partition 22 (pHead_22 - 22 )
Partition 24 (val_24 - 24 )
Partition 26 (_26 - 26 )
Partition 29 (pHead_29 - 29 )
Partition 30 (j_30 - 30 )


Partition map 

Partition 0 (i_9 - 9 )
Partition 1 (j_10 - 10 )
Partition 2 (pHead_11 - 11 )
Partition 3 (i_17 - 17 )
Partition 4 (reduceCount_19(D) - 19 )
Partition 5 (j_20 - 20 )
Partition 6 (i_21 - 21 )
Partition 7 (pHead_22 - 22 )
Partition 8 (pHead_29 - 29 )
Partition 9 (j_30 - 30 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646, 0) i_9 <-> i_17
(2147483646, 0) j_10 <-> j_20
(2147483646, 0) i_9 <-> i_21
(2147483646, 0) pHead_11 <-> pHead_22
(2147483646, 0) pHead_11 <-> pHead_29
(2147483646, 0) j_10 <-> j_30

Partition map 

Partition 0 (i_9 - 9 )
Partition 1 (j_10 - 10 )
Partition 2 (pHead_11 - 11 )
Partition 3 (i_17 - 17 )
Partition 4 (reduceCount_19(D) - 19 )
Partition 5 (j_20 - 20 )
Partition 6 (i_21 - 21 )
Partition 7 (pHead_22 - 22 )
Partition 8 (pHead_29 - 29 )
Partition 9 (j_30 - 30 )

Coalesce list: (9)i_9 & (17)i_17 [map: 0, 3] : Success -> 0
Coalesce list: (10)j_10 & (20)j_20 [map: 1, 5] : Success -> 1
Coalesce list: (9)i_9 & (21)i_21 [map: 0, 6] : Success -> 0
Coalesce list: (11)pHead_11 & (22)pHead_22 [map: 2, 7] : Success -> 2
Coalesce list: (11)pHead_11 & (29)pHead_29 [map: 2, 8] : Success -> 2
Coalesce list: (10)j_10 & (30)j_30 [map: 1, 9] : Success -> 1
Coalesce list: (9)i_9 & (21)i_9: Already Coalesced.
Coalesce list: (9)i_9 & (17)i_9: Already Coalesced.
Coalesce list: (10)j_10 & (30)j_10: Already Coalesced.
Coalesce list: (10)j_10 & (20)j_10: Already Coalesced.
Coalesce list: (11)pHead_11 & (29)pHead_11: Already Coalesced.
Coalesce list: (11)pHead_11 & (22)pHead_11: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (_8 - 8 )
Partition 8 (i_9 - 9 17 21 )
Partition 9 (j_10 - 10 20 30 )
Partition 10 (pHead_11 - 11 22 29 )
Partition 11 (reduceCount_19(D) - 19 )
Partition 12 (val_24 - 24 )
Partition 13 (_26 - 26 )

reducerFunc (int reduceCount)
{
  int val;
  struct Node * pHead;
  int j;
  int i;
  struct Node * D.3379;
  struct Node * _1;
  char * _2;
  struct Node * _3;
  int _4;
  char * _5;
  char * _6;
  int _7;
  int _8;
  struct Node * _26;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  i_17 = 0;
  goto <bb 14>; [0.00%]
;;    succ:       14

;;   basic block 3, loop depth 1
;;    pred:       14
  j_20 = 0;
  goto <bb 12>; [0.00%]
;;    succ:       12

;;   basic block 4, loop depth 2
;;    pred:       12
  _1 = hashTable[i_9][j_10];
  if (_1 != 0B)
    goto <bb 5>; [0.00%]
  else
    goto <bb 11>; [0.00%]
;;    succ:       5
;;                11

;;   basic block 5, loop depth 2
;;    pred:       4
  pHead_22 = hashTable[i_9][j_10];
  goto <bb 10>; [0.00%]
;;    succ:       10

;;   basic block 6, loop depth 3
;;    pred:       10
  _2 = pHead_11->Key;
  _3 = hashTableLookupFunc (_2, 100);
  if (_3 == 0B)
    goto <bb 7>; [0.00%]
  else
    goto <bb 8>; [0.00%]
;;    succ:       7
;;                8

;;   basic block 7, loop depth 3
;;    pred:       6
  _4 = pHead_11->Value;
  _5 = pHead_11->Key;
  hashTableInsertFunc (_5, _4, 100);
  goto <bb 9>; [0.00%]
;;    succ:       9

;;   basic block 8, loop depth 3
;;    pred:       6
  val_24 = pHead_11->Value;
  _6 = pHead_11->Key;
  _26 = hashTableLookupFunc (_6, 100);
  _7 = _26->Value;
  _8 = val_24 + _7;
  _26->Value = _8;
;;    succ:       9

;;   basic block 9, loop depth 3
;;    pred:       7
;;                8
  pHead_29 = pHead_11->pNext;
;;    succ:       10

;;   basic block 10, loop depth 3
;;    pred:       5
;;                9
  # pHead_11 = PHI <pHead_22(5), pHead_29(9)>
  if (pHead_11 != 0B)
    goto <bb 6>; [0.00%]
  else
    goto <bb 11>; [0.00%]
;;    succ:       6
;;                11

;;   basic block 11, loop depth 2
;;    pred:       4
;;                10
  j_30 = j_10 + 1;
;;    succ:       12

;;   basic block 12, loop depth 2
;;    pred:       3
;;                11
  # j_10 = PHI <j_20(3), j_30(11)>
  if (j_10 <= 99999)
    goto <bb 4>; [0.00%]
  else
    goto <bb 13>; [0.00%]
;;    succ:       4
;;                13

;;   basic block 13, loop depth 1
;;    pred:       12
  i_21 = i_9 + 1;
;;    succ:       14

;;   basic block 14, loop depth 1
;;    pred:       2
;;                13
  # i_9 = PHI <i_17(2), i_21(13)>
  if (i_9 < reduceCount_19(D))
    goto <bb 3>; [0.00%]
  else
    goto <bb 15>; [0.00%]
;;    succ:       3
;;                15

;;   basic block 15, loop depth 0
;;    pred:       14
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; i_17 = 0;

(insn 6 5 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 0 [0])) "test1.c":179 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; j_20 = 0;

(insn 10 9 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
        (const_int 0 [0])) "test1.c":181 -1
     (nil))

;; Generating RTL for gimple basic block 4
Applying pattern match.pd:84, generic-match.c:11461
Applying pattern match.pd:84, generic-match.c:11461
Applying pattern match.pd:84, generic-match.c:11461

;; _1 = hashTable[i_9][j_10];

(insn 14 13 15 (set (reg:SI 97)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "test1.c":184 -1
     (nil))

(insn 15 14 16 (set (reg:DI 96)
        (sign_extend:DI (reg:SI 97))) "test1.c":184 -1
     (nil))

(insn 16 15 17 (set (reg:SI 99)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "test1.c":184 -1
     (nil))

(insn 17 16 18 (set (reg:DI 98)
        (sign_extend:DI (reg:SI 99))) "test1.c":184 -1
     (nil))

(insn 18 17 19 (parallel [
            (set (reg:DI 100)
                (mult:DI (reg:DI 98)
                    (const_int 100000 [0x186a0])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":184 -1
     (nil))

(insn 19 18 20 (parallel [
            (set (reg:DI 101)
                (plus:DI (reg:DI 100)
                    (reg:DI 96)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":184 -1
     (nil))

(insn 20 19 21 (parallel [
            (set (reg:DI 102)
                (ashift:DI (reg:DI 101)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":184 -1
     (nil))

(insn 21 20 22 (set (reg:DI 103)
        (symbol_ref:DI ("hashTable") [flags 0x2]  <var_decl 0x7fa517a76000 hashTable>)) "test1.c":184 -1
     (nil))

(insn 22 21 0 (set (reg/f:DI 87 [ _1 ])
        (mem/f:DI (plus:DI (reg:DI 102)
                (reg:DI 103)) [2 hashTable S8 A64])) "test1.c":184 -1
     (nil))

;; if (_1 != 0B)

(insn 23 22 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 87 [ _1 ])
            (const_int 0 [0]))) "test1.c":184 -1
     (nil))

(jump_insn 24 23 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "test1.c":184 -1
     (nil))

;; Generating RTL for gimple basic block 5
Applying pattern match.pd:84, generic-match.c:11461
Applying pattern match.pd:84, generic-match.c:11461
Applying pattern match.pd:84, generic-match.c:11461

;; pHead_22 = hashTable[i_9][j_10];

(insn 26 25 27 (set (reg:SI 105)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "test1.c":186 -1
     (nil))

(insn 27 26 28 (set (reg:DI 104)
        (sign_extend:DI (reg:SI 105))) "test1.c":186 -1
     (nil))

(insn 28 27 29 (set (reg:SI 107)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "test1.c":186 -1
     (nil))

(insn 29 28 30 (set (reg:DI 106)
        (sign_extend:DI (reg:SI 107))) "test1.c":186 -1
     (nil))

(insn 30 29 31 (parallel [
            (set (reg:DI 108)
                (mult:DI (reg:DI 106)
                    (const_int 100000 [0x186a0])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":186 -1
     (nil))

(insn 31 30 32 (parallel [
            (set (reg:DI 109)
                (plus:DI (reg:DI 108)
                    (reg:DI 104)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":186 -1
     (nil))

(insn 32 31 33 (parallel [
            (set (reg:DI 110)
                (ashift:DI (reg:DI 109)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":186 -1
     (nil))

(insn 33 32 34 (set (reg:DI 111)
        (symbol_ref:DI ("hashTable") [flags 0x2]  <var_decl 0x7fa517a76000 hashTable>)) "test1.c":186 -1
     (nil))

(insn 34 33 35 (set (reg/f:DI 112)
        (mem/f:DI (plus:DI (reg:DI 110)
                (reg:DI 111)) [2 hashTable S8 A64])) "test1.c":186 -1
     (nil))

(insn 35 34 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 pHead+0 S8 A64])
        (reg/f:DI 112)) "test1.c":186 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; _2 = pHead_11->Key;

(insn 39 38 40 (set (reg/f:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 pHead+0 S8 A64])) "test1.c":189 -1
     (nil))

(insn 40 39 0 (set (reg/f:DI 88 [ _2 ])
        (mem/f:DI (reg/f:DI 113) [3 pHead_11->Key+0 S8 A64])) "test1.c":189 -1
     (nil))

;; _3 = hashTableLookupFunc (_2, 100);

(insn 41 40 42 (set (reg:SI 4 si)
        (const_int 100 [0x64])) "test1.c":189 -1
     (nil))

(insn 42 41 43 (set (reg:DI 5 di)
        (reg/f:DI 88 [ _2 ])) "test1.c":189 -1
     (nil))

(call_insn 43 42 44 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("hashTableLookupFunc") [flags 0x3]  <function_decl 0x7fa517a72e00 hashTableLookupFunc>) [0 hashTableLookupFunc S1 A8])
            (const_int 0 [0]))) "test1.c":189 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))

(insn 44 43 0 (set (reg/f:DI 89 [ _3 ])
        (reg:DI 0 ax)) "test1.c":189 -1
     (nil))

;; if (_3 == 0B)

(insn 45 44 46 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 89 [ _3 ])
            (const_int 0 [0]))) "test1.c":189 -1
     (nil))

(jump_insn 46 45 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "test1.c":189 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; _4 = pHead_11->Value;

(insn 48 47 49 (set (reg/f:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 pHead+0 S8 A64])) "test1.c":190 -1
     (nil))

(insn 49 48 0 (set (reg:SI 90 [ _4 ])
        (mem:SI (plus:DI (reg/f:DI 114)
                (const_int 8 [0x8])) [1 pHead_11->Value+0 S4 A64])) "test1.c":190 -1
     (nil))

;; _5 = pHead_11->Key;

(insn 50 49 51 (set (reg/f:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 pHead+0 S8 A64])) "test1.c":190 -1
     (nil))

(insn 51 50 0 (set (reg/f:DI 91 [ _5 ])
        (mem/f:DI (reg/f:DI 115) [3 pHead_11->Key+0 S8 A64])) "test1.c":190 -1
     (nil))

;; hashTableInsertFunc (_5, _4, 100);

(insn 52 51 53 (set (reg:SI 1 dx)
        (const_int 100 [0x64])) "test1.c":190 -1
     (nil))

(insn 53 52 54 (set (reg:SI 4 si)
        (reg:SI 90 [ _4 ])) "test1.c":190 -1
     (nil))

(insn 54 53 55 (set (reg:DI 5 di)
        (reg/f:DI 91 [ _5 ])) "test1.c":190 -1
     (nil))

(call_insn 55 54 0 (call (mem:QI (symbol_ref:DI ("hashTableInsertFunc") [flags 0x3]  <function_decl 0x7fa517a72c00 hashTableInsertFunc>) [0 hashTableInsertFunc S1 A8])
        (const_int 0 [0])) "test1.c":190 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; Generating RTL for gimple basic block 8

;; 

(code_label 58 57 59 43 (nil) [0 uses])

(note 59 58 0 NOTE_INSN_BASIC_BLOCK)

;; val_24 = pHead_11->Value;

(insn 60 59 61 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 pHead+0 S8 A64])) "test1.c":193 -1
     (nil))

(insn 61 60 62 (set (reg:SI 117)
        (mem:SI (plus:DI (reg/f:DI 116)
                (const_int 8 [0x8])) [1 pHead_11->Value+0 S4 A64])) "test1.c":193 -1
     (nil))

(insn 62 61 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 val+0 S4 A32])
        (reg:SI 117)) "test1.c":193 -1
     (nil))

;; _6 = pHead_11->Key;

(insn 63 62 64 (set (reg/f:DI 118)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 pHead+0 S8 A64])) "test1.c":194 -1
     (nil))

(insn 64 63 0 (set (reg/f:DI 92 [ _6 ])
        (mem/f:DI (reg/f:DI 118) [3 pHead_11->Key+0 S8 A64])) "test1.c":194 -1
     (nil))

;; _26 = hashTableLookupFunc (_6, 100);

(insn 65 64 66 (set (reg:SI 4 si)
        (const_int 100 [0x64])) "test1.c":194 -1
     (nil))

(insn 66 65 67 (set (reg:DI 5 di)
        (reg/f:DI 92 [ _6 ])) "test1.c":194 -1
     (nil))

(call_insn 67 66 68 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("hashTableLookupFunc") [flags 0x3]  <function_decl 0x7fa517a72e00 hashTableLookupFunc>) [0 hashTableLookupFunc S1 A8])
            (const_int 0 [0]))) "test1.c":194 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))

(insn 68 67 0 (set (reg/f:DI 95 [ _26 ])
        (reg:DI 0 ax)) "test1.c":194 -1
     (nil))

;; _7 = _26->Value;

(insn 69 68 0 (set (reg:SI 93 [ _7 ])
        (mem:SI (plus:DI (reg/f:DI 95 [ _26 ])
                (const_int 8 [0x8])) [1 _26->Value+0 S4 A64])) "test1.c":194 -1
     (nil))

;; _8 = val_24 + _7;

(insn 70 69 71 (set (reg:SI 119)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 val+0 S4 A32])) "test1.c":194 -1
     (nil))

(insn 71 70 0 (parallel [
            (set (reg:SI 94 [ _8 ])
                (plus:SI (reg:SI 93 [ _7 ])
                    (reg:SI 119)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":194 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 93 [ _7 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 val+0 S4 A32]))
        (nil)))

;; _26->Value = _8;

(insn 72 71 0 (set (mem:SI (plus:DI (reg/f:DI 95 [ _26 ])
                (const_int 8 [0x8])) [1 _26->Value+0 S4 A64])
        (reg:SI 94 [ _8 ])) "test1.c":194 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; 

(code_label 73 72 74 44 (nil) [0 uses])

(note 74 73 0 NOTE_INSN_BASIC_BLOCK)

;; pHead_29 = pHead_11->pNext;

(insn 75 74 76 (set (reg/f:DI 120)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 pHead+0 S8 A64])) "test1.c":196 -1
     (nil))

(insn 76 75 77 (set (reg/f:DI 121)
        (mem/f:DI (plus:DI (reg/f:DI 120)
                (const_int 16 [0x10])) [2 pHead_11->pNext+0 S8 A64])) "test1.c":196 -1
     (nil))

(insn 77 76 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 pHead+0 S8 A64])
        (reg/f:DI 121)) "test1.c":196 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; 

(code_label 78 77 79 42 (nil) [0 uses])

(note 79 78 0 NOTE_INSN_BASIC_BLOCK)

;; if (pHead_11 != 0B)

(insn 81 79 82 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [2 pHead+0 S8 A64])
            (const_int 0 [0]))) "test1.c":187 -1
     (nil))

(jump_insn 82 81 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 80)
            (pc))) "test1.c":187 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; 

(code_label 83 82 84 41 (nil) [0 uses])

(note 84 83 0 NOTE_INSN_BASIC_BLOCK)

;; j_30 = j_10 + 1;

(insn 85 84 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":181 -1
     (nil))

;; Generating RTL for gimple basic block 12

;; 

(code_label 86 85 87 40 (nil) [0 uses])

(note 87 86 0 NOTE_INSN_BASIC_BLOCK)

;; if (j_10 <= 99999)

(insn 89 87 90 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 99999 [0x1869f]))) "test1.c":181 -1
     (nil))

(jump_insn 90 89 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 88)
            (pc))) "test1.c":181 -1
     (nil))

;; Generating RTL for gimple basic block 13

;; i_21 = i_9 + 1;

(insn 92 91 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":179 -1
     (nil))

;; Generating RTL for gimple basic block 14

;; 

(code_label 93 92 94 39 (nil) [0 uses])

(note 94 93 0 NOTE_INSN_BASIC_BLOCK)

;; if (i_9 < reduceCount_19(D))

(insn 96 94 97 (set (reg:SI 122)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "test1.c":179 -1
     (nil))

(insn 97 96 98 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 122)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])) [1 reduceCount+0 S4 A32]))) "test1.c":179 -1
     (nil))

(jump_insn 98 97 0 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 95)
            (pc))) "test1.c":179 -1
     (nil))

;; Generating RTL for gimple basic block 15


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 15->16 to 17 failed.
Merging block 17 into block 16...
Merged blocks 16 and 17.
Merged 16 and 17 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [1 reduceCount+0 S4 A32])
        (reg:SI 5 di [ reduceCount ])) "test1.c":176 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 0 [0])) "test1.c":179 -1
     (nil))
(jump_insn 7 6 8 2 (set (pc)
        (label_ref 93)) "test1.c":179 -1
     (nil)
 -> 93)
;;  succ:       15

(barrier 8 7 95)
;; basic block 4, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       15
(code_label 95 8 9 4 47 (nil) [1 uses])
(note 9 95 10 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
        (const_int 0 [0])) "test1.c":181 -1
     (nil))
(jump_insn 11 10 12 4 (set (pc)
        (label_ref 86)) "test1.c":181 -1
     (nil)
 -> 86)
;;  succ:       13

(barrier 12 11 88)
;; basic block 5, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       13
(code_label 88 12 13 5 46 (nil) [1 uses])
(note 13 88 14 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 5 (set (reg:SI 97)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "test1.c":184 -1
     (nil))
(insn 15 14 16 5 (set (reg:DI 96)
        (sign_extend:DI (reg:SI 97))) "test1.c":184 -1
     (nil))
(insn 16 15 17 5 (set (reg:SI 99)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "test1.c":184 -1
     (nil))
(insn 17 16 18 5 (set (reg:DI 98)
        (sign_extend:DI (reg:SI 99))) "test1.c":184 -1
     (nil))
(insn 18 17 19 5 (parallel [
            (set (reg:DI 100)
                (mult:DI (reg:DI 98)
                    (const_int 100000 [0x186a0])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":184 -1
     (nil))
(insn 19 18 20 5 (parallel [
            (set (reg:DI 101)
                (plus:DI (reg:DI 100)
                    (reg:DI 96)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":184 -1
     (nil))
(insn 20 19 21 5 (parallel [
            (set (reg:DI 102)
                (ashift:DI (reg:DI 101)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":184 -1
     (nil))
(insn 21 20 22 5 (set (reg:DI 103)
        (symbol_ref:DI ("hashTable") [flags 0x2]  <var_decl 0x7fa517a76000 hashTable>)) "test1.c":184 -1
     (nil))
(insn 22 21 23 5 (set (reg/f:DI 87 [ _1 ])
        (mem/f:DI (plus:DI (reg:DI 102)
                (reg:DI 103)) [2 hashTable S8 A64])) "test1.c":184 -1
     (nil))
(insn 23 22 24 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 87 [ _1 ])
            (const_int 0 [0]))) "test1.c":184 -1
     (nil))
(jump_insn 24 23 25 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 83)
            (pc))) "test1.c":184 -1
     (nil)
 -> 83)
;;  succ:       6 (FALLTHRU)
;;              12

;; basic block 6, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
(note 25 24 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 6 (set (reg:SI 105)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "test1.c":186 -1
     (nil))
(insn 27 26 28 6 (set (reg:DI 104)
        (sign_extend:DI (reg:SI 105))) "test1.c":186 -1
     (nil))
(insn 28 27 29 6 (set (reg:SI 107)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "test1.c":186 -1
     (nil))
(insn 29 28 30 6 (set (reg:DI 106)
        (sign_extend:DI (reg:SI 107))) "test1.c":186 -1
     (nil))
(insn 30 29 31 6 (parallel [
            (set (reg:DI 108)
                (mult:DI (reg:DI 106)
                    (const_int 100000 [0x186a0])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":186 -1
     (nil))
(insn 31 30 32 6 (parallel [
            (set (reg:DI 109)
                (plus:DI (reg:DI 108)
                    (reg:DI 104)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":186 -1
     (nil))
(insn 32 31 33 6 (parallel [
            (set (reg:DI 110)
                (ashift:DI (reg:DI 109)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":186 -1
     (nil))
(insn 33 32 34 6 (set (reg:DI 111)
        (symbol_ref:DI ("hashTable") [flags 0x2]  <var_decl 0x7fa517a76000 hashTable>)) "test1.c":186 -1
     (nil))
(insn 34 33 35 6 (set (reg/f:DI 112)
        (mem/f:DI (plus:DI (reg:DI 110)
                (reg:DI 111)) [2 hashTable S8 A64])) "test1.c":186 -1
     (nil))
(insn 35 34 36 6 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 pHead+0 S8 A64])
        (reg/f:DI 112)) "test1.c":186 -1
     (nil))
(jump_insn 36 35 37 6 (set (pc)
        (label_ref 78)) "test1.c":187 -1
     (nil)
 -> 78)
;;  succ:       11

(barrier 37 36 80)
;; basic block 7, loop depth 3, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       11
(code_label 80 37 38 7 45 (nil) [1 uses])
(note 38 80 39 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 7 (set (reg/f:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 pHead+0 S8 A64])) "test1.c":189 -1
     (nil))
(insn 40 39 41 7 (set (reg/f:DI 88 [ _2 ])
        (mem/f:DI (reg/f:DI 113) [3 pHead_11->Key+0 S8 A64])) "test1.c":189 -1
     (nil))
(insn 41 40 42 7 (set (reg:SI 4 si)
        (const_int 100 [0x64])) "test1.c":189 -1
     (nil))
(insn 42 41 43 7 (set (reg:DI 5 di)
        (reg/f:DI 88 [ _2 ])) "test1.c":189 -1
     (nil))
(call_insn 43 42 44 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("hashTableLookupFunc") [flags 0x3]  <function_decl 0x7fa517a72e00 hashTableLookupFunc>) [0 hashTableLookupFunc S1 A8])
            (const_int 0 [0]))) "test1.c":189 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 44 43 45 7 (set (reg/f:DI 89 [ _3 ])
        (reg:DI 0 ax)) "test1.c":189 -1
     (nil))
(insn 45 44 46 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 89 [ _3 ])
            (const_int 0 [0]))) "test1.c":189 -1
     (nil))
(jump_insn 46 45 47 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 58)
            (pc))) "test1.c":189 -1
     (nil)
 -> 58)
;;  succ:       8 (FALLTHRU)
;;              9

;; basic block 8, loop depth 3, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
(note 47 46 48 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 8 (set (reg/f:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 pHead+0 S8 A64])) "test1.c":190 -1
     (nil))
(insn 49 48 50 8 (set (reg:SI 90 [ _4 ])
        (mem:SI (plus:DI (reg/f:DI 114)
                (const_int 8 [0x8])) [1 pHead_11->Value+0 S4 A64])) "test1.c":190 -1
     (nil))
(insn 50 49 51 8 (set (reg/f:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 pHead+0 S8 A64])) "test1.c":190 -1
     (nil))
(insn 51 50 52 8 (set (reg/f:DI 91 [ _5 ])
        (mem/f:DI (reg/f:DI 115) [3 pHead_11->Key+0 S8 A64])) "test1.c":190 -1
     (nil))
(insn 52 51 53 8 (set (reg:SI 1 dx)
        (const_int 100 [0x64])) "test1.c":190 -1
     (nil))
(insn 53 52 54 8 (set (reg:SI 4 si)
        (reg:SI 90 [ _4 ])) "test1.c":190 -1
     (nil))
(insn 54 53 55 8 (set (reg:DI 5 di)
        (reg/f:DI 91 [ _5 ])) "test1.c":190 -1
     (nil))
(call_insn 55 54 56 8 (call (mem:QI (symbol_ref:DI ("hashTableInsertFunc") [flags 0x3]  <function_decl 0x7fa517a72c00 hashTableInsertFunc>) [0 hashTableInsertFunc S1 A8])
        (const_int 0 [0])) "test1.c":190 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(jump_insn 56 55 57 8 (set (pc)
        (label_ref 73)) -1
     (nil)
 -> 73)
;;  succ:       10

(barrier 57 56 58)
;; basic block 9, loop depth 3, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
(code_label 58 57 59 9 43 (nil) [1 uses])
(note 59 58 60 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 9 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 pHead+0 S8 A64])) "test1.c":193 -1
     (nil))
(insn 61 60 62 9 (set (reg:SI 117)
        (mem:SI (plus:DI (reg/f:DI 116)
                (const_int 8 [0x8])) [1 pHead_11->Value+0 S4 A64])) "test1.c":193 -1
     (nil))
(insn 62 61 63 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 val+0 S4 A32])
        (reg:SI 117)) "test1.c":193 -1
     (nil))
(insn 63 62 64 9 (set (reg/f:DI 118)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 pHead+0 S8 A64])) "test1.c":194 -1
     (nil))
(insn 64 63 65 9 (set (reg/f:DI 92 [ _6 ])
        (mem/f:DI (reg/f:DI 118) [3 pHead_11->Key+0 S8 A64])) "test1.c":194 -1
     (nil))
(insn 65 64 66 9 (set (reg:SI 4 si)
        (const_int 100 [0x64])) "test1.c":194 -1
     (nil))
(insn 66 65 67 9 (set (reg:DI 5 di)
        (reg/f:DI 92 [ _6 ])) "test1.c":194 -1
     (nil))
(call_insn 67 66 68 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("hashTableLookupFunc") [flags 0x3]  <function_decl 0x7fa517a72e00 hashTableLookupFunc>) [0 hashTableLookupFunc S1 A8])
            (const_int 0 [0]))) "test1.c":194 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 68 67 69 9 (set (reg/f:DI 95 [ _26 ])
        (reg:DI 0 ax)) "test1.c":194 -1
     (nil))
(insn 69 68 70 9 (set (reg:SI 93 [ _7 ])
        (mem:SI (plus:DI (reg/f:DI 95 [ _26 ])
                (const_int 8 [0x8])) [1 _26->Value+0 S4 A64])) "test1.c":194 -1
     (nil))
(insn 70 69 71 9 (set (reg:SI 119)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 val+0 S4 A32])) "test1.c":194 -1
     (nil))
(insn 71 70 72 9 (parallel [
            (set (reg:SI 94 [ _8 ])
                (plus:SI (reg:SI 93 [ _7 ])
                    (reg:SI 119)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":194 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 93 [ _7 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 val+0 S4 A32]))
        (nil)))
(insn 72 71 73 9 (set (mem:SI (plus:DI (reg/f:DI 95 [ _26 ])
                (const_int 8 [0x8])) [1 _26->Value+0 S4 A64])
        (reg:SI 94 [ _8 ])) "test1.c":194 -1
     (nil))
;;  succ:       10 (FALLTHRU)

;; basic block 10, loop depth 3, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       8
;;              9 (FALLTHRU)
(code_label 73 72 74 10 44 (nil) [1 uses])
(note 74 73 75 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 10 (set (reg/f:DI 120)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 pHead+0 S8 A64])) "test1.c":196 -1
     (nil))
(insn 76 75 77 10 (set (reg/f:DI 121)
        (mem/f:DI (plus:DI (reg/f:DI 120)
                (const_int 16 [0x10])) [2 pHead_11->pNext+0 S8 A64])) "test1.c":196 -1
     (nil))
(insn 77 76 78 10 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 pHead+0 S8 A64])
        (reg/f:DI 121)) "test1.c":196 -1
     (nil))
;;  succ:       11 (FALLTHRU,DFS_BACK)

;; basic block 11, loop depth 3, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       6
;;              10 (FALLTHRU,DFS_BACK)
(code_label 78 77 79 11 42 (nil) [1 uses])
(note 79 78 81 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 81 79 82 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [2 pHead+0 S8 A64])
            (const_int 0 [0]))) "test1.c":187 -1
     (nil))
(jump_insn 82 81 83 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 80)
            (pc))) "test1.c":187 -1
     (nil)
 -> 80)
;;  succ:       7
;;              12 (FALLTHRU)

;; basic block 12, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
;;              11 (FALLTHRU)
(code_label 83 82 84 12 41 (nil) [1 uses])
(note 84 83 85 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 86 12 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":181 -1
     (nil))
;;  succ:       13 (FALLTHRU,DFS_BACK)

;; basic block 13, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
;;              12 (FALLTHRU,DFS_BACK)
(code_label 86 85 87 13 40 (nil) [1 uses])
(note 87 86 89 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 89 87 90 13 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 99999 [0x1869f]))) "test1.c":181 -1
     (nil))
(jump_insn 90 89 91 13 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 88)
            (pc))) "test1.c":181 -1
     (nil)
 -> 88)
;;  succ:       5
;;              14 (FALLTHRU)

;; basic block 14, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       13 (FALLTHRU)
(note 91 90 92 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 93 14 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":179 -1
     (nil))
;;  succ:       15 (FALLTHRU,DFS_BACK)

;; basic block 15, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              14 (FALLTHRU,DFS_BACK)
(code_label 93 92 94 15 39 (nil) [1 uses])
(note 94 93 96 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 96 94 97 15 (set (reg:SI 122)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "test1.c":179 -1
     (nil))
(insn 97 96 98 15 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 122)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])) [1 reduceCount+0 S4 A32]))) "test1.c":179 -1
     (nil))
(jump_insn 98 97 99 15 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 95)
            (pc))) "test1.c":179 -1
     (nil)
 -> 95)
;;  succ:       4
;;              16 (FALLTHRU)

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       15 (FALLTHRU)
(note 99 98 102 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 102 99 0 16 (const_int 0 [0]) "test1.c":201 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function writerFunc (writerFunc, funcdef_no=13, decl_uid=3301, cgraph_uid=13, symbol_order=16)

writerFunc (struct FILE * fp)
{
  struct Node * p;
  int i;
  struct Node * _1;
  int _2;
  char * _3;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  __builtin_fwrite ("------print the result------ \n", 1, 30, fp_10(D));
  i_12 = 0;
  goto <bb 8>; [0.00%]
;;    succ:       8

;;   basic block 3, loop depth 1
;;    pred:       8
  _1 = hashTable[100][i_4];
  if (_1 != 0B)
    goto <bb 4>; [0.00%]
  else
    goto <bb 7>; [0.00%]
;;    succ:       4
;;                7

;;   basic block 4, loop depth 1
;;    pred:       3
  p_13 = hashTable[100][i_4];
  goto <bb 6>; [0.00%]
;;    succ:       6

;;   basic block 5, loop depth 2
;;    pred:       6
  _2 = p_5->Value;
  _3 = p_5->Key;
  fprintf (fp_10(D), "Word: %s, Count: %d\n", _3, _2);
  p_15 = p_5->pNext;
;;    succ:       6

;;   basic block 6, loop depth 2
;;    pred:       4
;;                5
  # p_5 = PHI <p_13(4), p_15(5)>
  if (p_5 != 0B)
    goto <bb 5>; [0.00%]
  else
    goto <bb 7>; [0.00%]
;;    succ:       5
;;                7

;;   basic block 7, loop depth 1
;;    pred:       3
;;                6
  i_16 = i_4 + 1;
;;    succ:       8

;;   basic block 8, loop depth 1
;;    pred:       2
;;                7
  # i_4 = PHI <i_12(2), i_16(7)>
  if (i_4 <= 99999)
    goto <bb 3>; [0.00%]
  else
    goto <bb 9>; [0.00%]
;;    succ:       3
;;                9

;;   basic block 9, loop depth 0
;;    pred:       8
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (i_4 - 4 )
Partition 5 (p_5 - 5 )
Partition 10 (fp_10(D) - 10 )
Partition 12 (i_12 - 12 )
Partition 13 (p_13 - 13 )
Partition 15 (p_15 - 15 )
Partition 16 (i_16 - 16 )


Partition map 

Partition 0 (i_4 - 4 )
Partition 1 (p_5 - 5 )
Partition 2 (fp_10(D) - 10 )
Partition 3 (i_12 - 12 )
Partition 4 (p_13 - 13 )
Partition 5 (p_15 - 15 )
Partition 6 (i_16 - 16 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646, 0) i_4 <-> i_12
(2147483646, 0) p_5 <-> p_13
(2147483646, 0) p_5 <-> p_15
(2147483646, 0) i_4 <-> i_16

Partition map 

Partition 0 (i_4 - 4 )
Partition 1 (p_5 - 5 )
Partition 2 (fp_10(D) - 10 )
Partition 3 (i_12 - 12 )
Partition 4 (p_13 - 13 )
Partition 5 (p_15 - 15 )
Partition 6 (i_16 - 16 )

Coalesce list: (4)i_4 & (12)i_12 [map: 0, 3] : Success -> 0
Coalesce list: (5)p_5 & (13)p_13 [map: 1, 4] : Success -> 1
Coalesce list: (5)p_5 & (15)p_15 [map: 1, 5] : Success -> 1
Coalesce list: (4)i_4 & (16)i_16 [map: 0, 6] : Success -> 0
Coalesce list: (4)i_4 & (16)i_4: Already Coalesced.
Coalesce list: (4)i_4 & (12)i_4: Already Coalesced.
Coalesce list: (5)p_5 & (15)p_5: Already Coalesced.
Coalesce list: (5)p_5 & (13)p_5: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (i_4 - 4 12 16 )
Partition 4 (p_5 - 5 13 15 )
Partition 5 (fp_10(D) - 10 )

writerFunc (struct FILE * fp)
{
  struct Node * p;
  int i;
  struct Node * _1;
  int _2;
  char * _3;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  __builtin_fwrite ("------print the result------ \n", 1, 30, fp_10(D));
  i_12 = 0;
  goto <bb 8>; [0.00%]
;;    succ:       8

;;   basic block 3, loop depth 1
;;    pred:       8
  _1 = hashTable[100][i_4];
  if (_1 != 0B)
    goto <bb 4>; [0.00%]
  else
    goto <bb 7>; [0.00%]
;;    succ:       4
;;                7

;;   basic block 4, loop depth 1
;;    pred:       3
  p_13 = hashTable[100][i_4];
  goto <bb 6>; [0.00%]
;;    succ:       6

;;   basic block 5, loop depth 2
;;    pred:       6
  _2 = p_5->Value;
  _3 = p_5->Key;
  fprintf (fp_10(D), "Word: %s, Count: %d\n", _3, _2);
  p_15 = p_5->pNext;
;;    succ:       6

;;   basic block 6, loop depth 2
;;    pred:       4
;;                5
  # p_5 = PHI <p_13(4), p_15(5)>
  if (p_5 != 0B)
    goto <bb 5>; [0.00%]
  else
    goto <bb 7>; [0.00%]
;;    succ:       5
;;                7

;;   basic block 7, loop depth 1
;;    pred:       3
;;                6
  i_16 = i_4 + 1;
;;    succ:       8

;;   basic block 8, loop depth 1
;;    pred:       2
;;                7
  # i_4 = PHI <i_12(2), i_16(7)>
  if (i_4 <= 99999)
    goto <bb 3>; [0.00%]
  else
    goto <bb 9>; [0.00%]
;;    succ:       3
;;                9

;;   basic block 9, loop depth 0
;;    pred:       8
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; __builtin_fwrite ("------print the result------ \n", 1, 30, fp_10(D));

(insn 6 5 7 (set (reg:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [7 fp+0 S8 A64])) "test1.c":208 -1
     (nil))

(insn 7 6 8 (set (reg:DI 2 cx)
        (reg:DI 90)) "test1.c":208 -1
     (nil))

(insn 8 7 9 (set (reg:DI 1 dx)
        (const_int 30 [0x1e])) "test1.c":208 -1
     (nil))

(insn 9 8 10 (set (reg:DI 4 si)
        (const_int 1 [0x1])) "test1.c":208 -1
     (nil))

(insn 10 9 11 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7fa517af7bd0 *.LC6>)) "test1.c":208 -1
     (nil))

(call_insn 11 10 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fwrite") [flags 0x41]  <function_decl 0x7fa517cffa00 __builtin_fwrite>) [0 __builtin_fwrite S1 A8])
            (const_int 0 [0]))) "test1.c":208 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))

;; i_12 = 0;

(insn 12 11 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 0 [0])) "test1.c":211 -1
     (nil))

;; Generating RTL for gimple basic block 3
Applying pattern match.pd:84, generic-match.c:11461
Applying pattern match.pd:84, generic-match.c:11461
Applying pattern match.pd:84, generic-match.c:11461

;; _1 = hashTable[100][i_4];

(insn 16 15 17 (set (reg:SI 92)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "test1.c":213 -1
     (nil))

(insn 17 16 18 (set (reg:DI 91)
        (sign_extend:DI (reg:SI 92))) "test1.c":213 -1
     (nil))

(insn 18 17 19 (parallel [
            (set (reg:DI 93)
                (plus:DI (reg:DI 91)
                    (const_int 10000000 [0x989680])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":213 -1
     (nil))

(insn 19 18 20 (parallel [
            (set (reg:DI 94)
                (ashift:DI (reg:DI 93)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":213 -1
     (nil))

(insn 20 19 21 (set (reg:DI 95)
        (symbol_ref:DI ("hashTable") [flags 0x2]  <var_decl 0x7fa517a76000 hashTable>)) "test1.c":213 -1
     (nil))

(insn 21 20 0 (set (reg/f:DI 87 [ _1 ])
        (mem/f:DI (plus:DI (reg:DI 94)
                (reg:DI 95)) [2 hashTable S8 A64])) "test1.c":213 -1
     (nil))

;; if (_1 != 0B)

(insn 22 21 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 87 [ _1 ])
            (const_int 0 [0]))) "test1.c":213 -1
     (nil))

(jump_insn 23 22 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "test1.c":213 -1
     (nil))

;; Generating RTL for gimple basic block 4
Applying pattern match.pd:84, generic-match.c:11461
Applying pattern match.pd:84, generic-match.c:11461
Applying pattern match.pd:84, generic-match.c:11461

;; p_13 = hashTable[100][i_4];

(insn 25 24 26 (set (reg:SI 97)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "test1.c":215 -1
     (nil))

(insn 26 25 27 (set (reg:DI 96)
        (sign_extend:DI (reg:SI 97))) "test1.c":215 -1
     (nil))

(insn 27 26 28 (parallel [
            (set (reg:DI 98)
                (plus:DI (reg:DI 96)
                    (const_int 10000000 [0x989680])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":215 -1
     (nil))

(insn 28 27 29 (parallel [
            (set (reg:DI 99)
                (ashift:DI (reg:DI 98)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":215 -1
     (nil))

(insn 29 28 30 (set (reg:DI 100)
        (symbol_ref:DI ("hashTable") [flags 0x2]  <var_decl 0x7fa517a76000 hashTable>)) "test1.c":215 -1
     (nil))

(insn 30 29 31 (set (reg/f:DI 101)
        (mem/f:DI (plus:DI (reg:DI 99)
                (reg:DI 100)) [2 hashTable S8 A64])) "test1.c":215 -1
     (nil))

(insn 31 30 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 p+0 S8 A64])
        (reg/f:DI 101)) "test1.c":215 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; _2 = p_5->Value;

(insn 35 34 36 (set (reg/f:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 p+0 S8 A64])) "test1.c":218 -1
     (nil))

(insn 36 35 0 (set (reg:SI 88 [ _2 ])
        (mem:SI (plus:DI (reg/f:DI 102)
                (const_int 8 [0x8])) [1 p_5->Value+0 S4 A64])) "test1.c":218 -1
     (nil))

;; _3 = p_5->Key;

(insn 37 36 38 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 p+0 S8 A64])) "test1.c":218 -1
     (nil))

(insn 38 37 0 (set (reg/f:DI 89 [ _3 ])
        (mem/f:DI (reg/f:DI 103) [3 p_5->Key+0 S8 A64])) "test1.c":218 -1
     (nil))

;; fprintf (fp_10(D), "Word: %s, Count: %d\n", _3, _2);

(insn 39 38 40 (set (reg:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [7 fp+0 S8 A64])) "test1.c":218 -1
     (nil))

(insn 40 39 41 (set (reg:SI 2 cx)
        (reg:SI 88 [ _2 ])) "test1.c":218 -1
     (nil))

(insn 41 40 42 (set (reg:DI 1 dx)
        (reg/f:DI 89 [ _3 ])) "test1.c":218 -1
     (nil))

(insn 42 41 43 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fa517af7c60 *.LC7>)) "test1.c":218 -1
     (nil))

(insn 43 42 44 (set (reg:DI 5 di)
        (reg:DI 104)) "test1.c":218 -1
     (nil))

(insn 44 43 45 (set (reg:QI 0 ax)
        (const_int 0 [0])) "test1.c":218 -1
     (nil))

(call_insn 45 44 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41]  <function_decl 0x7fa517cfe900 fprintf>) [0 __builtin_fprintf S1 A8])
            (const_int 0 [0]))) "test1.c":218 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (nil)))))))

;; p_15 = p_5->pNext;

(insn 46 45 47 (set (reg/f:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 p+0 S8 A64])) "test1.c":219 -1
     (nil))

(insn 47 46 48 (set (reg/f:DI 106)
        (mem/f:DI (plus:DI (reg/f:DI 105)
                (const_int 16 [0x10])) [2 p_5->pNext+0 S8 A64])) "test1.c":219 -1
     (nil))

(insn 48 47 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 p+0 S8 A64])
        (reg/f:DI 106)) "test1.c":219 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 49 48 50 51 (nil) [0 uses])

(note 50 49 0 NOTE_INSN_BASIC_BLOCK)

;; if (p_5 != 0B)

(insn 52 50 53 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [2 p+0 S8 A64])
            (const_int 0 [0]))) "test1.c":216 -1
     (nil))

(jump_insn 53 52 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 51)
            (pc))) "test1.c":216 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; 

(code_label 54 53 55 50 (nil) [0 uses])

(note 55 54 0 NOTE_INSN_BASIC_BLOCK)

;; i_16 = i_4 + 1;

(insn 56 55 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":211 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; 

(code_label 57 56 58 49 (nil) [0 uses])

(note 58 57 0 NOTE_INSN_BASIC_BLOCK)

;; if (i_4 <= 99999)

(insn 60 58 61 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
            (const_int 99999 [0x1869f]))) "test1.c":211 -1
     (nil))

(jump_insn 61 60 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) "test1.c":211 -1
     (nil))

;; Generating RTL for gimple basic block 9


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 9->10 to 11 failed.
Merging block 11 into block 10...
Merged blocks 10 and 11.
Merged 10 and 11 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [7 fp+0 S8 A64])
        (reg:DI 5 di [ fp ])) "test1.c":205 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [7 fp+0 S8 A64])) "test1.c":208 -1
     (nil))
(insn 7 6 8 2 (set (reg:DI 2 cx)
        (reg:DI 90)) "test1.c":208 -1
     (nil))
(insn 8 7 9 2 (set (reg:DI 1 dx)
        (const_int 30 [0x1e])) "test1.c":208 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 4 si)
        (const_int 1 [0x1])) "test1.c":208 -1
     (nil))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7fa517af7bd0 *.LC6>)) "test1.c":208 -1
     (nil))
(call_insn 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fwrite") [flags 0x41]  <function_decl 0x7fa517cffa00 __builtin_fwrite>) [0 __builtin_fwrite S1 A8])
            (const_int 0 [0]))) "test1.c":208 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 12 11 13 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 0 [0])) "test1.c":211 -1
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (label_ref 57)) "test1.c":211 -1
     (nil)
 -> 57)
;;  succ:       9

(barrier 14 13 59)
;; basic block 4, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       9
(code_label 59 14 15 4 53 (nil) [1 uses])
(note 15 59 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 4 (set (reg:SI 92)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "test1.c":213 -1
     (nil))
(insn 17 16 18 4 (set (reg:DI 91)
        (sign_extend:DI (reg:SI 92))) "test1.c":213 -1
     (nil))
(insn 18 17 19 4 (parallel [
            (set (reg:DI 93)
                (plus:DI (reg:DI 91)
                    (const_int 10000000 [0x989680])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":213 -1
     (nil))
(insn 19 18 20 4 (parallel [
            (set (reg:DI 94)
                (ashift:DI (reg:DI 93)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":213 -1
     (nil))
(insn 20 19 21 4 (set (reg:DI 95)
        (symbol_ref:DI ("hashTable") [flags 0x2]  <var_decl 0x7fa517a76000 hashTable>)) "test1.c":213 -1
     (nil))
(insn 21 20 22 4 (set (reg/f:DI 87 [ _1 ])
        (mem/f:DI (plus:DI (reg:DI 94)
                (reg:DI 95)) [2 hashTable S8 A64])) "test1.c":213 -1
     (nil))
(insn 22 21 23 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 87 [ _1 ])
            (const_int 0 [0]))) "test1.c":213 -1
     (nil))
(jump_insn 23 22 24 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 54)
            (pc))) "test1.c":213 -1
     (nil)
 -> 54)
;;  succ:       5 (FALLTHRU)
;;              8

;; basic block 5, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 5 (set (reg:SI 97)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "test1.c":215 -1
     (nil))
(insn 26 25 27 5 (set (reg:DI 96)
        (sign_extend:DI (reg:SI 97))) "test1.c":215 -1
     (nil))
(insn 27 26 28 5 (parallel [
            (set (reg:DI 98)
                (plus:DI (reg:DI 96)
                    (const_int 10000000 [0x989680])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":215 -1
     (nil))
(insn 28 27 29 5 (parallel [
            (set (reg:DI 99)
                (ashift:DI (reg:DI 98)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":215 -1
     (nil))
(insn 29 28 30 5 (set (reg:DI 100)
        (symbol_ref:DI ("hashTable") [flags 0x2]  <var_decl 0x7fa517a76000 hashTable>)) "test1.c":215 -1
     (nil))
(insn 30 29 31 5 (set (reg/f:DI 101)
        (mem/f:DI (plus:DI (reg:DI 99)
                (reg:DI 100)) [2 hashTable S8 A64])) "test1.c":215 -1
     (nil))
(insn 31 30 32 5 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 p+0 S8 A64])
        (reg/f:DI 101)) "test1.c":215 -1
     (nil))
(jump_insn 32 31 33 5 (set (pc)
        (label_ref 49)) "test1.c":216 -1
     (nil)
 -> 49)
;;  succ:       7

(barrier 33 32 51)
;; basic block 6, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
(code_label 51 33 34 6 52 (nil) [1 uses])
(note 34 51 35 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 6 (set (reg/f:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 p+0 S8 A64])) "test1.c":218 -1
     (nil))
(insn 36 35 37 6 (set (reg:SI 88 [ _2 ])
        (mem:SI (plus:DI (reg/f:DI 102)
                (const_int 8 [0x8])) [1 p_5->Value+0 S4 A64])) "test1.c":218 -1
     (nil))
(insn 37 36 38 6 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 p+0 S8 A64])) "test1.c":218 -1
     (nil))
(insn 38 37 39 6 (set (reg/f:DI 89 [ _3 ])
        (mem/f:DI (reg/f:DI 103) [3 p_5->Key+0 S8 A64])) "test1.c":218 -1
     (nil))
(insn 39 38 40 6 (set (reg:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [7 fp+0 S8 A64])) "test1.c":218 -1
     (nil))
(insn 40 39 41 6 (set (reg:SI 2 cx)
        (reg:SI 88 [ _2 ])) "test1.c":218 -1
     (nil))
(insn 41 40 42 6 (set (reg:DI 1 dx)
        (reg/f:DI 89 [ _3 ])) "test1.c":218 -1
     (nil))
(insn 42 41 43 6 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fa517af7c60 *.LC7>)) "test1.c":218 -1
     (nil))
(insn 43 42 44 6 (set (reg:DI 5 di)
        (reg:DI 104)) "test1.c":218 -1
     (nil))
(insn 44 43 45 6 (set (reg:QI 0 ax)
        (const_int 0 [0])) "test1.c":218 -1
     (nil))
(call_insn 45 44 46 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41]  <function_decl 0x7fa517cfe900 fprintf>) [0 __builtin_fprintf S1 A8])
            (const_int 0 [0]))) "test1.c":218 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (nil)))))))
(insn 46 45 47 6 (set (reg/f:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 p+0 S8 A64])) "test1.c":219 -1
     (nil))
(insn 47 46 48 6 (set (reg/f:DI 106)
        (mem/f:DI (plus:DI (reg/f:DI 105)
                (const_int 16 [0x10])) [2 p_5->pNext+0 S8 A64])) "test1.c":219 -1
     (nil))
(insn 48 47 49 6 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 p+0 S8 A64])
        (reg/f:DI 106)) "test1.c":219 -1
     (nil))
;;  succ:       7 (FALLTHRU,DFS_BACK)

;; basic block 7, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
;;              6 (FALLTHRU,DFS_BACK)
(code_label 49 48 50 7 51 (nil) [1 uses])
(note 50 49 52 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 52 50 53 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [2 p+0 S8 A64])
            (const_int 0 [0]))) "test1.c":216 -1
     (nil))
(jump_insn 53 52 54 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 51)
            (pc))) "test1.c":216 -1
     (nil)
 -> 51)
;;  succ:       6
;;              8 (FALLTHRU)

;; basic block 8, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
;;              7 (FALLTHRU)
(code_label 54 53 55 8 50 (nil) [1 uses])
(note 55 54 56 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 8 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":211 -1
     (nil))
;;  succ:       9 (FALLTHRU,DFS_BACK)

;; basic block 9, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              8 (FALLTHRU,DFS_BACK)
(code_label 57 56 58 9 49 (nil) [1 uses])
(note 58 57 60 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 60 58 61 9 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
            (const_int 99999 [0x1869f]))) "test1.c":211 -1
     (nil))
(jump_insn 61 60 62 9 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) "test1.c":211 -1
     (nil)
 -> 59)
;;  succ:       4
;;              10 (FALLTHRU)

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 (FALLTHRU)
(note 62 61 65 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 65 62 0 10 (const_int 0 [0]) "test1.c":224 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function main (main, funcdef_no=14, decl_uid=3311, cgraph_uid=14, symbol_order=17)

main ()
{
  struct FILE * fp;
  double time;
  struct Node * pHead;
  int j;
  int i;
  char * * filename_list_array;
  struct FILE * read_filename;
  int file_num;
  int D.3384;
  long unsigned int _1;
  long unsigned int _2;
  char * * _3;
  void * _4;
  long unsigned int _5;
  long unsigned int _6;
  char * * _7;
  char * _8;
  int _9;
  double _10;
  long unsigned int _11;
  long unsigned int _12;
  char * * _13;
  char * _14;
  struct Node * _15;
  char * _16;
  double _17;
  long unsigned int _18;
  long unsigned int _19;
  char * * _20;
  char * _21;
  int _29;
  int _65;
  int _81;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  file_num_39 = 0;
  read_filename_42 = fopen ("filename_list.txt", "r");
  filename_list_array_44 = malloc (800);
  i_45 = 0;
  goto <bb 4>; [0.00%]
;;    succ:       4

;;   basic block 3, loop depth 1
;;    pred:       4
  _1 = (long unsigned int) i_23;
  _2 = _1 * 8;
  _3 = filename_list_array_44 + _2;
  _4 = malloc (50);
  *_3 = _4;
  i_84 = i_23 + 1;
;;    succ:       4

;;   basic block 4, loop depth 1
;;    pred:       2
;;                3
  # i_23 = PHI <i_45(2), i_84(3)>
  if (i_23 <= 99)
    goto <bb 3>; [0.00%]
  else
    goto <bb 5>; [0.00%]
;;    succ:       3
;;                5

;;   basic block 5, loop depth 0
;;    pred:       4
  if (read_filename_42 == 0B)
    goto <bb 6>; [0.00%]
  else
    goto <bb 7>; [0.00%]
;;    succ:       6
;;                7

;;   basic block 6, loop depth 0
;;    pred:       5
  printf ("open the file incorrectly !");
  _81 = 0;
  goto <bb 29> (<L27>); [0.00%]
;;    succ:       29

;;   basic block 7, loop depth 0
;;    pred:       5
  goto <bb 9>; [0.00%]
;;    succ:       9

;;   basic block 8, loop depth 1
;;    pred:       9
  _5 = (long unsigned int) file_num_22;
  _6 = _5 * 8;
  _7 = filename_list_array_44 + _6;
  _8 = *_7;
  fscanf (read_filename_42, "%s\n", _8);
  file_num_79 = file_num_22 + 1;
;;    succ:       9

;;   basic block 9, loop depth 1
;;    pred:       7
;;                8
  # file_num_22 = PHI <file_num_39(7), file_num_79(8)>
  _9 = feof (read_filename_42);
  if (_9 == 0)
    goto <bb 8>; [0.00%]
  else
    goto <bb 10>; [0.00%]
;;    succ:       8
;;                10

;;   basic block 10, loop depth 0
;;    pred:       9
  __builtin_puts (&"The result can be found in output.txt ."[0]);
  omp_set_num_threads (8);
  _10 = omp_get_wtime ();
  time_50 = -_10;
  i_51 = 0;
  goto <bb 12>; [0.00%]
;;    succ:       12

;;   basic block 11, loop depth 1
;;    pred:       12
  _11 = (long unsigned int) i_24;
  _12 = _11 * 8;
  _13 = filename_list_array_44 + _12;
  _14 = *_13;
  readFunc (_14, i_24);
  i_77 = i_24 + 1;
;;    succ:       12

;;   basic block 12, loop depth 1
;;    pred:       10
;;                11
  # i_24 = PHI <i_51(10), i_77(11)>
  if (i_24 < file_num_22)
    goto <bb 11>; [0.00%]
  else
    goto <bb 13>; [0.00%]
;;    succ:       11
;;                13

;;   basic block 13, loop depth 0
;;    pred:       12
  i_52 = 0;
  goto <bb 15>; [0.00%]
;;    succ:       15

;;   basic block 14, loop depth 1
;;    pred:       15
  mapperFunc (i_25);
  i_75 = i_25 + 1;
;;    succ:       15

;;   basic block 15, loop depth 1
;;    pred:       13
;;                14
  # i_25 = PHI <i_52(13), i_75(14)>
  if (i_25 < file_num_22)
    goto <bb 14>; [0.00%]
  else
    goto <bb 16>; [0.00%]
;;    succ:       14
;;                16

;;   basic block 16, loop depth 0
;;    pred:       15
  reducerFunc (file_num_22);
  fp_55 = fopen ("output.txt", "w");
  writerFunc (fp_55);
  hashTablePrintFunc (100);
  i_58 = 0;
  goto <bb 24>; [0.00%]
;;    succ:       24

;;   basic block 17, loop depth 1
;;    pred:       24
  j_68 = 0;
  goto <bb 22>; [0.00%]
;;    succ:       22

;;   basic block 18, loop depth 2
;;    pred:       22
  _15 = hashTable[i_26][j_28];
  if (_15 != 0B)
    goto <bb 19>; [0.00%]
  else
    goto <bb 21>; [0.00%]
;;    succ:       19
;;                21

;;   basic block 19, loop depth 2
;;    pred:       18
  pHead_70 = hashTable[i_26][j_28];
  if (pHead_70 != 0B)
    goto <bb 20>; [0.00%]
  else
    goto <bb 21>; [0.00%]
;;    succ:       20
;;                21

;;   basic block 20, loop depth 2
;;    pred:       19
  _16 = pHead_70->Key;
  free (_16);
  free (pHead_70);
;;    succ:       21

;;   basic block 21, loop depth 2
;;    pred:       18
;;                19
;;                20
  j_73 = j_28 + 1;
;;    succ:       22

;;   basic block 22, loop depth 2
;;    pred:       17
;;                21
  # j_28 = PHI <j_68(17), j_73(21)>
  if (j_28 <= 99999)
    goto <bb 18>; [0.00%]
  else
    goto <bb 23>; [0.00%]
;;    succ:       18
;;                23

;;   basic block 23, loop depth 1
;;    pred:       22
  i_69 = i_26 + 1;
;;    succ:       24

;;   basic block 24, loop depth 1
;;    pred:       16
;;                23
  # i_26 = PHI <i_58(16), i_69(23)>
  if (i_26 <= 99)
    goto <bb 17>; [0.00%]
  else
    goto <bb 25>; [0.00%]
;;    succ:       17
;;                25

;;   basic block 25, loop depth 0
;;    pred:       24
  fclose (fp_55);
  _17 = omp_get_wtime ();
  time_61 = time_50 + _17;
  printf ("Elapsed time is %lf seconds. \n", time_61);
  i_63 = 0;
  goto <bb 27>; [0.00%]
;;    succ:       27

;;   basic block 26, loop depth 1
;;    pred:       27
  _18 = (long unsigned int) i_27;
  _19 = _18 * 8;
  _20 = filename_list_array_44 + _19;
  _21 = *_20;
  free (_21);
  i_67 = i_27 + 1;
;;    succ:       27

;;   basic block 27, loop depth 1
;;    pred:       25
;;                26
  # i_27 = PHI <i_63(25), i_67(26)>
  if (i_27 <= 99)
    goto <bb 26>; [0.00%]
  else
    goto <bb 28>; [0.00%]
;;    succ:       26
;;                28

;;   basic block 28, loop depth 0
;;    pred:       27
  free (filename_list_array_44);
  _65 = 0;
;;    succ:       29

;;   basic block 29, loop depth 0
;;    pred:       6
;;                28
  # _29 = PHI <_81(6), _65(28)>
<L27> [0.00%]:
  return _29;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (file_num_22 - 22 )
Partition 23 (i_23 - 23 )
Partition 24 (i_24 - 24 )
Partition 25 (i_25 - 25 )
Partition 26 (i_26 - 26 )
Partition 27 (i_27 - 27 )
Partition 28 (j_28 - 28 )
Partition 29 (_29 - 29 )
Partition 39 (file_num_39 - 39 )
Partition 42 (read_filename_42 - 42 )
Partition 44 (filename_list_array_44 - 44 )
Partition 45 (i_45 - 45 )
Partition 50 (time_50 - 50 )
Partition 51 (i_51 - 51 )
Partition 52 (i_52 - 52 )
Partition 55 (fp_55 - 55 )
Partition 58 (i_58 - 58 )
Partition 61 (time_61 - 61 )
Partition 63 (i_63 - 63 )
Partition 65 (_65 - 65 )
Partition 67 (i_67 - 67 )
Partition 68 (j_68 - 68 )
Partition 69 (i_69 - 69 )
Partition 70 (pHead_70 - 70 )
Partition 73 (j_73 - 73 )
Partition 75 (i_75 - 75 )
Partition 77 (i_77 - 77 )
Partition 79 (file_num_79 - 79 )
Partition 81 (_81 - 81 )
Partition 84 (i_84 - 84 )
Partition 85 (_85(D) - 85 )


Partition map 

Partition 0 (file_num_22 - 22 )
Partition 1 (i_23 - 23 )
Partition 2 (i_24 - 24 )
Partition 3 (i_25 - 25 )
Partition 4 (i_26 - 26 )
Partition 5 (i_27 - 27 )
Partition 6 (j_28 - 28 )
Partition 7 (_29 - 29 )
Partition 8 (file_num_39 - 39 )
Partition 9 (i_45 - 45 )
Partition 10 (time_50 - 50 )
Partition 11 (i_51 - 51 )
Partition 12 (i_52 - 52 )
Partition 13 (i_58 - 58 )
Partition 14 (time_61 - 61 )
Partition 15 (i_63 - 63 )
Partition 16 (_65 - 65 )
Partition 17 (i_67 - 67 )
Partition 18 (j_68 - 68 )
Partition 19 (i_69 - 69 )
Partition 20 (j_73 - 73 )
Partition 21 (i_75 - 75 )
Partition 22 (i_77 - 77 )
Partition 23 (file_num_79 - 79 )
Partition 24 (_81 - 81 )
Partition 25 (i_84 - 84 )
Partition 26 (_85(D) - 85 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646, 0) i_23 <-> i_24
(2147483646, 0) i_23 <-> i_25
(2147483646, 0) i_23 <-> i_26
(2147483646, 0) i_23 <-> i_27
(2147483646, 0) file_num_22 <-> file_num_39
(2147483646, 0) i_23 <-> i_45
(2147483646, 0) i_23 <-> i_51
(2147483646, 0) i_23 <-> i_52
(2147483646, 0) i_23 <-> i_58
(2147483646, 0) time_50 <-> time_61
(2147483646, 0) i_23 <-> i_63
(2147483646, 0) i_23 <-> i_67
(2147483646, 0) j_28 <-> j_68
(2147483646, 0) i_23 <-> i_69
(2147483646, 0) j_28 <-> j_73
(2147483646, 0) i_23 <-> i_75
(2147483646, 0) i_23 <-> i_77
(2147483646, 0) file_num_22 <-> file_num_79
(2147483646, 0) i_23 <-> i_84

Partition map 

Partition 0 (file_num_22 - 22 )
Partition 1 (i_23 - 23 )
Partition 2 (i_24 - 24 )
Partition 3 (i_25 - 25 )
Partition 4 (i_26 - 26 )
Partition 5 (i_27 - 27 )
Partition 6 (j_28 - 28 )
Partition 7 (_29 - 29 )
Partition 8 (file_num_39 - 39 )
Partition 9 (i_45 - 45 )
Partition 10 (time_50 - 50 )
Partition 11 (i_51 - 51 )
Partition 12 (i_52 - 52 )
Partition 13 (i_58 - 58 )
Partition 14 (time_61 - 61 )
Partition 15 (i_63 - 63 )
Partition 16 (_65 - 65 )
Partition 17 (i_67 - 67 )
Partition 18 (j_68 - 68 )
Partition 19 (i_69 - 69 )
Partition 20 (j_73 - 73 )
Partition 21 (i_75 - 75 )
Partition 22 (i_77 - 77 )
Partition 23 (file_num_79 - 79 )
Partition 24 (_81 - 81 )
Partition 25 (i_84 - 84 )
Partition 26 (_85(D) - 85 )

Coalesce list: (23)i_23 & (24)i_24 [map: 1, 2] : Success -> 1
Coalesce list: (23)i_23 & (25)i_25 [map: 1, 3] : Success -> 1
Coalesce list: (23)i_23 & (26)i_26 [map: 1, 4] : Success -> 1
Coalesce list: (23)i_23 & (27)i_27 [map: 1, 5] : Success -> 1
Coalesce list: (22)file_num_22 & (39)file_num_39 [map: 0, 8] : Success -> 0
Coalesce list: (23)i_23 & (45)i_45 [map: 1, 9] : Success -> 1
Coalesce list: (23)i_23 & (51)i_51 [map: 1, 11] : Success -> 1
Coalesce list: (23)i_23 & (52)i_52 [map: 1, 12] : Success -> 1
Coalesce list: (23)i_23 & (58)i_58 [map: 1, 13] : Success -> 1
Coalesce list: (50)time_50 & (61)time_61 [map: 10, 14] : Success -> 10
Coalesce list: (23)i_23 & (63)i_63 [map: 1, 15] : Success -> 1
Coalesce list: (23)i_23 & (67)i_67 [map: 1, 17] : Success -> 1
Coalesce list: (28)j_28 & (68)j_68 [map: 6, 18] : Success -> 6
Coalesce list: (23)i_23 & (69)i_69 [map: 1, 19] : Success -> 1
Coalesce list: (28)j_28 & (73)j_73 [map: 6, 20] : Success -> 6
Coalesce list: (23)i_23 & (75)i_75 [map: 1, 21] : Success -> 1
Coalesce list: (23)i_23 & (77)i_77 [map: 1, 22] : Success -> 1
Coalesce list: (22)file_num_22 & (79)file_num_79 [map: 0, 23] : Success -> 0
Coalesce list: (23)i_23 & (84)i_84 [map: 1, 25] : Success -> 1
Coalesce list: (29)_29 & (65)_65 [map: 7, 16] : Success -> 7
Coalesce list: (29)_29 & (81)_81 [map: 7, 24] : Success -> 7
Coalesce list: (27)i_23 & (67)i_23: Already Coalesced.
Coalesce list: (27)i_23 & (63)i_23: Already Coalesced.
Coalesce list: (26)i_23 & (69)i_23: Already Coalesced.
Coalesce list: (26)i_23 & (58)i_23: Already Coalesced.
Coalesce list: (28)j_28 & (73)j_28: Already Coalesced.
Coalesce list: (28)j_28 & (68)j_28: Already Coalesced.
Coalesce list: (25)i_23 & (75)i_23: Already Coalesced.
Coalesce list: (25)i_23 & (52)i_23: Already Coalesced.
Coalesce list: (24)i_23 & (77)i_23: Already Coalesced.
Coalesce list: (24)i_23 & (51)i_23: Already Coalesced.
Coalesce list: (22)file_num_22 & (79)file_num_22: Already Coalesced.
Coalesce list: (22)file_num_22 & (39)file_num_22: Already Coalesced.
Coalesce list: (23)i_23 & (84)i_23: Already Coalesced.
Coalesce list: (23)i_23 & (45)i_23: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (_8 - 8 )
Partition 8 (_9 - 9 )
Partition 9 (_10 - 10 )
Partition 10 (_11 - 11 )
Partition 11 (_12 - 12 )
Partition 12 (_13 - 13 )
Partition 13 (_14 - 14 )
Partition 14 (_15 - 15 )
Partition 15 (_16 - 16 )
Partition 16 (_17 - 17 )
Partition 17 (_18 - 18 )
Partition 18 (_19 - 19 )
Partition 19 (_20 - 20 )
Partition 20 (_21 - 21 )
Partition 21 (file_num_22 - 22 39 79 )
Partition 22 (i_23 - 23 24 25 26 27 45 51 52 58 63 67 69 75 77 84 )
Partition 23 (j_28 - 28 68 73 )
Partition 24 (_29 - 29 65 81 )
Partition 25 (read_filename_42 - 42 )
Partition 26 (filename_list_array_44 - 44 )
Partition 27 (time_50 - 50 61 )
Partition 28 (fp_55 - 55 )
Partition 29 (pHead_70 - 70 )
Partition 30 (_85(D) - 85 )

main ()
{
  struct FILE * fp;
  double time;
  struct Node * pHead;
  int j;
  int i;
  char * * filename_list_array;
  struct FILE * read_filename;
  int file_num;
  int D.3384;
  long unsigned int _1;
  long unsigned int _2;
  char * * _3;
  void * _4;
  long unsigned int _5;
  long unsigned int _6;
  char * * _7;
  char * _8;
  int _9;
  double _10;
  long unsigned int _11;
  long unsigned int _12;
  char * * _13;
  char * _14;
  struct Node * _15;
  char * _16;
  double _17;
  long unsigned int _18;
  long unsigned int _19;
  char * * _20;
  char * _21;
  int _29;
  int _65;
  int _81;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  file_num_39 = 0;
  read_filename_42 = fopen ("filename_list.txt", "r");
  filename_list_array_44 = malloc (800);
  i_45 = 0;
  goto <bb 4>; [0.00%]
;;    succ:       4

;;   basic block 3, loop depth 1
;;    pred:       4
  _1 = (long unsigned int) i_23;
  _2 = _1 * 8;
  _3 = filename_list_array_44 + _2;
  _4 = malloc (50);
  *_3 = _4;
  i_84 = i_23 + 1;
;;    succ:       4

;;   basic block 4, loop depth 1
;;    pred:       2
;;                3
  # i_23 = PHI <i_45(2), i_84(3)>
  if (i_23 <= 99)
    goto <bb 3>; [0.00%]
  else
    goto <bb 5>; [0.00%]
;;    succ:       3
;;                5

;;   basic block 5, loop depth 0
;;    pred:       4
  if (read_filename_42 == 0B)
    goto <bb 6>; [0.00%]
  else
    goto <bb 7>; [0.00%]
;;    succ:       6
;;                7

;;   basic block 6, loop depth 0
;;    pred:       5
  printf ("open the file incorrectly !");
  _81 = 0;
  goto <bb 29> (<L27>); [0.00%]
;;    succ:       29

;;   basic block 7, loop depth 0
;;    pred:       5
  goto <bb 9>; [0.00%]
;;    succ:       9

;;   basic block 8, loop depth 1
;;    pred:       9
  _5 = (long unsigned int) file_num_22;
  _6 = _5 * 8;
  _7 = filename_list_array_44 + _6;
  _8 = *_7;
  fscanf (read_filename_42, "%s\n", _8);
  file_num_79 = file_num_22 + 1;
;;    succ:       9

;;   basic block 9, loop depth 1
;;    pred:       7
;;                8
  # file_num_22 = PHI <file_num_39(7), file_num_79(8)>
  _9 = feof (read_filename_42);
  if (_9 == 0)
    goto <bb 8>; [0.00%]
  else
    goto <bb 10>; [0.00%]
;;    succ:       8
;;                10

;;   basic block 10, loop depth 0
;;    pred:       9
  __builtin_puts (&"The result can be found in output.txt ."[0]);
  omp_set_num_threads (8);
  _10 = omp_get_wtime ();
  time_50 = -_10;
  i_51 = 0;
  goto <bb 12>; [0.00%]
;;    succ:       12

;;   basic block 11, loop depth 1
;;    pred:       12
  _11 = (long unsigned int) i_24;
  _12 = _11 * 8;
  _13 = filename_list_array_44 + _12;
  _14 = *_13;
  readFunc (_14, i_24);
  i_77 = i_24 + 1;
;;    succ:       12

;;   basic block 12, loop depth 1
;;    pred:       10
;;                11
  # i_24 = PHI <i_51(10), i_77(11)>
  if (i_24 < file_num_22)
    goto <bb 11>; [0.00%]
  else
    goto <bb 13>; [0.00%]
;;    succ:       11
;;                13

;;   basic block 13, loop depth 0
;;    pred:       12
  i_52 = 0;
  goto <bb 15>; [0.00%]
;;    succ:       15

;;   basic block 14, loop depth 1
;;    pred:       15
  mapperFunc (i_25);
  i_75 = i_25 + 1;
;;    succ:       15

;;   basic block 15, loop depth 1
;;    pred:       13
;;                14
  # i_25 = PHI <i_52(13), i_75(14)>
  if (i_25 < file_num_22)
    goto <bb 14>; [0.00%]
  else
    goto <bb 16>; [0.00%]
;;    succ:       14
;;                16

;;   basic block 16, loop depth 0
;;    pred:       15
  reducerFunc (file_num_22);
  fp_55 = fopen ("output.txt", "w");
  writerFunc (fp_55);
  hashTablePrintFunc (100);
  i_58 = 0;
  goto <bb 24>; [0.00%]
;;    succ:       24

;;   basic block 17, loop depth 1
;;    pred:       24
  j_68 = 0;
  goto <bb 22>; [0.00%]
;;    succ:       22

;;   basic block 18, loop depth 2
;;    pred:       22
  _15 = hashTable[i_26][j_28];
  if (_15 != 0B)
    goto <bb 19>; [0.00%]
  else
    goto <bb 21>; [0.00%]
;;    succ:       19
;;                21

;;   basic block 19, loop depth 2
;;    pred:       18
  pHead_70 = hashTable[i_26][j_28];
  if (pHead_70 != 0B)
    goto <bb 20>; [0.00%]
  else
    goto <bb 21>; [0.00%]
;;    succ:       20
;;                21

;;   basic block 20, loop depth 2
;;    pred:       19
  _16 = pHead_70->Key;
  free (_16);
  free (pHead_70);
;;    succ:       21

;;   basic block 21, loop depth 2
;;    pred:       18
;;                19
;;                20
  j_73 = j_28 + 1;
;;    succ:       22

;;   basic block 22, loop depth 2
;;    pred:       17
;;                21
  # j_28 = PHI <j_68(17), j_73(21)>
  if (j_28 <= 99999)
    goto <bb 18>; [0.00%]
  else
    goto <bb 23>; [0.00%]
;;    succ:       18
;;                23

;;   basic block 23, loop depth 1
;;    pred:       22
  i_69 = i_26 + 1;
;;    succ:       24

;;   basic block 24, loop depth 1
;;    pred:       16
;;                23
  # i_26 = PHI <i_58(16), i_69(23)>
  if (i_26 <= 99)
    goto <bb 17>; [0.00%]
  else
    goto <bb 25>; [0.00%]
;;    succ:       17
;;                25

;;   basic block 25, loop depth 0
;;    pred:       24
  fclose (fp_55);
  _17 = omp_get_wtime ();
  time_61 = time_50 + _17;
  printf ("Elapsed time is %lf seconds. \n", time_61);
  i_63 = 0;
  goto <bb 27>; [0.00%]
;;    succ:       27

;;   basic block 26, loop depth 1
;;    pred:       27
  _18 = (long unsigned int) i_27;
  _19 = _18 * 8;
  _20 = filename_list_array_44 + _19;
  _21 = *_20;
  free (_21);
  i_67 = i_27 + 1;
;;    succ:       27

;;   basic block 27, loop depth 1
;;    pred:       25
;;                26
  # i_27 = PHI <i_63(25), i_67(26)>
  if (i_27 <= 99)
    goto <bb 26>; [0.00%]
  else
    goto <bb 28>; [0.00%]
;;    succ:       26
;;                28

;;   basic block 28, loop depth 0
;;    pred:       27
  free (filename_list_array_44);
  _65 = 0;
;;    succ:       29

;;   basic block 29, loop depth 0
;;    pred:       6
;;                28
  # _29 = PHI <_81(6), _65(28)>
<L27> [0.00%]:
  return _29;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; file_num_39 = 0;

(insn 5 4 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 file_num+0 S4 A32])
        (const_int 0 [0])) "test1.c":229 -1
     (nil))

;; read_filename_42 = fopen ("filename_list.txt", "r");

(insn 6 5 7 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fa517adce10 *.LC2>)) "test1.c":230 -1
     (nil))

(insn 7 6 8 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7fa517afe6c0 *.LC8>)) "test1.c":230 -1
     (nil))

(call_insn 8 7 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7fa517dd2a00 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) "test1.c":230 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 9 8 10 (set (reg:DI 110)
        (reg:DI 0 ax)) "test1.c":230 -1
     (nil))

(insn 10 9 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [7 read_filename+0 S8 A64])
        (reg:DI 110)) "test1.c":230 -1
     (nil))

;; filename_list_array_44 = malloc (800);

(insn 11 10 12 (set (reg:DI 5 di)
        (const_int 800 [0x320])) "test1.c":231 -1
     (nil))

(call_insn 12 11 13 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7fa517d22300 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) "test1.c":231 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 13 12 14 (set (reg/f:DI 111)
        (reg:DI 0 ax)) "test1.c":231 -1
     (expr_list:REG_NOALIAS (reg/f:DI 111)
        (nil)))

(insn 14 13 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [8 filename_list_array+0 S8 A64])
        (reg/f:DI 111)) "test1.c":231 -1
     (nil))

;; i_45 = 0;

(insn 15 14 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])
        (const_int 0 [0])) "test1.c":236 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _1 = (long unsigned int) i_23;

(insn 19 18 20 (set (reg:SI 112)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])) "test1.c":238 -1
     (nil))

(insn 20 19 0 (set (reg:DI 87 [ _1 ])
        (sign_extend:DI (reg:SI 112))) "test1.c":238 -1
     (nil))

;; _2 = _1 * 8;

(insn 21 20 0 (parallel [
            (set (reg:DI 88 [ _2 ])
                (ashift:DI (reg:DI 87 [ _1 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":238 -1
     (nil))

;; _3 = filename_list_array_44 + _2;

(insn 22 21 23 (set (reg/f:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [8 filename_list_array+0 S8 A64])) "test1.c":238 -1
     (nil))

(insn 23 22 0 (parallel [
            (set (reg/f:DI 89 [ _3 ])
                (plus:DI (reg:DI 88 [ _2 ])
                    (reg/f:DI 113)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":238 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [8 filename_list_array+0 S8 A64])
            (reg:DI 88 [ _2 ]))
        (nil)))

;; _4 = malloc (50);

(insn 24 23 25 (set (reg:DI 5 di)
        (const_int 50 [0x32])) "test1.c":238 -1
     (nil))

(call_insn 25 24 26 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7fa517d22300 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) "test1.c":238 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 26 25 27 (set (reg/f:DI 114)
        (reg:DI 0 ax)) "test1.c":238 -1
     (expr_list:REG_NOALIAS (reg/f:DI 114)
        (nil)))

(insn 27 26 0 (set (reg/f:DI 90 [ _4 ])
        (reg/f:DI 114)) "test1.c":238 -1
     (nil))

;; *_3 = _4;

(insn 28 27 0 (set (mem/f:DI (reg/f:DI 89 [ _3 ]) [3 *_3+0 S8 A64])
        (reg/f:DI 90 [ _4 ])) "test1.c":238 -1
     (nil))

;; i_84 = i_23 + 1;

(insn 29 28 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":236 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 30 29 31 55 (nil) [0 uses])

(note 31 30 0 NOTE_INSN_BASIC_BLOCK)

;; if (i_23 <= 99)

(insn 33 31 34 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])
            (const_int 99 [0x63]))) "test1.c":236 -1
     (nil))

(jump_insn 34 33 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 32)
            (pc))) "test1.c":236 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; if (read_filename_42 == 0B)

(insn 36 35 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [7 read_filename+0 S8 A64])
            (const_int 0 [0]))) "test1.c":241 -1
     (nil))

(jump_insn 37 36 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "test1.c":241 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; printf ("open the file incorrectly !");

(insn 39 38 40 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7fa517afe750 *.LC9>)) "test1.c":243 -1
     (nil))

(insn 40 39 41 (set (reg:QI 0 ax)
        (const_int 0 [0])) "test1.c":243 -1
     (nil))

(call_insn 41 40 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fa517cfff00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "test1.c":243 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; _81 = 0;

(insn 42 41 0 (set (reg:SI 108 [ _29 ])
        (const_int 0 [0])) "test1.c":244 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; 

(code_label 45 44 46 57 (nil) [0 uses])

(note 46 45 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 8

;; _5 = (long unsigned int) file_num_22;

(insn 50 49 51 (set (reg:SI 115)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 file_num+0 S4 A32])) "test1.c":248 -1
     (nil))

(insn 51 50 0 (set (reg:DI 91 [ _5 ])
        (sign_extend:DI (reg:SI 115))) "test1.c":248 -1
     (nil))

;; _6 = _5 * 8;

(insn 52 51 0 (parallel [
            (set (reg:DI 92 [ _6 ])
                (ashift:DI (reg:DI 91 [ _5 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":248 -1
     (nil))

;; _7 = filename_list_array_44 + _6;

(insn 53 52 54 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [8 filename_list_array+0 S8 A64])) "test1.c":248 -1
     (nil))

(insn 54 53 0 (parallel [
            (set (reg/f:DI 93 [ _7 ])
                (plus:DI (reg:DI 92 [ _6 ])
                    (reg/f:DI 116)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":248 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [8 filename_list_array+0 S8 A64])
            (reg:DI 92 [ _6 ]))
        (nil)))

;; _8 = *_7;

(insn 55 54 0 (set (reg/f:DI 94 [ _8 ])
        (mem/f:DI (reg/f:DI 93 [ _7 ]) [3 *_7+0 S8 A64])) "test1.c":248 -1
     (nil))

;; fscanf (read_filename_42, "%s\n", _8);

(insn 56 55 57 (set (reg:DI 117)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [7 read_filename+0 S8 A64])) "test1.c":248 -1
     (nil))

(insn 57 56 58 (set (reg:DI 1 dx)
        (reg/f:DI 94 [ _8 ])) "test1.c":248 -1
     (nil))

(insn 58 57 59 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7fa517afe7e0 *.LC10>)) "test1.c":248 -1
     (nil))

(insn 59 58 60 (set (reg:DI 5 di)
        (reg:DI 117)) "test1.c":248 -1
     (nil))

(insn 60 59 61 (set (reg:QI 0 ax)
        (const_int 0 [0])) "test1.c":248 -1
     (nil))

(call_insn 61 60 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_fscanf") [flags 0x41]  <function_decl 0x7fa517cff900 fscanf>) [0 __builtin_fscanf S1 A8])
            (const_int 0 [0]))) "test1.c":248 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))

;; file_num_79 = file_num_22 + 1;

(insn 62 61 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [1 file_num+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [1 file_num+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":249 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; 

(code_label 63 62 64 59 (nil) [0 uses])

(note 64 63 0 NOTE_INSN_BASIC_BLOCK)

;; _9 = feof (read_filename_42);

(insn 65 64 66 (set (reg:DI 118)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [7 read_filename+0 S8 A64])) "test1.c":246 -1
     (nil))

(insn 66 65 67 (set (reg:DI 5 di)
        (reg:DI 118)) "test1.c":246 -1
     (nil))

(call_insn 67 66 68 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("feof") [flags 0x41]  <function_decl 0x7fa517de9100 feof>) [0 feof S1 A8])
            (const_int 0 [0]))) "test1.c":246 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 68 67 0 (set (reg:SI 95 [ _9 ])
        (reg:SI 0 ax)) "test1.c":246 -1
     (nil))

;; if (_9 == 0)

(insn 70 68 71 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 95 [ _9 ])
            (const_int 0 [0]))) "test1.c":246 -1
     (nil))

(jump_insn 71 70 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 69)
            (pc))) "test1.c":246 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; __builtin_puts (&"The result can be found in output.txt ."[0]);

(insn 73 72 74 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7fa517afe870 *.LC11>)) "test1.c":251 -1
     (nil))

(call_insn 74 73 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa517d00600 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "test1.c":251 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; omp_set_num_threads (8);

(insn 75 74 76 (set (reg:SI 5 di)
        (const_int 8 [0x8])) "test1.c":253 -1
     (nil))

(call_insn 76 75 0 (call (mem:QI (symbol_ref:DI ("omp_set_num_threads") [flags 0x41]  <function_decl 0x7fa517a68100 omp_set_num_threads>) [0 omp_set_num_threads S1 A8])
        (const_int 0 [0])) "test1.c":253 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))

;; _10 = omp_get_wtime ();

(call_insn 77 76 78 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("omp_get_wtime") [flags 0x41]  <function_decl 0x7fa517a6c700 omp_get_wtime>) [0 omp_get_wtime S1 A8])
            (const_int 0 [0]))) "test1.c":254 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 78 77 0 (set (reg:DF 96 [ _10 ])
        (reg:DF 21 xmm0)) "test1.c":254 -1
     (nil))

;; time_50 = -_10;

(insn 79 78 80 (set (reg:V2DF 120)
        (mem/u/c:V2DF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [9  S16 A128])) "test1.c":254 -1
     (expr_list:REG_EQUAL (const_vector:V2DF [
                (const_double:DF -0.0 [-0x0.0p+0])
                (const_double:DF 0.0 [0x0.0p+0])
            ])
        (nil)))

(insn 80 79 81 (parallel [
            (set (reg:DF 119)
                (neg:DF (reg:DF 96 [ _10 ])))
            (use (reg:V2DF 120))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":254 -1
     (expr_list:REG_EQUAL (neg:DF (reg:DF 96 [ _10 ]))
        (nil)))

(insn 81 80 0 (set (mem/c:DF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [9 time+0 S8 A64])
        (reg:DF 119)) "test1.c":254 -1
     (nil))

;; i_51 = 0;

(insn 82 81 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])
        (const_int 0 [0])) "test1.c":259 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; _11 = (long unsigned int) i_24;

(insn 86 85 87 (set (reg:SI 121)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])) "test1.c":263 -1
     (nil))

(insn 87 86 0 (set (reg:DI 97 [ _11 ])
        (sign_extend:DI (reg:SI 121))) "test1.c":263 -1
     (nil))

;; _12 = _11 * 8;

(insn 88 87 0 (parallel [
            (set (reg:DI 98 [ _12 ])
                (ashift:DI (reg:DI 97 [ _11 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":263 -1
     (nil))

;; _13 = filename_list_array_44 + _12;

(insn 89 88 90 (set (reg/f:DI 122)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [8 filename_list_array+0 S8 A64])) "test1.c":263 -1
     (nil))

(insn 90 89 0 (parallel [
            (set (reg/f:DI 99 [ _13 ])
                (plus:DI (reg:DI 98 [ _12 ])
                    (reg/f:DI 122)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":263 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [8 filename_list_array+0 S8 A64])
            (reg:DI 98 [ _12 ]))
        (nil)))

;; _14 = *_13;

(insn 91 90 0 (set (reg/f:DI 100 [ _14 ])
        (mem/f:DI (reg/f:DI 99 [ _13 ]) [3 *_13+0 S8 A64])) "test1.c":263 -1
     (nil))

;; readFunc (_14, i_24);

(insn 92 91 93 (set (reg:SI 123)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])) "test1.c":263 -1
     (nil))

(insn 93 92 94 (set (reg:SI 4 si)
        (reg:SI 123)) "test1.c":263 -1
     (nil))

(insn 94 93 95 (set (reg:DI 5 di)
        (reg/f:DI 100 [ _14 ])) "test1.c":263 -1
     (nil))

(call_insn 95 94 0 (call (mem:QI (symbol_ref:DI ("readFunc") [flags 0x3]  <function_decl 0x7fa517a7c400 readFunc>) [0 readFunc S1 A8])
        (const_int 0 [0])) "test1.c":263 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))

;; i_77 = i_24 + 1;

(insn 96 95 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":259 -1
     (nil))

;; Generating RTL for gimple basic block 12

;; 

(code_label 97 96 98 61 (nil) [0 uses])

(note 98 97 0 NOTE_INSN_BASIC_BLOCK)

;; if (i_24 < file_num_22)

(insn 100 98 101 (set (reg:SI 124)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])) "test1.c":259 -1
     (nil))

(insn 101 100 102 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 124)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 file_num+0 S4 A32]))) "test1.c":259 -1
     (nil))

(jump_insn 102 101 0 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 99)
            (pc))) "test1.c":259 -1
     (nil))

;; Generating RTL for gimple basic block 13

;; i_52 = 0;

(insn 104 103 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])
        (const_int 0 [0])) "test1.c":272 -1
     (nil))

;; Generating RTL for gimple basic block 14

;; mapperFunc (i_25);

(insn 108 107 109 (set (reg:SI 125)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])) "test1.c":276 -1
     (nil))

(insn 109 108 110 (set (reg:SI 5 di)
        (reg:SI 125)) "test1.c":276 -1
     (nil))

(call_insn 110 109 0 (call (mem:QI (symbol_ref:DI ("mapperFunc") [flags 0x3]  <function_decl 0x7fa517a7c600 mapperFunc>) [0 mapperFunc S1 A8])
        (const_int 0 [0])) "test1.c":276 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))

;; i_75 = i_25 + 1;

(insn 111 110 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":272 -1
     (nil))

;; Generating RTL for gimple basic block 15

;; 

(code_label 112 111 113 63 (nil) [0 uses])

(note 113 112 0 NOTE_INSN_BASIC_BLOCK)

;; if (i_25 < file_num_22)

(insn 115 113 116 (set (reg:SI 126)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])) "test1.c":272 -1
     (nil))

(insn 116 115 117 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 126)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 file_num+0 S4 A32]))) "test1.c":272 -1
     (nil))

(jump_insn 117 116 0 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 114)
            (pc))) "test1.c":272 -1
     (nil))

;; Generating RTL for gimple basic block 16

;; reducerFunc (file_num_22);

(insn 119 118 120 (set (reg:SI 127)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 file_num+0 S4 A32])) "test1.c":282 -1
     (nil))

(insn 120 119 121 (set (reg:SI 5 di)
        (reg:SI 127)) "test1.c":282 -1
     (nil))

(call_insn 121 120 0 (call (mem:QI (symbol_ref:DI ("reducerFunc") [flags 0x3]  <function_decl 0x7fa517a7c800 reducerFunc>) [0 reducerFunc S1 A8])
        (const_int 0 [0])) "test1.c":282 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))

;; fp_55 = fopen ("output.txt", "w");

(insn 122 121 123 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7fa517afe900 *.LC13>)) "test1.c":284 -1
     (nil))

(insn 123 122 124 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7fa517afe990 *.LC14>)) "test1.c":284 -1
     (nil))

(call_insn 124 123 125 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7fa517dd2a00 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) "test1.c":284 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 125 124 126 (set (reg:DI 128)
        (reg:DI 0 ax)) "test1.c":284 -1
     (nil))

(insn 126 125 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [7 fp+0 S8 A64])
        (reg:DI 128)) "test1.c":284 -1
     (nil))

;; writerFunc (fp_55);

(insn 127 126 128 (set (reg:DI 129)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [7 fp+0 S8 A64])) "test1.c":286 -1
     (nil))

(insn 128 127 129 (set (reg:DI 5 di)
        (reg:DI 129)) "test1.c":286 -1
     (nil))

(call_insn 129 128 0 (call (mem:QI (symbol_ref:DI ("writerFunc") [flags 0x3]  <function_decl 0x7fa517a7ca00 writerFunc>) [0 writerFunc S1 A8])
        (const_int 0 [0])) "test1.c":286 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; hashTablePrintFunc (100);

(insn 130 129 131 (set (reg:SI 5 di)
        (const_int 100 [0x64])) "test1.c":288 -1
     (nil))

(call_insn 131 130 0 (call (mem:QI (symbol_ref:DI ("hashTablePrintFunc") [flags 0x3]  <function_decl 0x7fa517a7c000 hashTablePrintFunc>) [0 hashTablePrintFunc S1 A8])
        (const_int 0 [0])) "test1.c":288 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))

;; i_58 = 0;

(insn 132 131 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])
        (const_int 0 [0])) "test1.c":291 -1
     (nil))

;; Generating RTL for gimple basic block 17

;; j_68 = 0;

(insn 136 135 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 j+0 S4 A32])
        (const_int 0 [0])) "test1.c":293 -1
     (nil))

;; Generating RTL for gimple basic block 18
Applying pattern match.pd:84, generic-match.c:11461
Applying pattern match.pd:84, generic-match.c:11461
Applying pattern match.pd:84, generic-match.c:11461

;; _15 = hashTable[i_26][j_28];

(insn 140 139 141 (set (reg:SI 131)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 j+0 S4 A32])) "test1.c":295 -1
     (nil))

(insn 141 140 142 (set (reg:DI 130)
        (sign_extend:DI (reg:SI 131))) "test1.c":295 -1
     (nil))

(insn 142 141 143 (set (reg:SI 133)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])) "test1.c":295 -1
     (nil))

(insn 143 142 144 (set (reg:DI 132)
        (sign_extend:DI (reg:SI 133))) "test1.c":295 -1
     (nil))

(insn 144 143 145 (parallel [
            (set (reg:DI 134)
                (mult:DI (reg:DI 132)
                    (const_int 100000 [0x186a0])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":295 -1
     (nil))

(insn 145 144 146 (parallel [
            (set (reg:DI 135)
                (plus:DI (reg:DI 134)
                    (reg:DI 130)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":295 -1
     (nil))

(insn 146 145 147 (parallel [
            (set (reg:DI 136)
                (ashift:DI (reg:DI 135)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":295 -1
     (nil))

(insn 147 146 148 (set (reg:DI 137)
        (symbol_ref:DI ("hashTable") [flags 0x2]  <var_decl 0x7fa517a76000 hashTable>)) "test1.c":295 -1
     (nil))

(insn 148 147 0 (set (reg/f:DI 101 [ _15 ])
        (mem/f:DI (plus:DI (reg:DI 136)
                (reg:DI 137)) [2 hashTable S8 A64])) "test1.c":295 -1
     (nil))

;; if (_15 != 0B)

(insn 149 148 150 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 101 [ _15 ])
            (const_int 0 [0]))) "test1.c":295 -1
     (nil))

(jump_insn 150 149 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "test1.c":295 -1
     (nil))

;; Generating RTL for gimple basic block 19
Applying pattern match.pd:84, generic-match.c:11461
Applying pattern match.pd:84, generic-match.c:11461
Applying pattern match.pd:84, generic-match.c:11461

;; pHead_70 = hashTable[i_26][j_28];

(insn 152 151 153 (set (reg:SI 139)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 j+0 S4 A32])) "test1.c":297 -1
     (nil))

(insn 153 152 154 (set (reg:DI 138)
        (sign_extend:DI (reg:SI 139))) "test1.c":297 -1
     (nil))

(insn 154 153 155 (set (reg:SI 141)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])) "test1.c":297 -1
     (nil))

(insn 155 154 156 (set (reg:DI 140)
        (sign_extend:DI (reg:SI 141))) "test1.c":297 -1
     (nil))

(insn 156 155 157 (parallel [
            (set (reg:DI 142)
                (mult:DI (reg:DI 140)
                    (const_int 100000 [0x186a0])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":297 -1
     (nil))

(insn 157 156 158 (parallel [
            (set (reg:DI 143)
                (plus:DI (reg:DI 142)
                    (reg:DI 138)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":297 -1
     (nil))

(insn 158 157 159 (parallel [
            (set (reg:DI 144)
                (ashift:DI (reg:DI 143)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":297 -1
     (nil))

(insn 159 158 160 (set (reg:DI 145)
        (symbol_ref:DI ("hashTable") [flags 0x2]  <var_decl 0x7fa517a76000 hashTable>)) "test1.c":297 -1
     (nil))

(insn 160 159 161 (set (reg/f:DI 146)
        (mem/f:DI (plus:DI (reg:DI 144)
                (reg:DI 145)) [2 hashTable S8 A64])) "test1.c":297 -1
     (nil))

(insn 161 160 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [2 pHead+0 S8 A64])
        (reg/f:DI 146)) "test1.c":297 -1
     (nil))

;; if (pHead_70 != 0B)

(insn 162 161 163 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -56 [0xffffffffffffffc8])) [2 pHead+0 S8 A64])
            (const_int 0 [0]))) "test1.c":298 -1
     (nil))

(jump_insn 163 162 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "test1.c":298 -1
     (nil))

;; Generating RTL for gimple basic block 20

;; _16 = pHead_70->Key;

(insn 165 164 166 (set (reg/f:DI 147)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [2 pHead+0 S8 A64])) "test1.c":300 -1
     (nil))

(insn 166 165 0 (set (reg/f:DI 102 [ _16 ])
        (mem/f:DI (reg/f:DI 147) [3 pHead_70->Key+0 S8 A64])) "test1.c":300 -1
     (nil))

;; free (_16);

(insn 167 166 168 (set (reg:DI 5 di)
        (reg/f:DI 102 [ _16 ])) "test1.c":300 -1
     (nil))

(call_insn 168 167 0 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fa517d1a800 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "test1.c":300 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; free (pHead_70);

(insn 169 168 170 (set (reg:DI 148)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [2 pHead+0 S8 A64])) "test1.c":301 -1
     (nil))

(insn 170 169 171 (set (reg:DI 5 di)
        (reg:DI 148)) "test1.c":301 -1
     (nil))

(call_insn 171 170 0 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fa517d1a800 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "test1.c":301 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; Generating RTL for gimple basic block 21

;; 

(code_label 172 171 173 67 (nil) [0 uses])

(note 173 172 0 NOTE_INSN_BASIC_BLOCK)

;; j_73 = j_28 + 1;

(insn 174 173 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":293 -1
     (nil))

;; Generating RTL for gimple basic block 22

;; 

(code_label 175 174 176 66 (nil) [0 uses])

(note 176 175 0 NOTE_INSN_BASIC_BLOCK)

;; if (j_28 <= 99999)

(insn 178 176 179 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 j+0 S4 A32])
            (const_int 99999 [0x1869f]))) "test1.c":293 -1
     (nil))

(jump_insn 179 178 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 177)
            (pc))) "test1.c":293 -1
     (nil))

;; Generating RTL for gimple basic block 23

;; i_69 = i_26 + 1;

(insn 181 180 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":291 -1
     (nil))

;; Generating RTL for gimple basic block 24

;; 

(code_label 182 181 183 65 (nil) [0 uses])

(note 183 182 0 NOTE_INSN_BASIC_BLOCK)

;; if (i_26 <= 99)

(insn 185 183 186 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])
            (const_int 99 [0x63]))) "test1.c":291 -1
     (nil))

(jump_insn 186 185 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 184)
            (pc))) "test1.c":291 -1
     (nil))

;; Generating RTL for gimple basic block 25

;; fclose (fp_55);

(insn 188 187 189 (set (reg:DI 149)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [7 fp+0 S8 A64])) "test1.c":308 -1
     (nil))

(insn 189 188 190 (set (reg:DI 5 di)
        (reg:DI 149)) "test1.c":308 -1
     (nil))

(call_insn 190 189 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7fa517dd2700 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) "test1.c":308 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; _17 = omp_get_wtime ();

(call_insn 191 190 192 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("omp_get_wtime") [flags 0x41]  <function_decl 0x7fa517a6c700 omp_get_wtime>) [0 omp_get_wtime S1 A8])
            (const_int 0 [0]))) "test1.c":309 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 192 191 0 (set (reg:DF 103 [ _17 ])
        (reg:DF 21 xmm0)) "test1.c":309 -1
     (nil))

;; time_61 = time_50 + _17;

(insn 193 192 194 (set (reg:DF 151)
        (mem/c:DF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [9 time+0 S8 A64])) "test1.c":309 -1
     (nil))

(insn 194 193 195 (set (reg:DF 150)
        (plus:DF (reg:DF 151)
            (reg:DF 103 [ _17 ]))) "test1.c":309 -1
     (nil))

(insn 195 194 0 (set (mem/c:DF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [9 time+0 S8 A64])
        (reg:DF 150)) "test1.c":309 -1
     (nil))

;; printf ("Elapsed time is %lf seconds. \n", time_61);

(insn 196 195 197 (set (reg:DF 152)
        (mem/c:DF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [9 time+0 S8 A64])) "test1.c":310 -1
     (nil))

(insn 197 196 198 (set (reg:DF 21 xmm0)
        (reg:DF 152)) "test1.c":310 -1
     (nil))

(insn 198 197 199 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7fa517afea20 *.LC15>)) "test1.c":310 -1
     (nil))

(insn 199 198 200 (set (reg:QI 0 ax)
        (const_int 1 [0x1])) "test1.c":310 -1
     (nil))

(call_insn 200 199 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fa517cfff00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "test1.c":310 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DF (use (reg:DF 21 xmm0))
                (nil)))))

;; i_63 = 0;

(insn 201 200 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])
        (const_int 0 [0])) "test1.c":312 -1
     (nil))

;; Generating RTL for gimple basic block 26

;; _18 = (long unsigned int) i_27;

(insn 205 204 206 (set (reg:SI 153)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])) "test1.c":314 -1
     (nil))

(insn 206 205 0 (set (reg:DI 104 [ _18 ])
        (sign_extend:DI (reg:SI 153))) "test1.c":314 -1
     (nil))

;; _19 = _18 * 8;

(insn 207 206 0 (parallel [
            (set (reg:DI 105 [ _19 ])
                (ashift:DI (reg:DI 104 [ _18 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":314 -1
     (nil))

;; _20 = filename_list_array_44 + _19;

(insn 208 207 209 (set (reg/f:DI 154)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [8 filename_list_array+0 S8 A64])) "test1.c":314 -1
     (nil))

(insn 209 208 0 (parallel [
            (set (reg/f:DI 106 [ _20 ])
                (plus:DI (reg:DI 105 [ _19 ])
                    (reg/f:DI 154)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":314 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [8 filename_list_array+0 S8 A64])
            (reg:DI 105 [ _19 ]))
        (nil)))

;; _21 = *_20;

(insn 210 209 0 (set (reg/f:DI 107 [ _21 ])
        (mem/f:DI (reg/f:DI 106 [ _20 ]) [3 *_20+0 S8 A64])) "test1.c":314 -1
     (nil))

;; free (_21);

(insn 211 210 212 (set (reg:DI 5 di)
        (reg/f:DI 107 [ _21 ])) "test1.c":314 -1
     (nil))

(call_insn 212 211 0 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fa517d1a800 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "test1.c":314 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; i_67 = i_27 + 1;

(insn 213 212 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":312 -1
     (nil))

;; Generating RTL for gimple basic block 27

;; 

(code_label 214 213 215 70 (nil) [0 uses])

(note 215 214 0 NOTE_INSN_BASIC_BLOCK)

;; if (i_27 <= 99)

(insn 217 215 218 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])
            (const_int 99 [0x63]))) "test1.c":312 -1
     (nil))

(jump_insn 218 217 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 216)
            (pc))) "test1.c":312 -1
     (nil))

;; Generating RTL for gimple basic block 28

;; free (filename_list_array_44);

(insn 220 219 221 (set (reg:DI 155)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [8 filename_list_array+0 S8 A64])) "test1.c":316 -1
     (nil))

(insn 221 220 222 (set (reg:DI 5 di)
        (reg:DI 155)) "test1.c":316 -1
     (nil))

(call_insn 222 221 0 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fa517d1a800 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "test1.c":316 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; _65 = 0;

(insn 223 222 0 (set (reg:SI 108 [ _29 ])
        (const_int 0 [0])) "test1.c":318 -1
     (nil))

;; Generating RTL for gimple basic block 29

;; <L27> [0.00%]:

(code_label 224 223 225 58 (nil) [0 uses])

(note 225 224 0 NOTE_INSN_BASIC_BLOCK)

;; return _29;

(insn 226 225 227 (set (reg:SI 109 [ <retval> ])
        (reg:SI 108 [ _29 ])) -1
     (nil))

(jump_insn 227 226 228 (set (pc)
        (label_ref 0)) -1
     (nil))

(barrier 228 227 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 227.
Merging block 31 into block 30...
Merged blocks 30 and 31.
Merged 30 and 31 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 file_num+0 S4 A32])
        (const_int 0 [0])) "test1.c":229 -1
     (nil))
(insn 6 5 7 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fa517adce10 *.LC2>)) "test1.c":230 -1
     (nil))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7fa517afe6c0 *.LC8>)) "test1.c":230 -1
     (nil))
(call_insn 8 7 9 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7fa517dd2a00 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) "test1.c":230 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 9 8 10 2 (set (reg:DI 110)
        (reg:DI 0 ax)) "test1.c":230 -1
     (nil))
(insn 10 9 11 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [7 read_filename+0 S8 A64])
        (reg:DI 110)) "test1.c":230 -1
     (nil))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (const_int 800 [0x320])) "test1.c":231 -1
     (nil))
(call_insn 12 11 13 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7fa517d22300 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) "test1.c":231 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 13 12 14 2 (set (reg/f:DI 111)
        (reg:DI 0 ax)) "test1.c":231 -1
     (expr_list:REG_NOALIAS (reg/f:DI 111)
        (nil)))
(insn 14 13 15 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [8 filename_list_array+0 S8 A64])
        (reg/f:DI 111)) "test1.c":231 -1
     (nil))
(insn 15 14 16 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])
        (const_int 0 [0])) "test1.c":236 -1
     (nil))
(jump_insn 16 15 17 2 (set (pc)
        (label_ref 30)) "test1.c":236 -1
     (nil)
 -> 30)
;;  succ:       5

(barrier 17 16 32)
;; basic block 4, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
(code_label 32 17 18 4 56 (nil) [1 uses])
(note 18 32 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (set (reg:SI 112)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])) "test1.c":238 -1
     (nil))
(insn 20 19 21 4 (set (reg:DI 87 [ _1 ])
        (sign_extend:DI (reg:SI 112))) "test1.c":238 -1
     (nil))
(insn 21 20 22 4 (parallel [
            (set (reg:DI 88 [ _2 ])
                (ashift:DI (reg:DI 87 [ _1 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":238 -1
     (nil))
(insn 22 21 23 4 (set (reg/f:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [8 filename_list_array+0 S8 A64])) "test1.c":238 -1
     (nil))
(insn 23 22 24 4 (parallel [
            (set (reg/f:DI 89 [ _3 ])
                (plus:DI (reg:DI 88 [ _2 ])
                    (reg/f:DI 113)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":238 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [8 filename_list_array+0 S8 A64])
            (reg:DI 88 [ _2 ]))
        (nil)))
(insn 24 23 25 4 (set (reg:DI 5 di)
        (const_int 50 [0x32])) "test1.c":238 -1
     (nil))
(call_insn 25 24 26 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7fa517d22300 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) "test1.c":238 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 26 25 27 4 (set (reg/f:DI 114)
        (reg:DI 0 ax)) "test1.c":238 -1
     (expr_list:REG_NOALIAS (reg/f:DI 114)
        (nil)))
(insn 27 26 28 4 (set (reg/f:DI 90 [ _4 ])
        (reg/f:DI 114)) "test1.c":238 -1
     (nil))
(insn 28 27 29 4 (set (mem/f:DI (reg/f:DI 89 [ _3 ]) [3 *_3+0 S8 A64])
        (reg/f:DI 90 [ _4 ])) "test1.c":238 -1
     (nil))
(insn 29 28 30 4 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":236 -1
     (nil))
;;  succ:       5 (FALLTHRU,DFS_BACK)

;; basic block 5, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              4 (FALLTHRU,DFS_BACK)
(code_label 30 29 31 5 55 (nil) [1 uses])
(note 31 30 33 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 33 31 34 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])
            (const_int 99 [0x63]))) "test1.c":236 -1
     (nil))
(jump_insn 34 33 35 5 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 32)
            (pc))) "test1.c":236 -1
     (nil)
 -> 32)
;;  succ:       4
;;              6 (FALLTHRU)

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
(note 35 34 36 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [7 read_filename+0 S8 A64])
            (const_int 0 [0]))) "test1.c":241 -1
     (nil))
(jump_insn 37 36 38 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 45)
            (pc))) "test1.c":241 -1
     (nil)
 -> 45)
;;  succ:       7 (FALLTHRU)
;;              8

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 (FALLTHRU)
(note 38 37 39 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 7 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7fa517afe750 *.LC9>)) "test1.c":243 -1
     (nil))
(insn 40 39 41 7 (set (reg:QI 0 ax)
        (const_int 0 [0])) "test1.c":243 -1
     (nil))
(call_insn 41 40 42 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fa517cfff00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "test1.c":243 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 42 41 43 7 (set (reg:SI 108 [ _29 ])
        (const_int 0 [0])) "test1.c":244 -1
     (nil))
(jump_insn 43 42 44 7 (set (pc)
        (label_ref 224)) "test1.c":244 -1
     (nil)
 -> 224)
;;  succ:       30

(barrier 44 43 45)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       6
(code_label 45 44 46 8 57 (nil) [1 uses])
(note 46 45 47 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(jump_insn 47 46 48 8 (set (pc)
        (label_ref 63)) "test1.c":246 -1
     (nil)
 -> 63)
;;  succ:       10

(barrier 48 47 69)
;; basic block 9, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       10
(code_label 69 48 49 9 60 (nil) [1 uses])
(note 49 69 50 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 9 (set (reg:SI 115)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 file_num+0 S4 A32])) "test1.c":248 -1
     (nil))
(insn 51 50 52 9 (set (reg:DI 91 [ _5 ])
        (sign_extend:DI (reg:SI 115))) "test1.c":248 -1
     (nil))
(insn 52 51 53 9 (parallel [
            (set (reg:DI 92 [ _6 ])
                (ashift:DI (reg:DI 91 [ _5 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":248 -1
     (nil))
(insn 53 52 54 9 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [8 filename_list_array+0 S8 A64])) "test1.c":248 -1
     (nil))
(insn 54 53 55 9 (parallel [
            (set (reg/f:DI 93 [ _7 ])
                (plus:DI (reg:DI 92 [ _6 ])
                    (reg/f:DI 116)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":248 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [8 filename_list_array+0 S8 A64])
            (reg:DI 92 [ _6 ]))
        (nil)))
(insn 55 54 56 9 (set (reg/f:DI 94 [ _8 ])
        (mem/f:DI (reg/f:DI 93 [ _7 ]) [3 *_7+0 S8 A64])) "test1.c":248 -1
     (nil))
(insn 56 55 57 9 (set (reg:DI 117)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [7 read_filename+0 S8 A64])) "test1.c":248 -1
     (nil))
(insn 57 56 58 9 (set (reg:DI 1 dx)
        (reg/f:DI 94 [ _8 ])) "test1.c":248 -1
     (nil))
(insn 58 57 59 9 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7fa517afe7e0 *.LC10>)) "test1.c":248 -1
     (nil))
(insn 59 58 60 9 (set (reg:DI 5 di)
        (reg:DI 117)) "test1.c":248 -1
     (nil))
(insn 60 59 61 9 (set (reg:QI 0 ax)
        (const_int 0 [0])) "test1.c":248 -1
     (nil))
(call_insn 61 60 62 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_fscanf") [flags 0x41]  <function_decl 0x7fa517cff900 fscanf>) [0 __builtin_fscanf S1 A8])
            (const_int 0 [0]))) "test1.c":248 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 62 61 63 9 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [1 file_num+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [1 file_num+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":249 -1
     (nil))
;;  succ:       10 (FALLTHRU,DFS_BACK)

;; basic block 10, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       8
;;              9 (FALLTHRU,DFS_BACK)
(code_label 63 62 64 10 59 (nil) [1 uses])
(note 64 63 65 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 10 (set (reg:DI 118)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [7 read_filename+0 S8 A64])) "test1.c":246 -1
     (nil))
(insn 66 65 67 10 (set (reg:DI 5 di)
        (reg:DI 118)) "test1.c":246 -1
     (nil))
(call_insn 67 66 68 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("feof") [flags 0x41]  <function_decl 0x7fa517de9100 feof>) [0 feof S1 A8])
            (const_int 0 [0]))) "test1.c":246 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 68 67 70 10 (set (reg:SI 95 [ _9 ])
        (reg:SI 0 ax)) "test1.c":246 -1
     (nil))
(insn 70 68 71 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 95 [ _9 ])
            (const_int 0 [0]))) "test1.c":246 -1
     (nil))
(jump_insn 71 70 72 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 69)
            (pc))) "test1.c":246 -1
     (nil)
 -> 69)
;;  succ:       9
;;              11 (FALLTHRU)

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       10 (FALLTHRU)
(note 72 71 73 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 11 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7fa517afe870 *.LC11>)) "test1.c":251 -1
     (nil))
(call_insn 74 73 75 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa517d00600 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "test1.c":251 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 75 74 76 11 (set (reg:SI 5 di)
        (const_int 8 [0x8])) "test1.c":253 -1
     (nil))
(call_insn 76 75 77 11 (call (mem:QI (symbol_ref:DI ("omp_set_num_threads") [flags 0x41]  <function_decl 0x7fa517a68100 omp_set_num_threads>) [0 omp_set_num_threads S1 A8])
        (const_int 0 [0])) "test1.c":253 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(call_insn 77 76 78 11 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("omp_get_wtime") [flags 0x41]  <function_decl 0x7fa517a6c700 omp_get_wtime>) [0 omp_get_wtime S1 A8])
            (const_int 0 [0]))) "test1.c":254 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 78 77 79 11 (set (reg:DF 96 [ _10 ])
        (reg:DF 21 xmm0)) "test1.c":254 -1
     (nil))
(insn 79 78 80 11 (set (reg:V2DF 120)
        (mem/u/c:V2DF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [9  S16 A128])) "test1.c":254 -1
     (expr_list:REG_EQUAL (const_vector:V2DF [
                (const_double:DF -0.0 [-0x0.0p+0])
                (const_double:DF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 80 79 81 11 (parallel [
            (set (reg:DF 119)
                (neg:DF (reg:DF 96 [ _10 ])))
            (use (reg:V2DF 120))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":254 -1
     (expr_list:REG_EQUAL (neg:DF (reg:DF 96 [ _10 ]))
        (nil)))
(insn 81 80 82 11 (set (mem/c:DF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [9 time+0 S8 A64])
        (reg:DF 119)) "test1.c":254 -1
     (nil))
(insn 82 81 83 11 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])
        (const_int 0 [0])) "test1.c":259 -1
     (nil))
(jump_insn 83 82 84 11 (set (pc)
        (label_ref 97)) "test1.c":259 -1
     (nil)
 -> 97)
;;  succ:       13

(barrier 84 83 99)
;; basic block 12, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       13
(code_label 99 84 85 12 62 (nil) [1 uses])
(note 85 99 86 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 87 12 (set (reg:SI 121)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])) "test1.c":263 -1
     (nil))
(insn 87 86 88 12 (set (reg:DI 97 [ _11 ])
        (sign_extend:DI (reg:SI 121))) "test1.c":263 -1
     (nil))
(insn 88 87 89 12 (parallel [
            (set (reg:DI 98 [ _12 ])
                (ashift:DI (reg:DI 97 [ _11 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":263 -1
     (nil))
(insn 89 88 90 12 (set (reg/f:DI 122)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [8 filename_list_array+0 S8 A64])) "test1.c":263 -1
     (nil))
(insn 90 89 91 12 (parallel [
            (set (reg/f:DI 99 [ _13 ])
                (plus:DI (reg:DI 98 [ _12 ])
                    (reg/f:DI 122)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":263 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [8 filename_list_array+0 S8 A64])
            (reg:DI 98 [ _12 ]))
        (nil)))
(insn 91 90 92 12 (set (reg/f:DI 100 [ _14 ])
        (mem/f:DI (reg/f:DI 99 [ _13 ]) [3 *_13+0 S8 A64])) "test1.c":263 -1
     (nil))
(insn 92 91 93 12 (set (reg:SI 123)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])) "test1.c":263 -1
     (nil))
(insn 93 92 94 12 (set (reg:SI 4 si)
        (reg:SI 123)) "test1.c":263 -1
     (nil))
(insn 94 93 95 12 (set (reg:DI 5 di)
        (reg/f:DI 100 [ _14 ])) "test1.c":263 -1
     (nil))
(call_insn 95 94 96 12 (call (mem:QI (symbol_ref:DI ("readFunc") [flags 0x3]  <function_decl 0x7fa517a7c400 readFunc>) [0 readFunc S1 A8])
        (const_int 0 [0])) "test1.c":263 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 96 95 97 12 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":259 -1
     (nil))
;;  succ:       13 (FALLTHRU,DFS_BACK)

;; basic block 13, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       11
;;              12 (FALLTHRU,DFS_BACK)
(code_label 97 96 98 13 61 (nil) [1 uses])
(note 98 97 100 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 100 98 101 13 (set (reg:SI 124)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])) "test1.c":259 -1
     (nil))
(insn 101 100 102 13 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 124)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 file_num+0 S4 A32]))) "test1.c":259 -1
     (nil))
(jump_insn 102 101 103 13 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 99)
            (pc))) "test1.c":259 -1
     (nil)
 -> 99)
;;  succ:       12
;;              14 (FALLTHRU)

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       13 (FALLTHRU)
(note 103 102 104 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 104 103 105 14 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])
        (const_int 0 [0])) "test1.c":272 -1
     (nil))
(jump_insn 105 104 106 14 (set (pc)
        (label_ref 112)) "test1.c":272 -1
     (nil)
 -> 112)
;;  succ:       16

(barrier 106 105 114)
;; basic block 15, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL)
;;  pred:       16
(code_label 114 106 107 15 64 (nil) [1 uses])
(note 107 114 108 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 108 107 109 15 (set (reg:SI 125)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])) "test1.c":276 -1
     (nil))
(insn 109 108 110 15 (set (reg:SI 5 di)
        (reg:SI 125)) "test1.c":276 -1
     (nil))
(call_insn 110 109 111 15 (call (mem:QI (symbol_ref:DI ("mapperFunc") [flags 0x3]  <function_decl 0x7fa517a7c600 mapperFunc>) [0 mapperFunc S1 A8])
        (const_int 0 [0])) "test1.c":276 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 111 110 112 15 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":272 -1
     (nil))
;;  succ:       16 (FALLTHRU,DFS_BACK)

;; basic block 16, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL)
;;  pred:       14
;;              15 (FALLTHRU,DFS_BACK)
(code_label 112 111 113 16 63 (nil) [1 uses])
(note 113 112 115 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 115 113 116 16 (set (reg:SI 126)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])) "test1.c":272 -1
     (nil))
(insn 116 115 117 16 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 126)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 file_num+0 S4 A32]))) "test1.c":272 -1
     (nil))
(jump_insn 117 116 118 16 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 114)
            (pc))) "test1.c":272 -1
     (nil)
 -> 114)
;;  succ:       15
;;              17 (FALLTHRU)

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL)
;;  pred:       16 (FALLTHRU)
(note 118 117 119 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 119 118 120 17 (set (reg:SI 127)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 file_num+0 S4 A32])) "test1.c":282 -1
     (nil))
(insn 120 119 121 17 (set (reg:SI 5 di)
        (reg:SI 127)) "test1.c":282 -1
     (nil))
(call_insn 121 120 122 17 (call (mem:QI (symbol_ref:DI ("reducerFunc") [flags 0x3]  <function_decl 0x7fa517a7c800 reducerFunc>) [0 reducerFunc S1 A8])
        (const_int 0 [0])) "test1.c":282 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 122 121 123 17 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7fa517afe900 *.LC13>)) "test1.c":284 -1
     (nil))
(insn 123 122 124 17 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7fa517afe990 *.LC14>)) "test1.c":284 -1
     (nil))
(call_insn 124 123 125 17 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7fa517dd2a00 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) "test1.c":284 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 125 124 126 17 (set (reg:DI 128)
        (reg:DI 0 ax)) "test1.c":284 -1
     (nil))
(insn 126 125 127 17 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [7 fp+0 S8 A64])
        (reg:DI 128)) "test1.c":284 -1
     (nil))
(insn 127 126 128 17 (set (reg:DI 129)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [7 fp+0 S8 A64])) "test1.c":286 -1
     (nil))
(insn 128 127 129 17 (set (reg:DI 5 di)
        (reg:DI 129)) "test1.c":286 -1
     (nil))
(call_insn 129 128 130 17 (call (mem:QI (symbol_ref:DI ("writerFunc") [flags 0x3]  <function_decl 0x7fa517a7ca00 writerFunc>) [0 writerFunc S1 A8])
        (const_int 0 [0])) "test1.c":286 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 130 129 131 17 (set (reg:SI 5 di)
        (const_int 100 [0x64])) "test1.c":288 -1
     (nil))
(call_insn 131 130 132 17 (call (mem:QI (symbol_ref:DI ("hashTablePrintFunc") [flags 0x3]  <function_decl 0x7fa517a7c000 hashTablePrintFunc>) [0 hashTablePrintFunc S1 A8])
        (const_int 0 [0])) "test1.c":288 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 132 131 133 17 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])
        (const_int 0 [0])) "test1.c":291 -1
     (nil))
(jump_insn 133 132 134 17 (set (pc)
        (label_ref 182)) "test1.c":291 -1
     (nil)
 -> 182)
;;  succ:       25

(barrier 134 133 184)
;; basic block 18, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL)
;;  pred:       25
(code_label 184 134 135 18 69 (nil) [1 uses])
(note 135 184 136 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 136 135 137 18 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 j+0 S4 A32])
        (const_int 0 [0])) "test1.c":293 -1
     (nil))
(jump_insn 137 136 138 18 (set (pc)
        (label_ref 175)) "test1.c":293 -1
     (nil)
 -> 175)
;;  succ:       23

(barrier 138 137 177)
;; basic block 19, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL)
;;  pred:       23
(code_label 177 138 139 19 68 (nil) [1 uses])
(note 139 177 140 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 140 139 141 19 (set (reg:SI 131)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 j+0 S4 A32])) "test1.c":295 -1
     (nil))
(insn 141 140 142 19 (set (reg:DI 130)
        (sign_extend:DI (reg:SI 131))) "test1.c":295 -1
     (nil))
(insn 142 141 143 19 (set (reg:SI 133)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])) "test1.c":295 -1
     (nil))
(insn 143 142 144 19 (set (reg:DI 132)
        (sign_extend:DI (reg:SI 133))) "test1.c":295 -1
     (nil))
(insn 144 143 145 19 (parallel [
            (set (reg:DI 134)
                (mult:DI (reg:DI 132)
                    (const_int 100000 [0x186a0])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":295 -1
     (nil))
(insn 145 144 146 19 (parallel [
            (set (reg:DI 135)
                (plus:DI (reg:DI 134)
                    (reg:DI 130)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":295 -1
     (nil))
(insn 146 145 147 19 (parallel [
            (set (reg:DI 136)
                (ashift:DI (reg:DI 135)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":295 -1
     (nil))
(insn 147 146 148 19 (set (reg:DI 137)
        (symbol_ref:DI ("hashTable") [flags 0x2]  <var_decl 0x7fa517a76000 hashTable>)) "test1.c":295 -1
     (nil))
(insn 148 147 149 19 (set (reg/f:DI 101 [ _15 ])
        (mem/f:DI (plus:DI (reg:DI 136)
                (reg:DI 137)) [2 hashTable S8 A64])) "test1.c":295 -1
     (nil))
(insn 149 148 150 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 101 [ _15 ])
            (const_int 0 [0]))) "test1.c":295 -1
     (nil))
(jump_insn 150 149 151 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 172)
            (pc))) "test1.c":295 -1
     (nil)
 -> 172)
;;  succ:       20 (FALLTHRU)
;;              22

;; basic block 20, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL)
;;  pred:       19 (FALLTHRU)
(note 151 150 152 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 152 151 153 20 (set (reg:SI 139)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 j+0 S4 A32])) "test1.c":297 -1
     (nil))
(insn 153 152 154 20 (set (reg:DI 138)
        (sign_extend:DI (reg:SI 139))) "test1.c":297 -1
     (nil))
(insn 154 153 155 20 (set (reg:SI 141)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])) "test1.c":297 -1
     (nil))
(insn 155 154 156 20 (set (reg:DI 140)
        (sign_extend:DI (reg:SI 141))) "test1.c":297 -1
     (nil))
(insn 156 155 157 20 (parallel [
            (set (reg:DI 142)
                (mult:DI (reg:DI 140)
                    (const_int 100000 [0x186a0])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":297 -1
     (nil))
(insn 157 156 158 20 (parallel [
            (set (reg:DI 143)
                (plus:DI (reg:DI 142)
                    (reg:DI 138)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":297 -1
     (nil))
(insn 158 157 159 20 (parallel [
            (set (reg:DI 144)
                (ashift:DI (reg:DI 143)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":297 -1
     (nil))
(insn 159 158 160 20 (set (reg:DI 145)
        (symbol_ref:DI ("hashTable") [flags 0x2]  <var_decl 0x7fa517a76000 hashTable>)) "test1.c":297 -1
     (nil))
(insn 160 159 161 20 (set (reg/f:DI 146)
        (mem/f:DI (plus:DI (reg:DI 144)
                (reg:DI 145)) [2 hashTable S8 A64])) "test1.c":297 -1
     (nil))
(insn 161 160 162 20 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [2 pHead+0 S8 A64])
        (reg/f:DI 146)) "test1.c":297 -1
     (nil))
(insn 162 161 163 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -56 [0xffffffffffffffc8])) [2 pHead+0 S8 A64])
            (const_int 0 [0]))) "test1.c":298 -1
     (nil))
(jump_insn 163 162 164 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 172)
            (pc))) "test1.c":298 -1
     (nil)
 -> 172)
;;  succ:       21 (FALLTHRU)
;;              22

;; basic block 21, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL)
;;  pred:       20 (FALLTHRU)
(note 164 163 165 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 165 164 166 21 (set (reg/f:DI 147)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [2 pHead+0 S8 A64])) "test1.c":300 -1
     (nil))
(insn 166 165 167 21 (set (reg/f:DI 102 [ _16 ])
        (mem/f:DI (reg/f:DI 147) [3 pHead_70->Key+0 S8 A64])) "test1.c":300 -1
     (nil))
(insn 167 166 168 21 (set (reg:DI 5 di)
        (reg/f:DI 102 [ _16 ])) "test1.c":300 -1
     (nil))
(call_insn 168 167 169 21 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fa517d1a800 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "test1.c":300 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 169 168 170 21 (set (reg:DI 148)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [2 pHead+0 S8 A64])) "test1.c":301 -1
     (nil))
(insn 170 169 171 21 (set (reg:DI 5 di)
        (reg:DI 148)) "test1.c":301 -1
     (nil))
(call_insn 171 170 172 21 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fa517d1a800 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "test1.c":301 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       22 (FALLTHRU)

;; basic block 22, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL)
;;  pred:       19
;;              20
;;              21 (FALLTHRU)
(code_label 172 171 173 22 67 (nil) [2 uses])
(note 173 172 174 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 174 173 175 22 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":293 -1
     (nil))
;;  succ:       23 (FALLTHRU,DFS_BACK)

;; basic block 23, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL)
;;  pred:       18
;;              22 (FALLTHRU,DFS_BACK)
(code_label 175 174 176 23 66 (nil) [1 uses])
(note 176 175 178 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 178 176 179 23 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 j+0 S4 A32])
            (const_int 99999 [0x1869f]))) "test1.c":293 -1
     (nil))
(jump_insn 179 178 180 23 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 177)
            (pc))) "test1.c":293 -1
     (nil)
 -> 177)
;;  succ:       19
;;              24 (FALLTHRU)

;; basic block 24, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL)
;;  pred:       23 (FALLTHRU)
(note 180 179 181 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 181 180 182 24 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":291 -1
     (nil))
;;  succ:       25 (FALLTHRU,DFS_BACK)

;; basic block 25, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 24, next block 26, flags: (NEW, REACHABLE, RTL)
;;  pred:       17
;;              24 (FALLTHRU,DFS_BACK)
(code_label 182 181 183 25 65 (nil) [1 uses])
(note 183 182 185 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 185 183 186 25 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])
            (const_int 99 [0x63]))) "test1.c":291 -1
     (nil))
(jump_insn 186 185 187 25 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 184)
            (pc))) "test1.c":291 -1
     (nil)
 -> 184)
;;  succ:       18
;;              26 (FALLTHRU)

;; basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 25, next block 27, flags: (NEW, REACHABLE, RTL)
;;  pred:       25 (FALLTHRU)
(note 187 186 188 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 188 187 189 26 (set (reg:DI 149)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [7 fp+0 S8 A64])) "test1.c":308 -1
     (nil))
(insn 189 188 190 26 (set (reg:DI 5 di)
        (reg:DI 149)) "test1.c":308 -1
     (nil))
(call_insn 190 189 191 26 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7fa517dd2700 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) "test1.c":308 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 191 190 192 26 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("omp_get_wtime") [flags 0x41]  <function_decl 0x7fa517a6c700 omp_get_wtime>) [0 omp_get_wtime S1 A8])
            (const_int 0 [0]))) "test1.c":309 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 192 191 193 26 (set (reg:DF 103 [ _17 ])
        (reg:DF 21 xmm0)) "test1.c":309 -1
     (nil))
(insn 193 192 194 26 (set (reg:DF 151)
        (mem/c:DF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [9 time+0 S8 A64])) "test1.c":309 -1
     (nil))
(insn 194 193 195 26 (set (reg:DF 150)
        (plus:DF (reg:DF 151)
            (reg:DF 103 [ _17 ]))) "test1.c":309 -1
     (nil))
(insn 195 194 196 26 (set (mem/c:DF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [9 time+0 S8 A64])
        (reg:DF 150)) "test1.c":309 -1
     (nil))
(insn 196 195 197 26 (set (reg:DF 152)
        (mem/c:DF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [9 time+0 S8 A64])) "test1.c":310 -1
     (nil))
(insn 197 196 198 26 (set (reg:DF 21 xmm0)
        (reg:DF 152)) "test1.c":310 -1
     (nil))
(insn 198 197 199 26 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7fa517afea20 *.LC15>)) "test1.c":310 -1
     (nil))
(insn 199 198 200 26 (set (reg:QI 0 ax)
        (const_int 1 [0x1])) "test1.c":310 -1
     (nil))
(call_insn 200 199 201 26 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fa517cfff00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "test1.c":310 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DF (use (reg:DF 21 xmm0))
                (nil)))))
(insn 201 200 202 26 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])
        (const_int 0 [0])) "test1.c":312 -1
     (nil))
(jump_insn 202 201 203 26 (set (pc)
        (label_ref 214)) "test1.c":312 -1
     (nil)
 -> 214)
;;  succ:       28

(barrier 203 202 216)
;; basic block 27, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 26, next block 28, flags: (NEW, REACHABLE, RTL)
;;  pred:       28
(code_label 216 203 204 27 71 (nil) [1 uses])
(note 204 216 205 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 205 204 206 27 (set (reg:SI 153)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])) "test1.c":314 -1
     (nil))
(insn 206 205 207 27 (set (reg:DI 104 [ _18 ])
        (sign_extend:DI (reg:SI 153))) "test1.c":314 -1
     (nil))
(insn 207 206 208 27 (parallel [
            (set (reg:DI 105 [ _19 ])
                (ashift:DI (reg:DI 104 [ _18 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":314 -1
     (nil))
(insn 208 207 209 27 (set (reg/f:DI 154)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [8 filename_list_array+0 S8 A64])) "test1.c":314 -1
     (nil))
(insn 209 208 210 27 (parallel [
            (set (reg/f:DI 106 [ _20 ])
                (plus:DI (reg:DI 105 [ _19 ])
                    (reg/f:DI 154)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":314 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [8 filename_list_array+0 S8 A64])
            (reg:DI 105 [ _19 ]))
        (nil)))
(insn 210 209 211 27 (set (reg/f:DI 107 [ _21 ])
        (mem/f:DI (reg/f:DI 106 [ _20 ]) [3 *_20+0 S8 A64])) "test1.c":314 -1
     (nil))
(insn 211 210 212 27 (set (reg:DI 5 di)
        (reg/f:DI 107 [ _21 ])) "test1.c":314 -1
     (nil))
(call_insn 212 211 213 27 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fa517d1a800 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "test1.c":314 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 213 212 214 27 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":312 -1
     (nil))
;;  succ:       28 (FALLTHRU,DFS_BACK)

;; basic block 28, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 27, next block 29, flags: (NEW, REACHABLE, RTL)
;;  pred:       26
;;              27 (FALLTHRU,DFS_BACK)
(code_label 214 213 215 28 70 (nil) [1 uses])
(note 215 214 217 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 217 215 218 28 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])
            (const_int 99 [0x63]))) "test1.c":312 -1
     (nil))
(jump_insn 218 217 219 28 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 216)
            (pc))) "test1.c":312 -1
     (nil)
 -> 216)
;;  succ:       27
;;              29 (FALLTHRU)

;; basic block 29, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 28, next block 30, flags: (NEW, REACHABLE, RTL)
;;  pred:       28 (FALLTHRU)
(note 219 218 220 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 220 219 221 29 (set (reg:DI 155)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [8 filename_list_array+0 S8 A64])) "test1.c":316 -1
     (nil))
(insn 221 220 222 29 (set (reg:DI 5 di)
        (reg:DI 155)) "test1.c":316 -1
     (nil))
(call_insn 222 221 223 29 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fa517d1a800 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "test1.c":316 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 223 222 224 29 (set (reg:SI 108 [ _29 ])
        (const_int 0 [0])) "test1.c":318 -1
     (nil))
;;  succ:       30 (FALLTHRU)

;; basic block 30, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 29, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
;;              29 (FALLTHRU)
(code_label 224 223 225 30 58 (nil) [1 uses])
(note 225 224 226 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 226 225 230 30 (set (reg:SI 109 [ <retval> ])
        (reg:SI 108 [ _29 ])) -1
     (nil))
(insn 230 226 231 30 (set (reg/i:SI 0 ax)
        (reg:SI 109 [ <retval> ])) "test1.c":319 -1
     (nil))
(insn 231 230 0 30 (use (reg/i:SI 0 ax)) "test1.c":319 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)

