
;; Function f (f, funcdef_no=0, decl_uid=2247, cgraph_uid=0, symbol_order=0)

f ()
{
  int D.2256;
  int _1;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = 2;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0> [0.00%]:
  return _1;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 3 (_3(D) - 3 )


Partition map 

Partition 0 (_3(D) - 3 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (_3(D) - 3 )

After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_3(D) - 3 )

f ()
{
  int D.2256;
  int _1;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = 2;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0> [0.00%]:
  return _1;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _1 = 2;

(insn 5 4 0 (set (reg:SI 87 [ _1 ])
        (const_int 2 [0x2])) "test1.c":4 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; <L0> [0.00%]:

(code_label 6 5 7 2 (nil) [0 uses])

(note 7 6 0 NOTE_INSN_BASIC_BLOCK)

;; return _1;

(insn 8 7 9 (set (reg:SI 88 [ <retval> ])
        (reg:SI 87 [ _1 ])) "test1.c":4 -1
     (nil))

(jump_insn 9 8 10 (set (pc)
        (label_ref 0)) "test1.c":4 -1
     (nil))

(barrier 10 9 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 9.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 8 2 (set (reg:SI 87 [ _1 ])
        (const_int 2 [0x2])) "test1.c":4 -1
     (nil))
(insn 8 5 12 2 (set (reg:SI 88 [ <retval> ])
        (reg:SI 87 [ _1 ])) "test1.c":4 -1
     (nil))
(insn 12 8 13 2 (set (reg/i:SI 0 ax)
        (reg:SI 88 [ <retval> ])) "test1.c":5 -1
     (nil))
(insn 13 12 0 2 (use (reg/i:SI 0 ax)) "test1.c":5 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function g (g, funcdef_no=1, decl_uid=2249, cgraph_uid=1, symbol_order=1)

g ()
{
  int a;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  a_1 = 2;
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (a_1 - 1 )

After Coalescing:

Partition map 

Partition 0 (a_1 - 1 )

g ()
{
  int a;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  a_1 = 2;
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; a_1 = 2;

(insn 5 4 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 a+0 S4 A32])
        (const_int 2 [0x2])) "test1.c":8 -1
     (nil))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 a+0 S4 A32])
        (const_int 2 [0x2])) "test1.c":8 -1
     (nil))
(insn 8 5 0 2 (const_int 0 [0]) "test1.c":9 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function main (main, funcdef_no=2, decl_uid=2252, cgraph_uid=2, symbol_order=2)

main ()
{
  int b;
  int D.2258;
  int _5;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  b_3 = f ();
  g ();
  _5 = 0;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0> [0.00%]:
  return _5;
;;    succ:       EXIT

}



Partition map 

Partition 3 (b_3 - 3 )
Partition 5 (_5 - 5 )
Partition 6 (_6(D) - 6 )


Partition map 

Partition 0 (_6(D) - 6 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (_6(D) - 6 )

After Coalescing:

Partition map 

Partition 0 (b_3 - 3 )
Partition 1 (_5 - 5 )
Partition 2 (_6(D) - 6 )

main ()
{
  int b;
  int D.2258;
  int _5;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  b_3 = f ();
  g ();
  _5 = 0;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0> [0.00%]:
  return _5;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; b_3 = f ();

(insn 5 4 6 (set (reg:QI 0 ax)
        (const_int 0 [0])) "test1.c":12 -1
     (nil))

(call_insn 6 5 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("f") [flags 0x3]  <function_decl 0x7efe40389f00 f>) [0 f S1 A8])
            (const_int 0 [0]))) "test1.c":12 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (nil)))

(insn 7 6 8 (set (reg:SI 89)
        (reg:SI 0 ax)) "test1.c":12 -1
     (nil))

(insn 8 7 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 b+0 S4 A32])
        (reg:SI 89)) "test1.c":12 -1
     (nil))

;; g ();

(insn 9 8 10 (set (reg:QI 0 ax)
        (const_int 0 [0])) "test1.c":13 -1
     (nil))

(call_insn 10 9 0 (call (mem:QI (symbol_ref:DI ("g") [flags 0x3]  <function_decl 0x7efe4038e100 g>) [0 g S1 A8])
        (const_int 0 [0])) "test1.c":13 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (nil)))

;; _5 = 0;

(insn 11 10 0 (set (reg:SI 87 [ _5 ])
        (const_int 0 [0])) "test1.c":14 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; <L0> [0.00%]:

(code_label 12 11 13 5 (nil) [0 uses])

(note 13 12 0 NOTE_INSN_BASIC_BLOCK)

;; return _5;

(insn 14 13 15 (set (reg:SI 88 [ <retval> ])
        (reg:SI 87 [ _5 ])) -1
     (nil))

(jump_insn 15 14 16 (set (pc)
        (label_ref 0)) -1
     (nil))

(barrier 16 15 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 15.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "test1.c":12 -1
     (nil))
(call_insn 6 5 7 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("f") [flags 0x3]  <function_decl 0x7efe40389f00 f>) [0 f S1 A8])
            (const_int 0 [0]))) "test1.c":12 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (nil)))
(insn 7 6 8 2 (set (reg:SI 89)
        (reg:SI 0 ax)) "test1.c":12 -1
     (nil))
(insn 8 7 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 b+0 S4 A32])
        (reg:SI 89)) "test1.c":12 -1
     (nil))
(insn 9 8 10 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "test1.c":13 -1
     (nil))
(call_insn 10 9 11 2 (call (mem:QI (symbol_ref:DI ("g") [flags 0x3]  <function_decl 0x7efe4038e100 g>) [0 g S1 A8])
        (const_int 0 [0])) "test1.c":13 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (nil)))
(insn 11 10 14 2 (set (reg:SI 87 [ _5 ])
        (const_int 0 [0])) "test1.c":14 -1
     (nil))
(insn 14 11 18 2 (set (reg:SI 88 [ <retval> ])
        (reg:SI 87 [ _5 ])) -1
     (nil))
(insn 18 14 19 2 (set (reg/i:SI 0 ax)
        (reg:SI 88 [ <retval> ])) "test1.c":15 -1
     (nil))
(insn 19 18 0 2 (use (reg/i:SI 0 ax)) "test1.c":15 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)

