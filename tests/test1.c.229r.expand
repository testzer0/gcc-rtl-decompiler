
;; Function f1 (f1, funcdef_no=0, decl_uid=1792, cgraph_uid=0, symbol_order=0)

f1 ()
{
  int D.1806;
  int _1;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = 2;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0> [0.00%]:
  return _1;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 3 (_3(D) - 3 )


Partition map 

Partition 0 (_3(D) - 3 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (_3(D) - 3 )

After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_3(D) - 3 )

f1 ()
{
  int D.1806;
  int _1;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = 2;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0> [0.00%]:
  return _1;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _1 = 2;

(insn 5 4 0 (set (reg:SI 87 [ _1 ])
        (const_int 2 [0x2])) "test1.c":2 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; <L0> [0.00%]:

(code_label 6 5 7 2 (nil) [0 uses])

(note 7 6 0 NOTE_INSN_BASIC_BLOCK)

;; return _1;

(insn 8 7 9 (set (reg:SI 88 [ <retval> ])
        (reg:SI 87 [ _1 ])) "test1.c":2 -1
     (nil))

(jump_insn 9 8 10 (set (pc)
        (label_ref 0)) "test1.c":2 -1
     (nil))

(barrier 10 9 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 9.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 8 2 (set (reg:SI 87 [ _1 ])
        (const_int 2 [0x2])) "test1.c":2 -1
     (nil))
(insn 8 5 12 2 (set (reg:SI 88 [ <retval> ])
        (reg:SI 87 [ _1 ])) "test1.c":2 -1
     (nil))
(insn 12 8 13 2 (set (reg/i:SI 0 ax)
        (reg:SI 88 [ <retval> ])) "test1.c":3 -1
     (nil))
(insn 13 12 0 2 (use (reg/i:SI 0 ax)) "test1.c":3 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function f2 (f2, funcdef_no=1, decl_uid=1796, cgraph_uid=1, symbol_order=1)

f2 (int a, int b)
{
  int c;
  int D.1808;
  int _4;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  c_2 = a_1(D) * 2;
  _4 = b_3(D) + c_2;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0> [0.00%]:
  return _4;
;;    succ:       EXIT

}



Partition map 

Partition 1 (a_1(D) - 1 )
Partition 2 (c_2 - 2 )
Partition 3 (b_3(D) - 3 )
Partition 4 (_4 - 4 )
Partition 6 (_6(D) - 6 )


Partition map 

Partition 0 (a_1(D) - 1 )
Partition 1 (b_3(D) - 3 )
Partition 2 (_6(D) - 6 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (a_1(D) - 1 )
Partition 1 (b_3(D) - 3 )
Partition 2 (_6(D) - 6 )

After Coalescing:

Partition map 

Partition 0 (a_1(D) - 1 )
Partition 1 (c_2 - 2 )
Partition 2 (b_3(D) - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_6(D) - 6 )

f2 (int a, int b)
{
  int c;
  int D.1808;
  int _4;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  c_2 = a_1(D) * 2;
  _4 = b_3(D) + c_2;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0> [0.00%]:
  return _4;
;;    succ:       EXIT

}


Partition 0: size 4 align 4
	c_2

;; Generating RTL for gimple basic block 2

;; c_2 = a_1(D) * 2;

(insn 10 6 11 (set (reg:SI 92)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 a+0 S4 A32])) "test1.c":6 -1
     (nil))

(insn 11 10 12 (parallel [
            (set (reg:SI 91)
                (ashift:SI (reg:SI 92)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":6 -1
     (expr_list:REG_EQUAL (ashift:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 a+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))

(insn 12 11 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 c+0 S4 A32])
        (reg:SI 91)) "test1.c":6 -1
     (nil))

;; _4 = b_3(D) + c_2;

(insn 13 12 14 (set (reg:SI 93)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 b+0 S4 A32])) "test1.c":7 -1
     (nil))

(insn 14 13 15 (set (reg:SI 94)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 c+0 S4 A32])) "test1.c":7 -1
     (nil))

(insn 15 14 0 (parallel [
            (set (reg:SI 87 [ _4 ])
                (plus:SI (reg:SI 93)
                    (reg:SI 94)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":7 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [1 b+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 c+0 S4 A32]))
        (nil)))

;; Generating RTL for gimple basic block 3

;; <L0> [0.00%]:

(code_label 16 15 17 4 (nil) [0 uses])

(note 17 16 0 NOTE_INSN_BASIC_BLOCK)

;; return _4;

(insn 18 17 19 (set (reg:SI 88 [ <retval> ])
        (reg:SI 87 [ _4 ])) "test1.c":7 -1
     (nil))

(jump_insn 19 18 20 (set (pc)
        (label_ref 0)) "test1.c":7 -1
     (nil))

(barrier 20 19 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 19.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 a+0 S4 A32])
        (reg:SI 5 di [ a ])) "test1.c":5 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 b+0 S4 A32])
        (reg:SI 4 si [ b ])) "test1.c":5 -1
     (nil))
(note 4 3 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 4 11 2 (set (reg:SI 92)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 a+0 S4 A32])) "test1.c":6 -1
     (nil))
(insn 11 10 12 2 (parallel [
            (set (reg:SI 91)
                (ashift:SI (reg:SI 92)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":6 -1
     (expr_list:REG_EQUAL (ashift:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 a+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 12 11 13 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 c+0 S4 A32])
        (reg:SI 91)) "test1.c":6 -1
     (nil))
(insn 13 12 14 2 (set (reg:SI 93)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 b+0 S4 A32])) "test1.c":7 -1
     (nil))
(insn 14 13 15 2 (set (reg:SI 94)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 c+0 S4 A32])) "test1.c":7 -1
     (nil))
(insn 15 14 18 2 (parallel [
            (set (reg:SI 87 [ _4 ])
                (plus:SI (reg:SI 93)
                    (reg:SI 94)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":7 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [1 b+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 c+0 S4 A32]))
        (nil)))
(insn 18 15 22 2 (set (reg:SI 88 [ <retval> ])
        (reg:SI 87 [ _4 ])) "test1.c":7 -1
     (nil))
(insn 22 18 23 2 (set (reg/i:SI 0 ax)
        (reg:SI 88 [ <retval> ])) "test1.c":8 -1
     (nil))
(insn 23 22 0 2 (use (reg/i:SI 0 ax)) "test1.c":8 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function f3 (f3, funcdef_no=2, decl_uid=1801, cgraph_uid=2, symbol_order=2)

f3 (char a, int b)
{
  char D.1810;
  unsigned char _1;
  unsigned char a.0_2;
  unsigned char _3;
  char _7;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = (unsigned char) b_4(D);
  a.0_2 = (unsigned char) a_5(D);
  _3 = _1 + a.0_2;
  a_6 = (char) _3;
  _7 = a_6;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0> [0.00%]:
  return _7;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (a.0_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (b_4(D) - 4 )
Partition 5 (a_5(D) - 5 )
Partition 6 (a_6 - 6 )
Partition 7 (_7 - 7 )
Partition 9 (_9(D) - 9 )


Partition map 

Partition 0 (b_4(D) - 4 )
Partition 1 (a_5(D) - 5 )
Partition 2 (a_6 - 6 )
Partition 3 (_9(D) - 9 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483647, 0) a_5(D) <-> a_6

Partition map 

Partition 0 (b_4(D) - 4 )
Partition 1 (a_5(D) - 5 )
Partition 2 (a_6 - 6 )
Partition 3 (_9(D) - 9 )

Coalesce list: (5)a_5(D) & (6)a_6 [map: 1, 2] : Success -> 1
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (a.0_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (b_4(D) - 4 )
Partition 4 (a_5(D) - 5 6 )
Partition 5 (_7 - 7 )
Partition 6 (_9(D) - 9 )

f3 (char a, int b)
{
  char D.1810;
  unsigned char _1;
  unsigned char a.0_2;
  unsigned char _3;
  char _7;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = (unsigned char) b_4(D);
  a.0_2 = (unsigned char) a_5(D);
  _3 = _1 + a.0_2;
  a_6 = (char) _3;
  _7 = a_6;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0> [0.00%]:
  return _7;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _1 = (unsigned char) b_4(D);

(insn 9 8 10 (set (reg:SI 94)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 b+0 S4 A32])) "test1.c":11 -1
     (nil))

(insn 10 9 0 (set (reg:QI 87 [ _1 ])
        (subreg:QI (reg:SI 94) 0)) "test1.c":11 -1
     (nil))

;; a.0_2 = (unsigned char) a_5(D);

(insn 11 10 0 (set (reg:QI 88 [ a.0_2 ])
        (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 a+0 S1 A32])) "test1.c":11 -1
     (nil))

;; _3 = _1 + a.0_2;

(insn 12 11 0 (parallel [
            (set (reg:QI 89 [ _3 ])
                (plus:QI (reg:QI 87 [ _1 ])
                    (reg:QI 88 [ a.0_2 ])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":11 -1
     (nil))

;; a_6 = (char) _3;

(insn 13 12 0 (set (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 a+0 S1 A32])
        (reg:QI 89 [ _3 ])) "test1.c":11 -1
     (nil))

;; _7 = a_6;

(insn 14 13 0 (set (reg:QI 90 [ _7 ])
        (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 a+0 S1 A32])) "test1.c":12 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; <L0> [0.00%]:

(code_label 15 14 16 6 (nil) [0 uses])

(note 16 15 0 NOTE_INSN_BASIC_BLOCK)

;; return _7;

(insn 17 16 18 (set (reg:QI 91 [ <retval> ])
        (reg:QI 90 [ _7 ])) "test1.c":12 -1
     (nil))

(jump_insn 18 17 19 (set (pc)
        (label_ref 0)) "test1.c":12 -1
     (nil))

(barrier 19 18 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 18.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 5 2 (set (reg:SI 92)
        (reg:SI 5 di [ a ])) "test1.c":10 -1
     (nil))
(insn 5 2 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 b+0 S4 A32])
        (reg:SI 4 si [ b ])) "test1.c":10 -1
     (nil))
(insn 3 5 4 2 (set (reg:QI 93)
        (subreg:QI (reg:SI 92) 0)) "test1.c":10 -1
     (nil))
(insn 4 3 6 2 (set (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 a+0 S1 A32])
        (reg:QI 93)) "test1.c":10 -1
     (nil))
(note 6 4 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg:SI 94)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 b+0 S4 A32])) "test1.c":11 -1
     (nil))
(insn 10 9 11 2 (set (reg:QI 87 [ _1 ])
        (subreg:QI (reg:SI 94) 0)) "test1.c":11 -1
     (nil))
(insn 11 10 12 2 (set (reg:QI 88 [ a.0_2 ])
        (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 a+0 S1 A32])) "test1.c":11 -1
     (nil))
(insn 12 11 13 2 (parallel [
            (set (reg:QI 89 [ _3 ])
                (plus:QI (reg:QI 87 [ _1 ])
                    (reg:QI 88 [ a.0_2 ])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":11 -1
     (nil))
(insn 13 12 14 2 (set (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 a+0 S1 A32])
        (reg:QI 89 [ _3 ])) "test1.c":11 -1
     (nil))
(insn 14 13 17 2 (set (reg:QI 90 [ _7 ])
        (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 a+0 S1 A32])) "test1.c":12 -1
     (nil))
(insn 17 14 21 2 (set (reg:QI 91 [ <retval> ])
        (reg:QI 90 [ _7 ])) "test1.c":12 -1
     (nil))
(insn 21 17 22 2 (set (reg/i:QI 0 ax)
        (reg:QI 91 [ <retval> ])) "test1.c":13 -1
     (nil))
(insn 22 21 0 2 (use (reg/i:QI 0 ax)) "test1.c":13 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function main (main, funcdef_no=3, decl_uid=1803, cgraph_uid=3, symbol_order=3)

main ()
{
  int D.1812;
  int _1;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = 0;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0> [0.00%]:
  return _1;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 3 (_3(D) - 3 )


Partition map 

Partition 0 (_3(D) - 3 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (_3(D) - 3 )

After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_3(D) - 3 )

main ()
{
  int D.1812;
  int _1;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = 0;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0> [0.00%]:
  return _1;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _1 = 0;

(insn 5 4 0 (set (reg:SI 87 [ _1 ])
        (const_int 0 [0])) "test1.c":16 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; <L0> [0.00%]:

(code_label 6 5 7 8 (nil) [0 uses])

(note 7 6 0 NOTE_INSN_BASIC_BLOCK)

;; return _1;

(insn 8 7 9 (set (reg:SI 88 [ <retval> ])
        (reg:SI 87 [ _1 ])) -1
     (nil))

(jump_insn 9 8 10 (set (pc)
        (label_ref 0)) -1
     (nil))

(barrier 10 9 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 9.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 8 2 (set (reg:SI 87 [ _1 ])
        (const_int 0 [0])) "test1.c":16 -1
     (nil))
(insn 8 5 12 2 (set (reg:SI 88 [ <retval> ])
        (reg:SI 87 [ _1 ])) -1
     (nil))
(insn 12 8 13 2 (set (reg/i:SI 0 ax)
        (reg:SI 88 [ <retval> ])) "test1.c":17 -1
     (nil))
(insn 13 12 0 2 (use (reg/i:SI 0 ax)) "test1.c":17 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)

