
;; Function max (max, funcdef_no=5, decl_uid=2769, cgraph_uid=5, symbol_order=5)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (2) rm  (3) 0 {*movsicc_noc}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 17: point = 0, n_alt = -1
   Insn 16: point = 0, n_alt = -2
   Insn 12: point = 1, n_alt = -2
   Insn 9: point = 3, n_alt = 0
   Insn 8: point = 5, n_alt = 0
   Insn 7: point = 5, n_alt = 0
   Insn 3: point = 6, n_alt = 1
   Insn 2: point = 6, n_alt = 1
 r87: [2..3]
 r88: [0..1]
 r89: [4..5]
Compressing live ranges: from 6 to 6 - 100%
Ranges after the compression:
 r87: [2..3]
 r88: [0..1]
 r89: [4..5]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 9
changing reg in insn 12
changing reg in insn 12
changing reg in insn 16
changing reg in insn 7
changing reg in insn 9
changing reg in insn 8
deleting insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns


max

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 4 [si] 5 [di] 6 [bp] 17 [flags]
;;  ref usage 	r0={4d,5u} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,7u} r7={1d,2u} r17={1d,1u} r20={1d,1u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 40{22d,18u,0e} in 7{7 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 17 [flags] 87 88 89
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 a+0 S4 A32])
        (reg:SI 5 di [ a ])) "test1.c":13 82 {*movsi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 b+0 S4 A32])
        (reg:SI 4 si [ b ])) "test1.c":13 82 {*movsi_internal}
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:SI 0 ax [89])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 a+0 S4 A32])) "test1.c":13 82 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -8 [0xfffffffffffffff8])) [1 b+0 S4 A32])
            (reg:SI 0 ax [89]))) "test1.c":13 7 {*cmpsi_1}
     (nil))
(insn 9 8 16 2 (set (reg:SI 0 ax [orig:87 _3 ] [87])
        (if_then_else:SI (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -8 [0xfffffffffffffff8])) [1 b+0 S4 A32])
            (reg:SI 0 ax [89]))) "test1.c":13 976 {*movsicc_noc}
     (nil))
(insn 16 9 17 2 (set (reg/i:SI 0 ax)
        (reg:SI 0 ax [orig:88 <retval> ] [88])) "test1.c":13 82 {*movsi_internal}
     (nil))
(insn 17 16 19 2 (use (reg/i:SI 0 ax)) "test1.c":13 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 19 17 0 NOTE_INSN_DELETED)

;; Function newNode (newNode, funcdef_no=6, decl_uid=2772, cgraph_uid=6, symbol_order=6)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=32, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2:  (0) m  (1) re {*movsi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 6:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 9:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) ?mr {*cmpdi_ccno_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 13:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 19:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 21:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 22:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 23:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 24:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 25:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 26:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 27:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 30:  (0) r  (1) rem {*movdi_internal}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5

********** Pseudo live ranges #1: **********

  BB 5
   Insn 38: point = 0, n_alt = -1
   Insn 37: point = 0, n_alt = -2
   Insn 33: point = 1, n_alt = -2
   Insn 30: point = 3, n_alt = 3
  BB 3
   Insn 40: point = 4, n_alt = -1
   Insn 14: point = 4, n_alt = 0
   Insn 13: point = 4, n_alt = 4
  BB 4
   Insn 27: point = 4, n_alt = 1
   Insn 26: point = 5, n_alt = 3
   Insn 25: point = 6, n_alt = 5
   Insn 24: point = 7, n_alt = 3
   Insn 23: point = 8, n_alt = 5
   Insn 22: point = 9, n_alt = 3
   Insn 21: point = 10, n_alt = 1
   Insn 20: point = 11, n_alt = 0
   Insn 19: point = 12, n_alt = 3
  BB 2
   Insn 11: point = 13, n_alt = -1
   Insn 10: point = 13, n_alt = 1
   Insn 9: point = 13, n_alt = 5
   Insn 8: point = 14, n_alt = -2
   Insn 7: point = 15, n_alt = 0
   Insn 6: point = 15, n_alt = 2
   Insn 2: point = 15, n_alt = 1
 r87: [2..3]
 r88: [0..1]
 r89: [13..14]
 r90: [10..12]
 r91: [10..11]
 r92: [8..9]
 r93: [6..7]
 r94: [4..5]
Compressing live ranges: from 15 to 14 - 93%
Ranges after the compression:
 r87: [2..3]
 r88: [0..1]
 r89: [12..13]
 r90: [10..11]
 r91: [10..11]
 r92: [8..9]
 r93: [6..7]
 r94: [4..5]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=32, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 30
changing reg in insn 33
changing reg in insn 33
changing reg in insn 37
changing reg in insn 8
changing reg in insn 9
changing reg in insn 19
changing reg in insn 21
changing reg in insn 20
changing reg in insn 21
changing reg in insn 22
changing reg in insn 23
changing reg in insn 24
changing reg in insn 25
changing reg in insn 26
changing reg in insn 27
deleting insn with uid = 8.
deleting insn with uid = 33.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 7.
verify found no changes in insn with uid = 14.


newNode

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={9d,8u} r1={4d,1u} r2={3d} r4={3d} r5={5d,3u} r6={1d,14u} r7={1d,7u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={3d,1u} r18={2d} r19={2d} r20={1d,1u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} 
;;    total ref usage 207{172d,35u,0e} in 21{19 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 89
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 key+0 S4 A32])
        (reg:SI 5 di [ key ])) "test1.c":16 82 {*movsi_internal}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 5 di)
        (const_int 32 [0x20])) "test1.c":17 81 {*movdi_internal}
     (nil))
(call_insn 7 6 9 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7fddd76d1300 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) "test1.c":17 676 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 7 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [2 node+0 S8 A64])
        (reg/f:DI 0 ax [89])) "test1.c":17 81 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                    (const_int -8 [0xfffffffffffffff8])) [2 node+0 S8 A64])
            (const_int 0 [0]))) "test1.c":19 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) "test1.c":19 627 {*jcc_1}
     (nil)
 -> 17)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fddd7452000 *.LC0>)) "test1.c":20 81 {*movdi_internal}
     (nil))
(call_insn 14 13 40 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fddd76af600 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "test1.c":20 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 40 14 41 3 (set (pc)
        (label_ref 28)) 659 {jump}
     (nil)
 -> 28)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 41 40 17)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 90 91 92 93 94
(code_label 17 41 18 4 4 (nil) [1 uses])
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (set (reg/f:DI 0 ax [90])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [2 node+0 S8 A64])) "test1.c":23 81 {*movdi_internal}
     (nil))
(insn 20 19 21 4 (set (reg:SI 1 dx [91])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 key+0 S4 A32])) "test1.c":23 82 {*movsi_internal}
     (nil))
(insn 21 20 22 4 (set (mem:SI (reg/f:DI 0 ax [90]) [1 node_4->key+0 S4 A64])
        (reg:SI 1 dx [91])) "test1.c":23 82 {*movsi_internal}
     (nil))
(insn 22 21 23 4 (set (reg/f:DI 0 ax [92])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [2 node+0 S8 A64])) "test1.c":24 81 {*movdi_internal}
     (nil))
(insn 23 22 24 4 (set (mem/f:DI (plus:DI (reg/f:DI 0 ax [92])
                (const_int 8 [0x8])) [2 node_4->left+0 S8 A64])
        (const_int 0 [0])) "test1.c":24 81 {*movdi_internal}
     (nil))
(insn 24 23 25 4 (set (reg/f:DI 0 ax [93])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [2 node+0 S8 A64])) "test1.c":25 81 {*movdi_internal}
     (nil))
(insn 25 24 26 4 (set (mem/f:DI (plus:DI (reg/f:DI 0 ax [93])
                (const_int 16 [0x10])) [2 node_4->right+0 S8 A64])
        (const_int 0 [0])) "test1.c":25 81 {*movdi_internal}
     (nil))
(insn 26 25 27 4 (set (reg/f:DI 0 ax [94])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [2 node+0 S8 A64])) "test1.c":26 81 {*movdi_internal}
     (nil))
(insn 27 26 28 4 (set (mem:SI (plus:DI (reg/f:DI 0 ax [94])
                (const_int 24 [0x18])) [1 node_4->height+0 S4 A64])
        (const_int 0 [0])) "test1.c":26 82 {*movsi_internal}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 87 88
(code_label 28 27 29 5 5 (nil) [1 uses])
(note 29 28 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 37 5 (set (reg/f:DI 0 ax [orig:87 _11 ] [87])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [2 node+0 S8 A64])) "test1.c":29 81 {*movdi_internal}
     (nil))
(insn 37 30 38 5 (set (reg/i:DI 0 ax)
        (reg/f:DI 0 ax [orig:88 <retval> ] [88])) "test1.c":30 81 {*movdi_internal}
     (nil))
(insn 38 37 42 5 (use (reg/i:DI 0 ax)) "test1.c":30 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 42 38 0 NOTE_INSN_DELETED)

;; Function nodeHeight (nodeHeight, funcdef_no=7, decl_uid=2776, cgraph_uid=7, symbol_order=7)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) ?mr {*cmpdi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 14:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5

********** Pseudo live ranges #1: **********

  BB 5
   Insn 23: point = 0, n_alt = -1
   Insn 22: point = 0, n_alt = -2
   Insn 18: point = 1, n_alt = -2
  BB 3
   Insn 25: point = 4, n_alt = -1
   Insn 9: point = 4, n_alt = 0
  BB 4
   Insn 15: point = 5, n_alt = 0
   Insn 14: point = 7, n_alt = 3
  BB 2
   Insn 7: point = 8, n_alt = -1
   Insn 6: point = 8, n_alt = 1
   Insn 2: point = 8, n_alt = 5
 r87: [2..5]
 r88: [0..1]
 r89: [6..7]
Compressing live ranges: from 8 to 6 - 75%
Ranges after the compression:
 r87: [2..3]
 r88: [0..1]
 r89: [4..5]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 15
changing reg in insn 9
changing reg in insn 18
changing reg in insn 18
changing reg in insn 22
changing reg in insn 14
changing reg in insn 15
deleting insn with uid = 18.
starting the processing of deferred insns
ending the processing of deferred insns


nodeHeight

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 5 [di] 6 [bp] 17 [flags]
;;  ref usage 	r0={5d,4u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,8u} r7={1d,5u} r17={1d,1u} r20={1d,1u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 43{23d,20u,0e} in 9{9 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [2 node+0 S8 A64])
        (reg:DI 5 di [ node ])) "test1.c":33 81 {*movdi_internal}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                    (const_int -8 [0xfffffffffffffff8])) [2 node+0 S8 A64])
            (const_int 0 [0]))) "test1.c":34 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 7 6 8 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 12)
            (pc))) "test1.c":34 627 {*jcc_1}
     (nil)
 -> 12)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 8 7 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 25 3 (set (reg:SI 0 ax [orig:87 _1 ] [87])
        (const_int -1 [0xffffffffffffffff])) "test1.c":35 82 {*movsi_internal}
     (nil))
(jump_insn 25 9 26 3 (set (pc)
        (label_ref 16)) "test1.c":35 659 {jump}
     (nil)
 -> 16)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 26 25 12)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87 89
(code_label 12 26 13 4 8 (nil) [1 uses])
(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 4 (set (reg/f:DI 0 ax [89])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [2 node+0 S8 A64])) "test1.c":37 81 {*movdi_internal}
     (nil))
(insn 15 14 16 4 (set (reg:SI 0 ax [orig:87 _1 ] [87])
        (mem:SI (plus:DI (reg/f:DI 0 ax [89])
                (const_int 24 [0x18])) [1 node_2(D)->height+0 S4 A64])) "test1.c":37 82 {*movsi_internal}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax] 88
(code_label 16 15 17 5 9 (nil) [1 uses])
(note 17 16 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 17 23 5 (set (reg/i:SI 0 ax)
        (reg:SI 0 ax [orig:88 <retval> ] [88])) "test1.c":38 82 {*movsi_internal}
     (nil))
(insn 23 22 27 5 (use (reg/i:SI 0 ax)) "test1.c":38 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 27 23 0 NOTE_INSN_DELETED)

;; Function heightDiff (heightDiff, funcdef_no=8, decl_uid=2779, cgraph_uid=8, symbol_order=8)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=8, prev_offset=0)
Can eliminate 20 to 6 (offset=-8, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) ?mr {*cmpdi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 14:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 15:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 19:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 20:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (1) rBwBz {*call_value}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 24:  (0) =rm  (1) 0  (2) re {*subsi_1}
      Creating newreg=96 from oldreg=88, assigning class GENERAL_REGS to r96
   24: {r96:SI=r96:SI-r90:SI;clobber flags:CC;}
      REG_DEAD r90:SI
      REG_DEAD r88:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
   37: r96:SI=r88:SI
    Inserting insn reload after:
   38: r91:SI=r96:SI

	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5

********** Pseudo live ranges #1: **********

  BB 5
   Insn 32: point = 0, n_alt = -1
   Insn 31: point = 0, n_alt = -2
   Insn 27: point = 1, n_alt = -2
  BB 3
   Insn 34: point = 4, n_alt = -1
   Insn 9: point = 4, n_alt = 0
  BB 4
   Insn 38: point = 5, n_alt = -2
	Hard reg 0 is preferable by r96 with profit 1
   Insn 24: point = 7, n_alt = 0
   Insn 37: point = 8, n_alt = -2
	Hard reg 0 is preferable by r96 with profit 1
	Hard reg 3 is preferable by r96 with profit 1
   Insn 23: point = 10, n_alt = -2
   Insn 22: point = 11, n_alt = 0
   Insn 21: point = 11, n_alt = -2
   Insn 20: point = 12, n_alt = 3
   Insn 19: point = 14, n_alt = 3
   Insn 18: point = 15, n_alt = -2
   Insn 17: point = 16, n_alt = 0
   Insn 16: point = 16, n_alt = -2
   Insn 15: point = 17, n_alt = 3
   Insn 14: point = 19, n_alt = 3
  BB 2
   Insn 7: point = 20, n_alt = -1
   Insn 6: point = 20, n_alt = 1
   Insn 2: point = 20, n_alt = 5
 r87: [16..17]
 r88: [9..15]
 r89: [11..12]
 r90: [7..10]
 r91: [2..5]
 r92: [0..1]
 r93: [18..19]
 r94: [13..14]
 r96: [6..8]
Compressing live ranges: from 20 to 16 - 80%
Ranges after the compression:
 r87: [12..13]
 r88: [6..11]
 r89: [8..9]
 r90: [4..7]
 r91: [2..3]
 r92: [0..1]
 r93: [14..15]
 r94: [10..11]
 r96: [4..5]

********** Assignment #1: **********

	 Assigning to 96 (cl=GENERAL_REGS, orig=88, freq=3, tfirst=96, tfreq=3)...
	   Assign 3 to reload r96 (freq=3)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=8, prev_offset=0)
Can eliminate 20 to 6 (offset=-8, prev_offset=-8)
changing reg in insn 15
changing reg in insn 16
changing reg in insn 18
changing reg in insn 20
changing reg in insn 21
changing reg in insn 23
changing reg in insn 24
changing reg in insn 9
changing reg in insn 27
changing reg in insn 27
changing reg in insn 31
changing reg in insn 14
changing reg in insn 15
changing reg in insn 19
changing reg in insn 20
deleting insn with uid = 23.
deleting insn with uid = 37.
deleting insn with uid = 27.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 17.
verify found no changes in insn with uid = 22.


heightDiff

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={10d,9u} r1={3d} r2={3d} r3={2d,2u} r4={3d} r5={5d,3u} r6={1d,9u} r7={1d,7u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={4d,1u} r18={2d} r19={2d} r20={1d,1u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} 
;;    total ref usage 207{175d,32u,0e} in 18{16 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [2 node+0 S8 A64])
        (reg:DI 5 di [ node ])) "test1.c":41 81 {*movdi_internal}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                    (const_int -16 [0xfffffffffffffff0])) [2 node+0 S8 A64])
            (const_int 0 [0]))) "test1.c":42 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 7 6 8 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 12)
            (pc))) "test1.c":42 627 {*jcc_1}
     (nil)
 -> 12)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 91
(note 8 7 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 34 3 (set (reg:SI 0 ax [orig:91 _5 ] [91])
        (const_int 0 [0])) "test1.c":43 82 {*movsi_internal}
     (nil))
(jump_insn 34 9 35 3 (set (pc)
        (label_ref 25)) "test1.c":43 659 {jump}
     (nil)
 -> 25)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91

(barrier 35 34 12)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 93 94
(code_label 12 35 13 4 11 (nil) [1 uses])
(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 4 (set (reg/f:DI 0 ax [93])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [2 node+0 S8 A64])) "test1.c":45 81 {*movdi_internal}
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 0 ax [orig:87 _1 ] [87])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [93])
                (const_int 8 [0x8])) [2 node_7(D)->left+0 S8 A64])) "test1.c":45 81 {*movdi_internal}
     (nil))
(insn 16 15 17 4 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:87 _1 ] [87])) "test1.c":45 81 {*movdi_internal}
     (nil))
(call_insn 17 16 18 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("nodeHeight") [flags 0x3]  <function_decl 0x7fddd77eab00 nodeHeight>) [0 nodeHeight S1 A8])
            (const_int 0 [0]))) "test1.c":45 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 18 17 19 4 (set (reg:SI 3 bx [orig:88 _2 ] [88])
        (reg:SI 0 ax)) "test1.c":45 82 {*movsi_internal}
     (nil))
(insn 19 18 20 4 (set (reg/f:DI 0 ax [94])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [2 node+0 S8 A64])) "test1.c":45 81 {*movdi_internal}
     (nil))
(insn 20 19 21 4 (set (reg/f:DI 0 ax [orig:89 _3 ] [89])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [94])
                (const_int 16 [0x10])) [2 node_7(D)->right+0 S8 A64])) "test1.c":45 81 {*movdi_internal}
     (nil))
(insn 21 20 22 4 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:89 _3 ] [89])) "test1.c":45 81 {*movdi_internal}
     (nil))
(call_insn 22 21 24 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("nodeHeight") [flags 0x3]  <function_decl 0x7fddd77eab00 nodeHeight>) [0 nodeHeight S1 A8])
            (const_int 0 [0]))) "test1.c":45 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 24 22 38 4 (parallel [
            (set (reg:SI 3 bx [orig:88 _2 ] [88])
                (minus:SI (reg:SI 3 bx [orig:88 _2 ] [88])
                    (reg:SI 0 ax [orig:90 _4 ] [90])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":45 273 {*subsi_1}
     (nil))
(insn 38 24 25 4 (set (reg:SI 0 ax [orig:91 _5 ] [91])
        (reg:SI 3 bx [orig:88 _2 ] [88])) "test1.c":45 82 {*movsi_internal}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  def 	 0 [ax] 92
(code_label 25 38 26 5 12 (nil) [1 uses])
(note 26 25 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 31 26 32 5 (set (reg/i:SI 0 ax)
        (reg:SI 0 ax [orig:92 <retval> ] [92])) "test1.c":46 82 {*movsi_internal}
     (nil))
(insn 32 31 36 5 (use (reg/i:SI 0 ax)) "test1.c":46 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 36 32 0 NOTE_INSN_DELETED)

;; Function minNode (minNode, funcdef_no=9, decl_uid=2782, cgraph_uid=9, symbol_order=9)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 6:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 7:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 11:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 12:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 13:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 16:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 17:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) r {*cmpdi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 22:  (0) r  (1) rem {*movdi_internal}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5

********** Pseudo live ranges #1: **********

  BB 5
   Insn 30: point = 0, n_alt = -1
   Insn 29: point = 0, n_alt = -2
   Insn 25: point = 1, n_alt = -2
   Insn 22: point = 3, n_alt = 3
  BB 4
   Insn 20: point = 4, n_alt = -1
   Insn 19: point = 4, n_alt = 0
   Insn 17: point = 5, n_alt = 3
   Insn 16: point = 7, n_alt = 3
  BB 2
   Insn 32: point = 8, n_alt = -1
   Insn 7: point = 8, n_alt = 5
   Insn 6: point = 9, n_alt = 3
   Insn 2: point = 10, n_alt = 5
  BB 3
   Insn 13: point = 10, n_alt = 5
   Insn 12: point = 11, n_alt = 3
   Insn 11: point = 13, n_alt = 3
 r87: [4..5]
 r88: [2..3]
 r89: [0..1]
 r90: [8..9]
 r91: [12..13]
 r92: [10..11]
 r93: [6..7]
Compressing live ranges: from 14 to 14 - 100%
Ranges after the compression:
 r87: [4..5]
 r88: [2..3]
 r89: [0..1]
 r90: [8..9]
 r91: [12..13]
 r92: [10..11]
 r93: [6..7]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 17
changing reg in insn 19
changing reg in insn 22
changing reg in insn 25
changing reg in insn 25
changing reg in insn 29
changing reg in insn 6
changing reg in insn 7
changing reg in insn 11
changing reg in insn 12
changing reg in insn 12
changing reg in insn 13
changing reg in insn 16
changing reg in insn 17
deleting insn with uid = 25.
starting the processing of deferred insns
ending the processing of deferred insns


minNode

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 5 [di] 6 [bp] 17 [flags]
;;  ref usage 	r0={8d,8u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,12u} r7={1d,5u} r17={1d,1u} r20={1d,1u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 54{26d,28u,0e} in 14{14 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 90
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 node+0 S8 A64])
        (reg:DI 5 di [ node ])) "test1.c":50 81 {*movdi_internal}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 0 ax [90])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 node+0 S8 A64])) "test1.c":51 81 {*movdi_internal}
     (nil))
(insn 7 6 32 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [2 temp+0 S8 A64])
        (reg/f:DI 0 ax [90])) "test1.c":51 81 {*movdi_internal}
     (nil))
(jump_insn 32 7 33 2 (set (pc)
        (label_ref 14)) "test1.c":53 659 {jump}
     (nil)
 -> 14)
;;  succ:       4 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 33 32 18)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       4
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 91 92
(code_label 18 33 10 3 15 (nil) [1 uses])
(note 10 18 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg/f:DI 0 ax [91])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [2 temp+0 S8 A64])) "test1.c":53 81 {*movdi_internal}
     (nil))
(insn 12 11 13 3 (set (reg/f:DI 0 ax [92])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [91])
                (const_int 8 [0x8])) [2 temp_2->left+0 S8 A64])) "test1.c":53 81 {*movdi_internal}
     (nil))
(insn 13 12 14 3 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [2 temp+0 S8 A64])
        (reg/f:DI 0 ax [92])) "test1.c":53 81 {*movdi_internal}
     (nil))
;;  succ:       4 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 93
(code_label 14 13 15 4 14 (nil) [1 uses])
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 4 (set (reg/f:DI 0 ax [93])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [2 temp+0 S8 A64])) "test1.c":53 81 {*movdi_internal}
     (nil))
(insn 17 16 19 4 (set (reg/f:DI 0 ax [orig:87 _1 ] [87])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [93])
                (const_int 8 [0x8])) [2 temp_2->left+0 S8 A64])) "test1.c":53 81 {*movdi_internal}
     (nil))
(insn 19 17 20 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:87 _1 ] [87])
            (const_int 0 [0]))) "test1.c":53 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 20 19 21 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 18)
            (pc))) "test1.c":53 627 {*jcc_1}
     (nil)
 -> 18)
;;  succ:       3
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 88 89
(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 29 5 (set (reg/f:DI 0 ax [orig:88 _6 ] [88])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [2 temp+0 S8 A64])) "test1.c":55 81 {*movdi_internal}
     (nil))
(insn 29 22 30 5 (set (reg/i:DI 0 ax)
        (reg/f:DI 0 ax [orig:89 <retval> ] [89])) "test1.c":56 81 {*movdi_internal}
     (nil))
(insn 30 29 34 5 (use (reg/i:DI 0 ax)) "test1.c":56 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 34 30 0 NOTE_INSN_DELETED)

;; Function printAVL (printAVL, funcdef_no=10, decl_uid=2790, cgraph_uid=10, symbol_order=10)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=32, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 7:  (0) ?mr {*cmpdi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 11:  (0) r  (1) r  (2) le {*addsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 12:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 13:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 17:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 19:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 25:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 30:  (0) r  (1) rm {*cmpsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 33:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 36:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 37:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 40:  (0) r  (1) r  (2) le {*addsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 41:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 42:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (0) rBwBz {*call}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5
EBB 6
EBB 8
EBB 7

********** Pseudo live ranges #1: **********

  BB 7
  BB 8
   Insn 56: point = 0, n_alt = -1
  BB 6
   Insn 45: point = 0, n_alt = 0
   Insn 44: point = 0, n_alt = -2
   Insn 43: point = 1, n_alt = -2
   Insn 42: point = 2, n_alt = 3
   Insn 41: point = 4, n_alt = 3
   Insn 40: point = 5, n_alt = 3
   Insn 39: point = 7, n_alt = 0
   Insn 38: point = 8, n_alt = 0
   Insn 37: point = 8, n_alt = 1
   Insn 36: point = 8, n_alt = 4
   Insn 35: point = 8, n_alt = -2
   Insn 34: point = 9, n_alt = 0
   Insn 33: point = 11, n_alt = 3
  BB 5
   Insn 31: point = 12, n_alt = -1
   Insn 30: point = 12, n_alt = 1
   Insn 29: point = 13, n_alt = 0
  BB 3
   Insn 50: point = 14, n_alt = -1
   Insn 19: point = 14, n_alt = 1
   Insn 18: point = 14, n_alt = 0
   Insn 17: point = 14, n_alt = 4
   Insn 16: point = 14, n_alt = 0
   Insn 15: point = 14, n_alt = -2
   Insn 14: point = 15, n_alt = -2
   Insn 13: point = 16, n_alt = 3
   Insn 12: point = 18, n_alt = 3
   Insn 11: point = 19, n_alt = 3
   Insn 10: point = 21, n_alt = 0
  BB 4
   Insn 25: point = 22, n_alt = 1
   Insn 24: point = 22, n_alt = 0
   Insn 23: point = 22, n_alt = 0
  BB 2
   Insn 8: point = 22, n_alt = -1
   Insn 7: point = 22, n_alt = 1
   Insn 3: point = 22, n_alt = 1
   Insn 2: point = 22, n_alt = 5
 r87: [15..19]
 r88: [14..16]
 r89: [8..9]
 r90: [1..5]
 r91: [0..2]
 r92: [20..21]
 r93: [17..18]
 r94: [12..13]
 r95: [10..11]
 r96: [6..7]
 r97: [3..4]
Compressing live ranges: from 22 to 18 - 81%
Ranges after the compression:
 r87: [12..15]
 r88: [12..13]
 r89: [6..7]
 r90: [0..3]
 r91: [0..1]
 r92: [16..17]
 r93: [14..15]
 r94: [10..11]
 r95: [8..9]
 r96: [4..5]
 r97: [2..3]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=32, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 11
changing reg in insn 14
changing reg in insn 13
changing reg in insn 15
changing reg in insn 34
changing reg in insn 35
changing reg in insn 40
changing reg in insn 43
changing reg in insn 42
changing reg in insn 44
changing reg in insn 10
changing reg in insn 11
changing reg in insn 12
changing reg in insn 13
changing reg in insn 29
changing reg in insn 30
changing reg in insn 33
changing reg in insn 34
changing reg in insn 39
changing reg in insn 40
changing reg in insn 41
changing reg in insn 42
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 16.
verify found no changes in insn with uid = 18.
verify found no changes in insn with uid = 24.
verify found no changes in insn with uid = 38.
verify found no changes in insn with uid = 45.


printAVL

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={16d,10u} r1={8d,2u} r2={6d} r4={9d,4u} r5={11d,6u} r6={1d,21u} r7={1d,13u} r8={5d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r17={10d,2u} r18={5d} r19={5d} r20={1d,1u,2e} r21={6d} r22={6d} r23={6d} r24={6d} r25={6d} r26={6d} r27={6d} r28={6d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={6d} r38={6d} r39={5d} r40={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r77={5d} r78={5d} r79={5d} r80={5d} 
;;    total ref usage 464{403d,59u,2e} in 35{30 regular + 5 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 node+0 S8 A64])
        (reg:DI 5 di [ node ])) "test1.c":59 81 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 level+0 S4 A32])
        (reg:SI 4 si [ level ])) "test1.c":59 82 {*movsi_internal}
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                    (const_int -24 [0xffffffffffffffe8])) [2 node+0 S8 A64])
            (const_int 0 [0]))) "test1.c":61 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 55)
            (pc))) "test1.c":61 627 {*jcc_1}
     (nil)
 -> 55)
;;  succ:       3 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 92 93
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg:SI 0 ax [92])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 level+0 S4 A32])) "test1.c":63 82 {*movsi_internal}
     (nil))
(insn 11 10 12 3 (parallel [
            (set (reg:SI 1 dx [orig:87 _1 ] [87])
                (plus:SI (reg:SI 0 ax [92])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":63 217 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -28 [0xffffffffffffffe4])) [1 level+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 12 11 13 3 (set (reg/f:DI 0 ax [93])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 node+0 S8 A64])) "test1.c":63 81 {*movdi_internal}
     (nil))
(insn 13 12 14 3 (set (reg/f:DI 0 ax [orig:88 _2 ] [88])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [93])
                (const_int 16 [0x10])) [2 node_9(D)->right+0 S8 A64])) "test1.c":63 81 {*movdi_internal}
     (nil))
(insn 14 13 15 3 (set (reg:SI 4 si)
        (reg:SI 1 dx [orig:87 _1 ] [87])) "test1.c":63 82 {*movsi_internal}
     (nil))
(insn 15 14 16 3 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:88 _2 ] [88])) "test1.c":63 81 {*movdi_internal}
     (nil))
(call_insn 16 15 17 3 (call (mem:QI (symbol_ref:DI ("printAVL") [flags 0x3]  <function_decl 0x7fddd77ee100 printAVL>) [0 printAVL S1 A8])
        (const_int 0 [0])) "test1.c":63 665 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 17 16 18 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fddd745d510 *.LC1>)) "test1.c":64 81 {*movdi_internal}
     (nil))
(call_insn 18 17 19 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fddd76af600 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "test1.c":64 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 19 18 50 3 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 0 [0])) "test1.c":66 82 {*movsi_internal}
     (nil))
(jump_insn 50 19 51 3 (set (pc)
        (label_ref 26)) "test1.c":66 659 {jump}
     (nil)
 -> 26)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 51 50 28)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       5
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 28 51 22 4 20 (nil) [1 uses])
(note 22 28 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 4 (set (reg:SI 5 di)
        (const_int 9 [0x9])) "test1.c":66 82 {*movsi_internal}
     (nil))
(call_insn 24 23 25 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7fddd76af200 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) "test1.c":66 676 {*call_value}
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 25 24 26 4 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":66 217 {*addsi_1}
     (nil))
;;  succ:       5 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU,DFS_BACK)
;;              3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 94
(code_label 26 25 27 5 19 (nil) [1 uses])
(note 27 26 29 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 29 27 30 5 (set (reg:SI 0 ax [94])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "test1.c":66 82 {*movsi_internal}
     (nil))
(insn 30 29 31 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [94])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -28 [0xffffffffffffffe4])) [1 level+0 S4 A32]))) "test1.c":66 7 {*cmpsi_1}
     (nil))
(jump_insn 31 30 32 5 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 28)
            (pc))) "test1.c":66 627 {*jcc_1}
     (nil)
 -> 28)
;;  succ:       4
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 8, flags: (RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 89 90 91 95 96 97
(note 32 31 33 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 6 (set (reg/f:DI 0 ax [95])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 node+0 S8 A64])) "test1.c":68 81 {*movdi_internal}
     (nil))
(insn 34 33 35 6 (set (reg:SI 0 ax [orig:89 _3 ] [89])
        (mem:SI (reg/f:DI 0 ax [95]) [1 node_9(D)->key+0 S4 A64])) "test1.c":68 82 {*movsi_internal}
     (nil))
(insn 35 34 36 6 (set (reg:SI 4 si)
        (reg:SI 0 ax [orig:89 _3 ] [89])) "test1.c":68 82 {*movsi_internal}
     (nil))
(insn 36 35 37 6 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fddd745d5a0 *.LC2>)) "test1.c":68 81 {*movdi_internal}
     (nil))
(insn 37 36 38 6 (set (reg:QI 0 ax)
        (const_int 0 [0])) "test1.c":68 84 {*movqi_internal}
     (nil))
(call_insn 38 37 39 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fddd76aef00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "test1.c":68 676 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 39 38 40 6 (set (reg:SI 0 ax [96])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 level+0 S4 A32])) "test1.c":70 82 {*movsi_internal}
     (nil))
(insn 40 39 41 6 (parallel [
            (set (reg:SI 1 dx [orig:90 _4 ] [90])
                (plus:SI (reg:SI 0 ax [96])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":70 217 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -28 [0xffffffffffffffe4])) [1 level+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 41 40 42 6 (set (reg/f:DI 0 ax [97])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 node+0 S8 A64])) "test1.c":70 81 {*movdi_internal}
     (nil))
(insn 42 41 43 6 (set (reg/f:DI 0 ax [orig:91 _5 ] [91])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [97])
                (const_int 8 [0x8])) [2 node_9(D)->left+0 S8 A64])) "test1.c":70 81 {*movdi_internal}
     (nil))
(insn 43 42 44 6 (set (reg:SI 4 si)
        (reg:SI 1 dx [orig:90 _4 ] [90])) "test1.c":70 82 {*movsi_internal}
     (nil))
(insn 44 43 45 6 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:91 _5 ] [91])) "test1.c":70 81 {*movdi_internal}
     (nil))
(call_insn 45 44 55 6 (call (mem:QI (symbol_ref:DI ("printAVL") [flags 0x3]  <function_decl 0x7fddd77ee100 printAVL>) [0 printAVL S1 A8])
        (const_int 0 [0])) "test1.c":70 665 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       8 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 7, flags: (RTL, MODIFIED)
;;  pred:       2
;;              6 [100.0%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 55 45 54 8 21 (nil) [1 uses])
(note 54 55 56 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 56 54 48 8 (const_int 0 [0]) "test1.c":72 694 {nop}
     (nil))
;;  succ:       7 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 1, flags: (RTL, MODIFIED)
;;  pred:       8 [100.0%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 48 56 49 7 17 (nil) [0 uses])
(note 49 48 57 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 57 49 0 NOTE_INSN_DELETED)

;; Function rightRotate (rightRotate, funcdef_no=11, decl_uid=2797, cgraph_uid=11, symbol_order=11)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=24, prev_offset=0)
Can eliminate 20 to 6 (offset=-8, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 6:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 7:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 8:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 9:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 10:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 11:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 12:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 13:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 14:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 15:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 16:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 17:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 18:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 19:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 23:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 24:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (1) rBwBz {*call_value}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 32:  (0) r  (1) r  (2) le {*addsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 33:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 34:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 35:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 36:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 40:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 41:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (1) rBwBz {*call_value}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 49:  (0) r  (1) r  (2) le {*addsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 50:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 51:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 52:  (0) r  (1) rem {*movdi_internal}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 60: point = 0, n_alt = -1
   Insn 59: point = 0, n_alt = -2
   Insn 55: point = 1, n_alt = -2
   Insn 52: point = 3, n_alt = 3
   Insn 51: point = 4, n_alt = 1
   Insn 50: point = 5, n_alt = 3
   Insn 49: point = 6, n_alt = 3
   Insn 48: point = 8, n_alt = -2
   Insn 47: point = 9, n_alt = 0
   Insn 46: point = 9, n_alt = -2
   Insn 45: point = 10, n_alt = -2
   Insn 44: point = 11, n_alt = -2
   Insn 43: point = 12, n_alt = 0
   Insn 42: point = 12, n_alt = -2
   Insn 41: point = 13, n_alt = 3
   Insn 40: point = 15, n_alt = 3
   Insn 39: point = 16, n_alt = -2
   Insn 38: point = 17, n_alt = 0
   Insn 37: point = 17, n_alt = -2
   Insn 36: point = 18, n_alt = 3
   Insn 35: point = 20, n_alt = 3
   Insn 34: point = 21, n_alt = 1
   Insn 33: point = 22, n_alt = 3
   Insn 32: point = 23, n_alt = 3
   Insn 31: point = 25, n_alt = -2
   Insn 30: point = 26, n_alt = 0
   Insn 29: point = 26, n_alt = -2
   Insn 28: point = 27, n_alt = -2
   Insn 27: point = 28, n_alt = -2
   Insn 26: point = 29, n_alt = 0
   Insn 25: point = 29, n_alt = -2
   Insn 24: point = 30, n_alt = 3
   Insn 23: point = 32, n_alt = 3
   Insn 22: point = 33, n_alt = -2
   Insn 21: point = 34, n_alt = 0
   Insn 20: point = 34, n_alt = -2
   Insn 19: point = 35, n_alt = 3
   Insn 18: point = 37, n_alt = 3
   Insn 17: point = 38, n_alt = 5
   Insn 16: point = 39, n_alt = 3
   Insn 15: point = 40, n_alt = 3
   Insn 14: point = 41, n_alt = 5
   Insn 13: point = 42, n_alt = 3
   Insn 12: point = 43, n_alt = 3
   Insn 11: point = 44, n_alt = 5
   Insn 10: point = 45, n_alt = 3
   Insn 9: point = 47, n_alt = 3
   Insn 8: point = 48, n_alt = 5
   Insn 7: point = 49, n_alt = 3
   Insn 6: point = 51, n_alt = 3
   Insn 2: point = 52, n_alt = 5
 r87: [34..35]
 r88: [27..33]
 r89: [29..30]
 r90: [26..28]
 r91: [24..25]
 r92: [21..23]
 r93: [17..18]
 r94: [10..16]
 r95: [12..13]
 r96: [9..11]
 r97: [7..8]
 r98: [4..6]
 r99: [2..3]
 r100: [0..1]
 r101: [50..51]
 r102: [48..49]
 r103: [46..47]
 r104: [44..45]
 r105: [41..43]
 r106: [41..42]
 r107: [38..40]
 r108: [38..39]
 r109: [36..37]
 r110: [31..32]
 r111: [21..22]
 r112: [19..20]
 r113: [14..15]
 r114: [4..5]
Compressing live ranges: from 52 to 44 - 84%
Ranges after the compression:
 r87: [28..29]
 r88: [22..27]
 r89: [24..25]
 r90: [22..23]
 r91: [20..21]
 r92: [18..19]
 r93: [14..15]
 r94: [8..13]
 r95: [10..11]
 r96: [8..9]
 r97: [6..7]
 r98: [4..5]
 r99: [2..3]
 r100: [0..1]
 r101: [42..43]
 r102: [40..41]
 r103: [38..39]
 r104: [36..37]
 r105: [34..35]
 r106: [34..35]
 r107: [32..33]
 r108: [32..33]
 r109: [30..31]
 r110: [26..27]
 r111: [18..19]
 r112: [16..17]
 r113: [12..13]
 r114: [4..5]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=24, prev_offset=0)
Can eliminate 20 to 6 (offset=-8, prev_offset=-8)
changing reg in insn 19
changing reg in insn 20
changing reg in insn 22
changing reg in insn 28
changing reg in insn 24
changing reg in insn 25
changing reg in insn 27
changing reg in insn 29
changing reg in insn 31
changing reg in insn 32
changing reg in insn 32
changing reg in insn 34
changing reg in insn 36
changing reg in insn 37
changing reg in insn 39
changing reg in insn 45
changing reg in insn 41
changing reg in insn 42
changing reg in insn 44
changing reg in insn 46
changing reg in insn 48
changing reg in insn 49
changing reg in insn 49
changing reg in insn 51
changing reg in insn 52
changing reg in insn 55
changing reg in insn 55
changing reg in insn 59
changing reg in insn 6
changing reg in insn 7
changing reg in insn 7
changing reg in insn 8
changing reg in insn 9
changing reg in insn 10
changing reg in insn 10
changing reg in insn 11
changing reg in insn 12
changing reg in insn 14
changing reg in insn 13
changing reg in insn 14
changing reg in insn 15
changing reg in insn 17
changing reg in insn 16
changing reg in insn 17
changing reg in insn 18
changing reg in insn 19
changing reg in insn 23
changing reg in insn 24
changing reg in insn 33
changing reg in insn 34
changing reg in insn 35
changing reg in insn 36
changing reg in insn 40
changing reg in insn 41
changing reg in insn 50
changing reg in insn 51
deleting insn with uid = 27.
deleting insn with uid = 31.
deleting insn with uid = 44.
deleting insn with uid = 48.
deleting insn with uid = 55.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 21.
verify found no changes in insn with uid = 26.
verify found no changes in insn with uid = 30.
verify found no changes in insn with uid = 38.
verify found no changes in insn with uid = 43.
verify found no changes in insn with uid = 47.


rightRotate

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={25d,25u} r1={11d,4u} r2={7d} r3={2d,2u} r4={9d,2u} r5={13d,7u} r6={1d,18u} r7={1d,8u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r17={8d} r18={6d} r19={6d} r20={1d,1u} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={7d} r38={7d} r39={6d} r40={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} 
;;    total ref usage 551{484d,67u,0e} in 46{40 regular + 6 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 z+0 S8 A64])
        (reg:DI 5 di [ z ])) "test1.c":75 81 {*movdi_internal}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 0 ax [101])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 z+0 S8 A64])) "test1.c":76 81 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 0 ax [102])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [101])
                (const_int 8 [0x8])) [2 z_14(D)->left+0 S8 A64])) "test1.c":76 81 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [2 y+0 S8 A64])
        (reg/f:DI 0 ax [102])) "test1.c":76 81 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 0 ax [103])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [2 y+0 S8 A64])) "test1.c":77 81 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg/f:DI 0 ax [104])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [103])
                (const_int 16 [0x10])) [2 y_15->right+0 S8 A64])) "test1.c":77 81 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 T3+0 S8 A64])
        (reg/f:DI 0 ax [104])) "test1.c":77 81 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg/f:DI 0 ax [105])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [2 y+0 S8 A64])) "test1.c":79 81 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg/f:DI 1 dx [106])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 z+0 S8 A64])) "test1.c":79 81 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (mem/f:DI (plus:DI (reg/f:DI 0 ax [105])
                (const_int 16 [0x10])) [2 y_15->right+0 S8 A64])
        (reg/f:DI 1 dx [106])) "test1.c":79 81 {*movdi_internal}
     (nil))
(insn 15 14 16 2 (set (reg/f:DI 0 ax [107])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 z+0 S8 A64])) "test1.c":80 81 {*movdi_internal}
     (nil))
(insn 16 15 17 2 (set (reg/f:DI 1 dx [108])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 T3+0 S8 A64])) "test1.c":80 81 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (mem/f:DI (plus:DI (reg/f:DI 0 ax [107])
                (const_int 8 [0x8])) [2 z_14(D)->left+0 S8 A64])
        (reg/f:DI 1 dx [108])) "test1.c":80 81 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (set (reg/f:DI 0 ax [109])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 z+0 S8 A64])) "test1.c":82 81 {*movdi_internal}
     (nil))
(insn 19 18 20 2 (set (reg/f:DI 0 ax [orig:87 _1 ] [87])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [109])
                (const_int 16 [0x10])) [2 z_14(D)->right+0 S8 A64])) "test1.c":82 81 {*movdi_internal}
     (nil))
(insn 20 19 21 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:87 _1 ] [87])) "test1.c":82 81 {*movdi_internal}
     (nil))
(call_insn 21 20 22 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("nodeHeight") [flags 0x3]  <function_decl 0x7fddd77eab00 nodeHeight>) [0 nodeHeight S1 A8])
            (const_int 0 [0]))) "test1.c":82 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 22 21 23 2 (set (reg:SI 3 bx [orig:88 _2 ] [88])
        (reg:SI 0 ax)) "test1.c":82 82 {*movsi_internal}
     (nil))
(insn 23 22 24 2 (set (reg/f:DI 0 ax [110])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 z+0 S8 A64])) "test1.c":82 81 {*movdi_internal}
     (nil))
(insn 24 23 25 2 (set (reg/f:DI 0 ax [orig:89 _3 ] [89])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [110])
                (const_int 8 [0x8])) [2 z_14(D)->left+0 S8 A64])) "test1.c":82 81 {*movdi_internal}
     (nil))
(insn 25 24 26 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:89 _3 ] [89])) "test1.c":82 81 {*movdi_internal}
     (nil))
(call_insn 26 25 28 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("nodeHeight") [flags 0x3]  <function_decl 0x7fddd77eab00 nodeHeight>) [0 nodeHeight S1 A8])
            (const_int 0 [0]))) "test1.c":82 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 28 26 29 2 (set (reg:SI 4 si)
        (reg:SI 3 bx [orig:88 _2 ] [88])) "test1.c":82 82 {*movsi_internal}
     (nil))
(insn 29 28 30 2 (set (reg:SI 5 di)
        (reg:SI 0 ax [orig:90 _4 ] [90])) "test1.c":82 82 {*movsi_internal}
     (nil))
(call_insn 30 29 32 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("max") [flags 0x3]  <function_decl 0x7fddd77ea700 max>) [0 max S1 A8])
            (const_int 0 [0]))) "test1.c":82 676 {*call_value}
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 32 30 33 2 (parallel [
            (set (reg:SI 1 dx [orig:92 _6 ] [92])
                (plus:SI (reg:SI 0 ax [orig:91 _5 ] [91])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":82 217 {*addsi_1}
     (nil))
(insn 33 32 34 2 (set (reg/f:DI 0 ax [111])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 z+0 S8 A64])) "test1.c":82 81 {*movdi_internal}
     (nil))
(insn 34 33 35 2 (set (mem:SI (plus:DI (reg/f:DI 0 ax [111])
                (const_int 24 [0x18])) [1 z_14(D)->height+0 S4 A64])
        (reg:SI 1 dx [orig:92 _6 ] [92])) "test1.c":82 82 {*movsi_internal}
     (nil))
(insn 35 34 36 2 (set (reg/f:DI 0 ax [112])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [2 y+0 S8 A64])) "test1.c":83 81 {*movdi_internal}
     (nil))
(insn 36 35 37 2 (set (reg/f:DI 0 ax [orig:93 _7 ] [93])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [112])
                (const_int 16 [0x10])) [2 y_15->right+0 S8 A64])) "test1.c":83 81 {*movdi_internal}
     (nil))
(insn 37 36 38 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:93 _7 ] [93])) "test1.c":83 81 {*movdi_internal}
     (nil))
(call_insn 38 37 39 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("nodeHeight") [flags 0x3]  <function_decl 0x7fddd77eab00 nodeHeight>) [0 nodeHeight S1 A8])
            (const_int 0 [0]))) "test1.c":83 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 39 38 40 2 (set (reg:SI 3 bx [orig:94 _8 ] [94])
        (reg:SI 0 ax)) "test1.c":83 82 {*movsi_internal}
     (nil))
(insn 40 39 41 2 (set (reg/f:DI 0 ax [113])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [2 y+0 S8 A64])) "test1.c":83 81 {*movdi_internal}
     (nil))
(insn 41 40 42 2 (set (reg/f:DI 0 ax [orig:95 _9 ] [95])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [113])
                (const_int 8 [0x8])) [2 y_15->left+0 S8 A64])) "test1.c":83 81 {*movdi_internal}
     (nil))
(insn 42 41 43 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:95 _9 ] [95])) "test1.c":83 81 {*movdi_internal}
     (nil))
(call_insn 43 42 45 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("nodeHeight") [flags 0x3]  <function_decl 0x7fddd77eab00 nodeHeight>) [0 nodeHeight S1 A8])
            (const_int 0 [0]))) "test1.c":83 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 45 43 46 2 (set (reg:SI 4 si)
        (reg:SI 3 bx [orig:94 _8 ] [94])) "test1.c":83 82 {*movsi_internal}
     (nil))
(insn 46 45 47 2 (set (reg:SI 5 di)
        (reg:SI 0 ax [orig:96 _10 ] [96])) "test1.c":83 82 {*movsi_internal}
     (nil))
(call_insn 47 46 49 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("max") [flags 0x3]  <function_decl 0x7fddd77ea700 max>) [0 max S1 A8])
            (const_int 0 [0]))) "test1.c":83 676 {*call_value}
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 49 47 50 2 (parallel [
            (set (reg:SI 1 dx [orig:98 _12 ] [98])
                (plus:SI (reg:SI 0 ax [orig:97 _11 ] [97])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":83 217 {*addsi_1}
     (nil))
(insn 50 49 51 2 (set (reg/f:DI 0 ax [114])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [2 y+0 S8 A64])) "test1.c":83 81 {*movdi_internal}
     (nil))
(insn 51 50 52 2 (set (mem:SI (plus:DI (reg/f:DI 0 ax [114])
                (const_int 24 [0x18])) [1 y_15->height+0 S4 A64])
        (reg:SI 1 dx [orig:98 _12 ] [98])) "test1.c":83 82 {*movsi_internal}
     (nil))
(insn 52 51 59 2 (set (reg/f:DI 0 ax [orig:99 _27 ] [99])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [2 y+0 S8 A64])) "test1.c":85 81 {*movdi_internal}
     (nil))
(insn 59 52 60 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 0 ax [orig:100 <retval> ] [100])) "test1.c":86 81 {*movdi_internal}
     (nil))
(insn 60 59 62 2 (use (reg/i:DI 0 ax)) "test1.c":86 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 62 60 0 NOTE_INSN_DELETED)

;; Function leftRotate (leftRotate, funcdef_no=12, decl_uid=2802, cgraph_uid=12, symbol_order=12)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=24, prev_offset=0)
Can eliminate 20 to 6 (offset=-8, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 6:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 7:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 8:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 9:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 10:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 11:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 12:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 13:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 14:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 15:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 16:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 17:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 18:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 19:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 23:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 24:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (1) rBwBz {*call_value}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 32:  (0) r  (1) r  (2) le {*addsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 33:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 34:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 35:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 36:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 40:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 41:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (1) rBwBz {*call_value}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 49:  (0) r  (1) r  (2) le {*addsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 50:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 51:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 52:  (0) r  (1) rem {*movdi_internal}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 60: point = 0, n_alt = -1
   Insn 59: point = 0, n_alt = -2
   Insn 55: point = 1, n_alt = -2
   Insn 52: point = 3, n_alt = 3
   Insn 51: point = 4, n_alt = 1
   Insn 50: point = 5, n_alt = 3
   Insn 49: point = 6, n_alt = 3
   Insn 48: point = 8, n_alt = -2
   Insn 47: point = 9, n_alt = 0
   Insn 46: point = 9, n_alt = -2
   Insn 45: point = 10, n_alt = -2
   Insn 44: point = 11, n_alt = -2
   Insn 43: point = 12, n_alt = 0
   Insn 42: point = 12, n_alt = -2
   Insn 41: point = 13, n_alt = 3
   Insn 40: point = 15, n_alt = 3
   Insn 39: point = 16, n_alt = -2
   Insn 38: point = 17, n_alt = 0
   Insn 37: point = 17, n_alt = -2
   Insn 36: point = 18, n_alt = 3
   Insn 35: point = 20, n_alt = 3
   Insn 34: point = 21, n_alt = 1
   Insn 33: point = 22, n_alt = 3
   Insn 32: point = 23, n_alt = 3
   Insn 31: point = 25, n_alt = -2
   Insn 30: point = 26, n_alt = 0
   Insn 29: point = 26, n_alt = -2
   Insn 28: point = 27, n_alt = -2
   Insn 27: point = 28, n_alt = -2
   Insn 26: point = 29, n_alt = 0
   Insn 25: point = 29, n_alt = -2
   Insn 24: point = 30, n_alt = 3
   Insn 23: point = 32, n_alt = 3
   Insn 22: point = 33, n_alt = -2
   Insn 21: point = 34, n_alt = 0
   Insn 20: point = 34, n_alt = -2
   Insn 19: point = 35, n_alt = 3
   Insn 18: point = 37, n_alt = 3
   Insn 17: point = 38, n_alt = 5
   Insn 16: point = 39, n_alt = 3
   Insn 15: point = 40, n_alt = 3
   Insn 14: point = 41, n_alt = 5
   Insn 13: point = 42, n_alt = 3
   Insn 12: point = 43, n_alt = 3
   Insn 11: point = 44, n_alt = 5
   Insn 10: point = 45, n_alt = 3
   Insn 9: point = 47, n_alt = 3
   Insn 8: point = 48, n_alt = 5
   Insn 7: point = 49, n_alt = 3
   Insn 6: point = 51, n_alt = 3
   Insn 2: point = 52, n_alt = 5
 r87: [34..35]
 r88: [27..33]
 r89: [29..30]
 r90: [26..28]
 r91: [24..25]
 r92: [21..23]
 r93: [17..18]
 r94: [10..16]
 r95: [12..13]
 r96: [9..11]
 r97: [7..8]
 r98: [4..6]
 r99: [2..3]
 r100: [0..1]
 r101: [50..51]
 r102: [48..49]
 r103: [46..47]
 r104: [44..45]
 r105: [41..43]
 r106: [41..42]
 r107: [38..40]
 r108: [38..39]
 r109: [36..37]
 r110: [31..32]
 r111: [21..22]
 r112: [19..20]
 r113: [14..15]
 r114: [4..5]
Compressing live ranges: from 52 to 44 - 84%
Ranges after the compression:
 r87: [28..29]
 r88: [22..27]
 r89: [24..25]
 r90: [22..23]
 r91: [20..21]
 r92: [18..19]
 r93: [14..15]
 r94: [8..13]
 r95: [10..11]
 r96: [8..9]
 r97: [6..7]
 r98: [4..5]
 r99: [2..3]
 r100: [0..1]
 r101: [42..43]
 r102: [40..41]
 r103: [38..39]
 r104: [36..37]
 r105: [34..35]
 r106: [34..35]
 r107: [32..33]
 r108: [32..33]
 r109: [30..31]
 r110: [26..27]
 r111: [18..19]
 r112: [16..17]
 r113: [12..13]
 r114: [4..5]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=24, prev_offset=0)
Can eliminate 20 to 6 (offset=-8, prev_offset=-8)
changing reg in insn 19
changing reg in insn 20
changing reg in insn 22
changing reg in insn 28
changing reg in insn 24
changing reg in insn 25
changing reg in insn 27
changing reg in insn 29
changing reg in insn 31
changing reg in insn 32
changing reg in insn 32
changing reg in insn 34
changing reg in insn 36
changing reg in insn 37
changing reg in insn 39
changing reg in insn 45
changing reg in insn 41
changing reg in insn 42
changing reg in insn 44
changing reg in insn 46
changing reg in insn 48
changing reg in insn 49
changing reg in insn 49
changing reg in insn 51
changing reg in insn 52
changing reg in insn 55
changing reg in insn 55
changing reg in insn 59
changing reg in insn 6
changing reg in insn 7
changing reg in insn 7
changing reg in insn 8
changing reg in insn 9
changing reg in insn 10
changing reg in insn 10
changing reg in insn 11
changing reg in insn 12
changing reg in insn 14
changing reg in insn 13
changing reg in insn 14
changing reg in insn 15
changing reg in insn 17
changing reg in insn 16
changing reg in insn 17
changing reg in insn 18
changing reg in insn 19
changing reg in insn 23
changing reg in insn 24
changing reg in insn 33
changing reg in insn 34
changing reg in insn 35
changing reg in insn 36
changing reg in insn 40
changing reg in insn 41
changing reg in insn 50
changing reg in insn 51
deleting insn with uid = 27.
deleting insn with uid = 31.
deleting insn with uid = 44.
deleting insn with uid = 48.
deleting insn with uid = 55.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 21.
verify found no changes in insn with uid = 26.
verify found no changes in insn with uid = 30.
verify found no changes in insn with uid = 38.
verify found no changes in insn with uid = 43.
verify found no changes in insn with uid = 47.


leftRotate

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={25d,25u} r1={11d,4u} r2={7d} r3={2d,2u} r4={9d,2u} r5={13d,7u} r6={1d,18u} r7={1d,8u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r17={8d} r18={6d} r19={6d} r20={1d,1u} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={7d} r38={7d} r39={6d} r40={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} 
;;    total ref usage 551{484d,67u,0e} in 46{40 regular + 6 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 z+0 S8 A64])
        (reg:DI 5 di [ z ])) "test1.c":89 81 {*movdi_internal}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 0 ax [101])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 z+0 S8 A64])) "test1.c":90 81 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 0 ax [102])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [101])
                (const_int 16 [0x10])) [2 z_14(D)->right+0 S8 A64])) "test1.c":90 81 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [2 y+0 S8 A64])
        (reg/f:DI 0 ax [102])) "test1.c":90 81 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 0 ax [103])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [2 y+0 S8 A64])) "test1.c":91 81 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg/f:DI 0 ax [104])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [103])
                (const_int 8 [0x8])) [2 y_15->left+0 S8 A64])) "test1.c":91 81 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 T3+0 S8 A64])
        (reg/f:DI 0 ax [104])) "test1.c":91 81 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg/f:DI 0 ax [105])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [2 y+0 S8 A64])) "test1.c":93 81 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg/f:DI 1 dx [106])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 z+0 S8 A64])) "test1.c":93 81 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (mem/f:DI (plus:DI (reg/f:DI 0 ax [105])
                (const_int 8 [0x8])) [2 y_15->left+0 S8 A64])
        (reg/f:DI 1 dx [106])) "test1.c":93 81 {*movdi_internal}
     (nil))
(insn 15 14 16 2 (set (reg/f:DI 0 ax [107])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 z+0 S8 A64])) "test1.c":94 81 {*movdi_internal}
     (nil))
(insn 16 15 17 2 (set (reg/f:DI 1 dx [108])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 T3+0 S8 A64])) "test1.c":94 81 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (mem/f:DI (plus:DI (reg/f:DI 0 ax [107])
                (const_int 16 [0x10])) [2 z_14(D)->right+0 S8 A64])
        (reg/f:DI 1 dx [108])) "test1.c":94 81 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (set (reg/f:DI 0 ax [109])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 z+0 S8 A64])) "test1.c":96 81 {*movdi_internal}
     (nil))
(insn 19 18 20 2 (set (reg/f:DI 0 ax [orig:87 _1 ] [87])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [109])
                (const_int 16 [0x10])) [2 z_14(D)->right+0 S8 A64])) "test1.c":96 81 {*movdi_internal}
     (nil))
(insn 20 19 21 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:87 _1 ] [87])) "test1.c":96 81 {*movdi_internal}
     (nil))
(call_insn 21 20 22 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("nodeHeight") [flags 0x3]  <function_decl 0x7fddd77eab00 nodeHeight>) [0 nodeHeight S1 A8])
            (const_int 0 [0]))) "test1.c":96 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 22 21 23 2 (set (reg:SI 3 bx [orig:88 _2 ] [88])
        (reg:SI 0 ax)) "test1.c":96 82 {*movsi_internal}
     (nil))
(insn 23 22 24 2 (set (reg/f:DI 0 ax [110])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 z+0 S8 A64])) "test1.c":96 81 {*movdi_internal}
     (nil))
(insn 24 23 25 2 (set (reg/f:DI 0 ax [orig:89 _3 ] [89])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [110])
                (const_int 8 [0x8])) [2 z_14(D)->left+0 S8 A64])) "test1.c":96 81 {*movdi_internal}
     (nil))
(insn 25 24 26 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:89 _3 ] [89])) "test1.c":96 81 {*movdi_internal}
     (nil))
(call_insn 26 25 28 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("nodeHeight") [flags 0x3]  <function_decl 0x7fddd77eab00 nodeHeight>) [0 nodeHeight S1 A8])
            (const_int 0 [0]))) "test1.c":96 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 28 26 29 2 (set (reg:SI 4 si)
        (reg:SI 3 bx [orig:88 _2 ] [88])) "test1.c":96 82 {*movsi_internal}
     (nil))
(insn 29 28 30 2 (set (reg:SI 5 di)
        (reg:SI 0 ax [orig:90 _4 ] [90])) "test1.c":96 82 {*movsi_internal}
     (nil))
(call_insn 30 29 32 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("max") [flags 0x3]  <function_decl 0x7fddd77ea700 max>) [0 max S1 A8])
            (const_int 0 [0]))) "test1.c":96 676 {*call_value}
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 32 30 33 2 (parallel [
            (set (reg:SI 1 dx [orig:92 _6 ] [92])
                (plus:SI (reg:SI 0 ax [orig:91 _5 ] [91])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":96 217 {*addsi_1}
     (nil))
(insn 33 32 34 2 (set (reg/f:DI 0 ax [111])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 z+0 S8 A64])) "test1.c":96 81 {*movdi_internal}
     (nil))
(insn 34 33 35 2 (set (mem:SI (plus:DI (reg/f:DI 0 ax [111])
                (const_int 24 [0x18])) [1 z_14(D)->height+0 S4 A64])
        (reg:SI 1 dx [orig:92 _6 ] [92])) "test1.c":96 82 {*movsi_internal}
     (nil))
(insn 35 34 36 2 (set (reg/f:DI 0 ax [112])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [2 y+0 S8 A64])) "test1.c":97 81 {*movdi_internal}
     (nil))
(insn 36 35 37 2 (set (reg/f:DI 0 ax [orig:93 _7 ] [93])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [112])
                (const_int 16 [0x10])) [2 y_15->right+0 S8 A64])) "test1.c":97 81 {*movdi_internal}
     (nil))
(insn 37 36 38 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:93 _7 ] [93])) "test1.c":97 81 {*movdi_internal}
     (nil))
(call_insn 38 37 39 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("nodeHeight") [flags 0x3]  <function_decl 0x7fddd77eab00 nodeHeight>) [0 nodeHeight S1 A8])
            (const_int 0 [0]))) "test1.c":97 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 39 38 40 2 (set (reg:SI 3 bx [orig:94 _8 ] [94])
        (reg:SI 0 ax)) "test1.c":97 82 {*movsi_internal}
     (nil))
(insn 40 39 41 2 (set (reg/f:DI 0 ax [113])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [2 y+0 S8 A64])) "test1.c":97 81 {*movdi_internal}
     (nil))
(insn 41 40 42 2 (set (reg/f:DI 0 ax [orig:95 _9 ] [95])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [113])
                (const_int 8 [0x8])) [2 y_15->left+0 S8 A64])) "test1.c":97 81 {*movdi_internal}
     (nil))
(insn 42 41 43 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:95 _9 ] [95])) "test1.c":97 81 {*movdi_internal}
     (nil))
(call_insn 43 42 45 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("nodeHeight") [flags 0x3]  <function_decl 0x7fddd77eab00 nodeHeight>) [0 nodeHeight S1 A8])
            (const_int 0 [0]))) "test1.c":97 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 45 43 46 2 (set (reg:SI 4 si)
        (reg:SI 3 bx [orig:94 _8 ] [94])) "test1.c":97 82 {*movsi_internal}
     (nil))
(insn 46 45 47 2 (set (reg:SI 5 di)
        (reg:SI 0 ax [orig:96 _10 ] [96])) "test1.c":97 82 {*movsi_internal}
     (nil))
(call_insn 47 46 49 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("max") [flags 0x3]  <function_decl 0x7fddd77ea700 max>) [0 max S1 A8])
            (const_int 0 [0]))) "test1.c":97 676 {*call_value}
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 49 47 50 2 (parallel [
            (set (reg:SI 1 dx [orig:98 _12 ] [98])
                (plus:SI (reg:SI 0 ax [orig:97 _11 ] [97])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":97 217 {*addsi_1}
     (nil))
(insn 50 49 51 2 (set (reg/f:DI 0 ax [114])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [2 y+0 S8 A64])) "test1.c":97 81 {*movdi_internal}
     (nil))
(insn 51 50 52 2 (set (mem:SI (plus:DI (reg/f:DI 0 ax [114])
                (const_int 24 [0x18])) [1 y_15->height+0 S4 A64])
        (reg:SI 1 dx [orig:98 _12 ] [98])) "test1.c":97 82 {*movsi_internal}
     (nil))
(insn 52 51 59 2 (set (reg/f:DI 0 ax [orig:99 _27 ] [99])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [2 y+0 S8 A64])) "test1.c":99 81 {*movdi_internal}
     (nil))
(insn 59 52 60 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 0 ax [orig:100 <retval> ] [100])) "test1.c":100 81 {*movdi_internal}
     (nil))
(insn 60 59 62 2 (use (reg/i:DI 0 ax)) "test1.c":100 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 62 60 0 NOTE_INSN_DELETED)

;; Function LeftRightRotate (LeftRightRotate, funcdef_no=13, decl_uid=2807, cgraph_uid=13, symbol_order=13)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=24, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=8, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 6:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 7:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 11:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 12:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 13:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (1) rBwBz {*call_value}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 24: point = 0, n_alt = -1
   Insn 23: point = 0, n_alt = -2
   Insn 19: point = 1, n_alt = -2
   Insn 16: point = 3, n_alt = -2
   Insn 15: point = 4, n_alt = 0
   Insn 14: point = 4, n_alt = -2
   Insn 13: point = 5, n_alt = 3
   Insn 12: point = 6, n_alt = 5
   Insn 11: point = 7, n_alt = 3
   Insn 10: point = 8, n_alt = -2
   Insn 9: point = 9, n_alt = 0
   Insn 8: point = 9, n_alt = -2
   Insn 7: point = 10, n_alt = 3
   Insn 6: point = 12, n_alt = 3
   Insn 2: point = 13, n_alt = 5
 r87: [9..10]
 r88: [6..8]
 r89: [2..3]
 r90: [0..1]
 r91: [11..12]
 r92: [6..7]
 r93: [4..5]
Compressing live ranges: from 13 to 12 - 92%
Ranges after the compression:
 r87: [8..9]
 r88: [6..7]
 r89: [2..3]
 r90: [0..1]
 r91: [10..11]
 r92: [6..7]
 r93: [4..5]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=24, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=8, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 7
changing reg in insn 8
changing reg in insn 10
changing reg in insn 12
changing reg in insn 16
changing reg in insn 19
changing reg in insn 19
changing reg in insn 23
changing reg in insn 6
changing reg in insn 7
changing reg in insn 11
changing reg in insn 12
changing reg in insn 13
changing reg in insn 14
deleting insn with uid = 16.
deleting insn with uid = 19.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 9.
verify found no changes in insn with uid = 15.


LeftRightRotate

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={8d,8u} r1={4d,1u} r2={3d} r4={3d} r5={5d,3u} r6={1d,6u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={2d} r18={2d} r19={2d} r20={1d,1u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} 
;;    total ref usage 193{170d,23u,0e} in 13{11 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92 93
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [2 z+0 S8 A64])
        (reg:DI 5 di [ z ])) "test1.c":103 81 {*movdi_internal}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 0 ax [91])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [2 z+0 S8 A64])) "test1.c":104 81 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 0 ax [orig:87 _1 ] [87])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [91])
                (const_int 8 [0x8])) [2 z_4(D)->left+0 S8 A64])) "test1.c":104 81 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:87 _1 ] [87])) "test1.c":104 81 {*movdi_internal}
     (nil))
(call_insn 9 8 10 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("leftRotate") [flags 0x3]  <function_decl 0x7fddd77ee500 leftRotate>) [0 leftRotate S1 A8])
            (const_int 0 [0]))) "test1.c":104 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 10 9 11 2 (set (reg/f:DI 1 dx [orig:88 _2 ] [88])
        (reg:DI 0 ax)) "test1.c":104 81 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg/f:DI 0 ax [92])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [2 z+0 S8 A64])) "test1.c":104 81 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (mem/f:DI (plus:DI (reg/f:DI 0 ax [92])
                (const_int 8 [0x8])) [2 z_4(D)->left+0 S8 A64])
        (reg/f:DI 1 dx [orig:88 _2 ] [88])) "test1.c":104 81 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 0 ax [93])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [2 z+0 S8 A64])) "test1.c":106 81 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [93])) "test1.c":106 81 {*movdi_internal}
     (nil))
(call_insn 15 14 23 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rightRotate") [flags 0x3]  <function_decl 0x7fddd77ee300 rightRotate>) [0 rightRotate S1 A8])
            (const_int 0 [0]))) "test1.c":106 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 23 15 24 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 0 ax [orig:90 <retval> ] [90])) "test1.c":107 81 {*movdi_internal}
     (nil))
(insn 24 23 26 2 (use (reg/i:DI 0 ax)) "test1.c":107 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 26 24 0 NOTE_INSN_DELETED)

;; Function RightLeftRotate (RightLeftRotate, funcdef_no=14, decl_uid=2810, cgraph_uid=14, symbol_order=14)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=24, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=8, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 6:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 7:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 11:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 12:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 13:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (1) rBwBz {*call_value}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 24: point = 0, n_alt = -1
   Insn 23: point = 0, n_alt = -2
   Insn 19: point = 1, n_alt = -2
   Insn 16: point = 3, n_alt = -2
   Insn 15: point = 4, n_alt = 0
   Insn 14: point = 4, n_alt = -2
   Insn 13: point = 5, n_alt = 3
   Insn 12: point = 6, n_alt = 5
   Insn 11: point = 7, n_alt = 3
   Insn 10: point = 8, n_alt = -2
   Insn 9: point = 9, n_alt = 0
   Insn 8: point = 9, n_alt = -2
   Insn 7: point = 10, n_alt = 3
   Insn 6: point = 12, n_alt = 3
   Insn 2: point = 13, n_alt = 5
 r87: [9..10]
 r88: [6..8]
 r89: [2..3]
 r90: [0..1]
 r91: [11..12]
 r92: [6..7]
 r93: [4..5]
Compressing live ranges: from 13 to 12 - 92%
Ranges after the compression:
 r87: [8..9]
 r88: [6..7]
 r89: [2..3]
 r90: [0..1]
 r91: [10..11]
 r92: [6..7]
 r93: [4..5]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=24, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=8, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 7
changing reg in insn 8
changing reg in insn 10
changing reg in insn 12
changing reg in insn 16
changing reg in insn 19
changing reg in insn 19
changing reg in insn 23
changing reg in insn 6
changing reg in insn 7
changing reg in insn 11
changing reg in insn 12
changing reg in insn 13
changing reg in insn 14
deleting insn with uid = 16.
deleting insn with uid = 19.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 9.
verify found no changes in insn with uid = 15.


RightLeftRotate

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={8d,8u} r1={4d,1u} r2={3d} r4={3d} r5={5d,3u} r6={1d,6u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={2d} r18={2d} r19={2d} r20={1d,1u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} 
;;    total ref usage 193{170d,23u,0e} in 13{11 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92 93
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [2 z+0 S8 A64])
        (reg:DI 5 di [ z ])) "test1.c":110 81 {*movdi_internal}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 0 ax [91])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [2 z+0 S8 A64])) "test1.c":111 81 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 0 ax [orig:87 _1 ] [87])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [91])
                (const_int 16 [0x10])) [2 z_4(D)->right+0 S8 A64])) "test1.c":111 81 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:87 _1 ] [87])) "test1.c":111 81 {*movdi_internal}
     (nil))
(call_insn 9 8 10 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rightRotate") [flags 0x3]  <function_decl 0x7fddd77ee300 rightRotate>) [0 rightRotate S1 A8])
            (const_int 0 [0]))) "test1.c":111 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 10 9 11 2 (set (reg/f:DI 1 dx [orig:88 _2 ] [88])
        (reg:DI 0 ax)) "test1.c":111 81 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg/f:DI 0 ax [92])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [2 z+0 S8 A64])) "test1.c":111 81 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (mem/f:DI (plus:DI (reg/f:DI 0 ax [92])
                (const_int 16 [0x10])) [2 z_4(D)->right+0 S8 A64])
        (reg/f:DI 1 dx [orig:88 _2 ] [88])) "test1.c":111 81 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 0 ax [93])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [2 z+0 S8 A64])) "test1.c":113 81 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [93])) "test1.c":113 81 {*movdi_internal}
     (nil))
(call_insn 15 14 23 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("leftRotate") [flags 0x3]  <function_decl 0x7fddd77ee500 leftRotate>) [0 leftRotate S1 A8])
            (const_int 0 [0]))) "test1.c":113 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 23 15 24 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 0 ax [orig:90 <retval> ] [90])) "test1.c":114 81 {*movdi_internal}
     (nil))
(insn 24 23 26 2 (use (reg/i:DI 0 ax)) "test1.c":114 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 26 24 0 NOTE_INSN_DELETED)

;; Function insert (insert, funcdef_no=15, decl_uid=2814, cgraph_uid=15, symbol_order=15)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=64, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=32, prev_offset=0)
Can eliminate 20 to 6 (offset=-16, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 7:  (0) ?mr {*cmpdi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 18:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) rm  (1) re {*cmpsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 23:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 24:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 30:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 31:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 36:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) rm  (1) re {*cmpsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 41:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 42:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 48:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 49:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 52:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 53:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 57:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 58:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 64:  (1) rBwBz {*call_value}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 66:  (0) r  (1) r  (2) le {*addsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 67:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 68:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 69:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 71:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 73:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 74:  (0) rm  (1) re {*cmpsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 77:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 78:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 79:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 80:  (0) rm  (1) re {*cmpsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 83:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 85:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 91:  (0) rm  (1) re {*cmpsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 94:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 95:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 96:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 97:  (0) rm  (1) re {*cmpsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 100:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 102:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 108:  (0) rm  (1) re {*cmpsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 111:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 112:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 113:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 114:  (0) rm  (1) re {*cmpsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 117:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 119:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 121:  (0) m  (1) re {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 124:  (0) rm  (1) re {*cmpsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 127:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 128:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 129:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 130:  (0) rm  (1) re {*cmpsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 133:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 135:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 137:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 140:  (0) r  (1) rem {*movdi_internal}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5
EBB 6
EBB 7
EBB 8
EBB 9
EBB 10
EBB 11
EBB 12
EBB 13
EBB 14
EBB 15
EBB 16
EBB 17
EBB 18
EBB 19
EBB 20
EBB 21

********** Pseudo live ranges #1: **********

  BB 21
   Insn 148: point = 0, n_alt = -1
   Insn 147: point = 0, n_alt = -2
   Insn 143: point = 1, n_alt = -2
  BB 13
   Insn 156: point = 4, n_alt = -1
   Insn 103: point = 4, n_alt = -2
   Insn 102: point = 5, n_alt = 0
   Insn 101: point = 5, n_alt = -2
   Insn 100: point = 6, n_alt = 3
  BB 10
   Insn 154: point = 7, n_alt = -1
   Insn 86: point = 7, n_alt = -2
   Insn 85: point = 8, n_alt = 0
   Insn 84: point = 8, n_alt = -2
   Insn 83: point = 9, n_alt = 3
  BB 3
   Insn 150: point = 10, n_alt = -1
   Insn 13: point = 10, n_alt = -2
   Insn 12: point = 11, n_alt = 0
   Insn 11: point = 11, n_alt = -2
   Insn 10: point = 12, n_alt = 0
  BB 20
   Insn 140: point = 13, n_alt = 3
  BB 19
   Insn 137: point = 14, n_alt = 5
   Insn 136: point = 15, n_alt = -2
   Insn 135: point = 16, n_alt = 0
   Insn 134: point = 16, n_alt = -2
   Insn 133: point = 17, n_alt = 3
  BB 18
   Insn 131: point = 18, n_alt = -1
   Insn 130: point = 18, n_alt = 0
   Insn 129: point = 19, n_alt = 0
   Insn 128: point = 21, n_alt = 3
   Insn 127: point = 23, n_alt = 3
  BB 17
   Insn 125: point = 24, n_alt = -1
   Insn 124: point = 24, n_alt = 0
  BB 16
   Insn 121: point = 24, n_alt = 5
   Insn 120: point = 25, n_alt = -2
   Insn 119: point = 26, n_alt = 0
   Insn 118: point = 26, n_alt = -2
   Insn 117: point = 27, n_alt = 3
  BB 15
   Insn 115: point = 28, n_alt = -1
   Insn 114: point = 28, n_alt = 0
   Insn 113: point = 29, n_alt = 0
   Insn 112: point = 31, n_alt = 3
   Insn 111: point = 33, n_alt = 3
  BB 14
   Insn 109: point = 34, n_alt = -1
   Insn 108: point = 34, n_alt = 0
  BB 12
   Insn 98: point = 34, n_alt = -1
   Insn 97: point = 34, n_alt = 0
   Insn 96: point = 35, n_alt = 0
   Insn 95: point = 37, n_alt = 3
   Insn 94: point = 39, n_alt = 3
  BB 11
   Insn 92: point = 40, n_alt = -1
   Insn 91: point = 40, n_alt = 0
  BB 9
   Insn 81: point = 40, n_alt = -1
   Insn 80: point = 40, n_alt = 0
   Insn 79: point = 41, n_alt = 0
   Insn 78: point = 43, n_alt = 3
   Insn 77: point = 45, n_alt = 3
  BB 8
   Insn 75: point = 46, n_alt = -1
   Insn 74: point = 46, n_alt = 0
   Insn 73: point = 46, n_alt = 1
   Insn 72: point = 47, n_alt = -2
   Insn 71: point = 48, n_alt = 0
   Insn 70: point = 48, n_alt = -2
   Insn 69: point = 49, n_alt = 3
   Insn 68: point = 50, n_alt = 1
   Insn 67: point = 51, n_alt = 3
   Insn 66: point = 52, n_alt = 3
   Insn 65: point = 54, n_alt = -2
   Insn 64: point = 55, n_alt = 0
   Insn 63: point = 55, n_alt = -2
   Insn 62: point = 56, n_alt = -2
   Insn 61: point = 57, n_alt = -2
   Insn 60: point = 58, n_alt = 0
   Insn 59: point = 58, n_alt = -2
   Insn 58: point = 59, n_alt = 3
   Insn 57: point = 61, n_alt = 3
   Insn 56: point = 62, n_alt = -2
   Insn 55: point = 63, n_alt = 0
   Insn 54: point = 63, n_alt = -2
   Insn 53: point = 64, n_alt = 3
   Insn 52: point = 66, n_alt = 3
  BB 5
   Insn 152: point = 67, n_alt = -1
   Insn 31: point = 67, n_alt = 5
   Insn 30: point = 68, n_alt = 3
   Insn 29: point = 69, n_alt = -2
   Insn 28: point = 70, n_alt = 0
   Insn 27: point = 70, n_alt = -2
   Insn 26: point = 71, n_alt = -2
   Insn 25: point = 72, n_alt = 0
   Insn 24: point = 73, n_alt = 3
   Insn 23: point = 75, n_alt = 3
  BB 7
   Insn 49: point = 76, n_alt = 5
   Insn 48: point = 77, n_alt = 3
   Insn 47: point = 78, n_alt = -2
   Insn 46: point = 79, n_alt = 0
   Insn 45: point = 79, n_alt = -2
   Insn 44: point = 80, n_alt = -2
   Insn 43: point = 81, n_alt = 0
   Insn 42: point = 82, n_alt = 3
   Insn 41: point = 84, n_alt = 3
  BB 6
   Insn 39: point = 85, n_alt = -1
   Insn 38: point = 85, n_alt = 0
   Insn 37: point = 86, n_alt = 0
   Insn 36: point = 88, n_alt = 3
  BB 4
   Insn 21: point = 89, n_alt = -1
   Insn 20: point = 89, n_alt = 0
   Insn 19: point = 90, n_alt = 0
   Insn 18: point = 92, n_alt = 3
  BB 2
   Insn 8: point = 93, n_alt = -1
   Insn 7: point = 93, n_alt = 1
   Insn 3: point = 93, n_alt = 1
   Insn 2: point = 93, n_alt = 5
 r87: [89..90]
 r88: [70..73]
 r89: [67..69]
 r90: [85..86]
 r91: [79..82]
 r92: [76..78]
 r93: [63..64]
 r94: [56..62]
 r95: [58..59]
 r96: [55..57]
 r97: [53..54]
 r98: [50..52]
 r99: [42..43]
 r100: [40..41]
 r101: [36..37]
 r102: [34..35]
 r103: [30..31]
 r104: [28..29]
 r105: [20..21]
 r106: [18..19]
 r107: [13..13] [10..10] [7..7] [2..4]
 r108: [0..1]
 r109: [11..12]
 r110: [91..92]
 r111: [74..75]
 r112: [71..72]
 r113: [67..68]
 r114: [87..88]
 r115: [83..84]
 r116: [80..81]
 r117: [76..77]
 r118: [65..66]
 r119: [60..61]
 r120: [50..51]
 r121: [48..49]
 r122: [46..47]
 r123: [44..45]
 r124: [8..9]
 r125: [38..39]
 r126: [5..6]
 r127: [32..33]
 r128: [26..27]
 r129: [24..25]
 r130: [22..23]
 r131: [16..17]
 r132: [14..15]
Compressing live ranges: from 93 to 83 - 89%
Ranges after the compression:
 r87: [79..80]
 r88: [65..66]
 r89: [63..64]
 r90: [75..76]
 r91: [71..72]
 r92: [69..70]
 r93: [59..60]
 r94: [53..58]
 r95: [55..56]
 r96: [53..54]
 r97: [51..52]
 r98: [49..50]
 r99: [41..42]
 r100: [39..40]
 r101: [35..36]
 r102: [33..34]
 r103: [29..30]
 r104: [27..28]
 r105: [19..20]
 r106: [17..18]
 r107: [12..12] [9..9] [6..6] [2..3]
 r108: [0..1]
 r109: [10..11]
 r110: [81..82]
 r111: [67..68]
 r112: [65..66]
 r113: [63..64]
 r114: [77..78]
 r115: [73..74]
 r116: [71..72]
 r117: [69..70]
 r118: [61..62]
 r119: [57..58]
 r120: [49..50]
 r121: [47..48]
 r122: [45..46]
 r123: [43..44]
 r124: [7..8]
 r125: [37..38]
 r126: [4..5]
 r127: [31..32]
 r128: [25..26]
 r129: [23..24]
 r130: [21..22]
 r131: [15..16]
 r132: [13..14]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=64, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=32, prev_offset=0)
Can eliminate 20 to 6 (offset=-16, prev_offset=-16)
changing reg in insn 19
changing reg in insn 20
changing reg in insn 24
changing reg in insn 27
changing reg in insn 29
changing reg in insn 31
changing reg in insn 37
changing reg in insn 38
changing reg in insn 42
changing reg in insn 45
changing reg in insn 47
changing reg in insn 49
changing reg in insn 53
changing reg in insn 54
changing reg in insn 56
changing reg in insn 62
changing reg in insn 58
changing reg in insn 59
changing reg in insn 61
changing reg in insn 63
changing reg in insn 65
changing reg in insn 66
changing reg in insn 66
changing reg in insn 68
changing reg in insn 78
changing reg in insn 79
changing reg in insn 79
changing reg in insn 80
changing reg in insn 95
changing reg in insn 96
changing reg in insn 96
changing reg in insn 97
changing reg in insn 112
changing reg in insn 113
changing reg in insn 113
changing reg in insn 114
changing reg in insn 128
changing reg in insn 129
changing reg in insn 129
changing reg in insn 130
changing reg in insn 140
changing reg in insn 103
changing reg in insn 86
changing reg in insn 13
changing reg in insn 143
changing reg in insn 143
changing reg in insn 147
changing reg in insn 10
changing reg in insn 11
changing reg in insn 18
changing reg in insn 19
changing reg in insn 23
changing reg in insn 24
changing reg in insn 25
changing reg in insn 26
changing reg in insn 30
changing reg in insn 31
changing reg in insn 36
changing reg in insn 37
changing reg in insn 41
changing reg in insn 42
changing reg in insn 43
changing reg in insn 44
changing reg in insn 48
changing reg in insn 49
changing reg in insn 52
changing reg in insn 53
changing reg in insn 57
changing reg in insn 58
changing reg in insn 67
changing reg in insn 68
changing reg in insn 69
changing reg in insn 70
changing reg in insn 72
changing reg in insn 73
changing reg in insn 77
changing reg in insn 78
changing reg in insn 83
changing reg in insn 84
changing reg in insn 94
changing reg in insn 95
changing reg in insn 100
changing reg in insn 101
changing reg in insn 111
changing reg in insn 112
changing reg in insn 117
changing reg in insn 118
changing reg in insn 120
changing reg in insn 121
changing reg in insn 127
changing reg in insn 128
changing reg in insn 133
changing reg in insn 134
changing reg in insn 136
changing reg in insn 137
deleting insn with uid = 13.
deleting insn with uid = 61.
deleting insn with uid = 65.
deleting insn with uid = 72.
deleting insn with uid = 86.
deleting insn with uid = 103.
deleting insn with uid = 120.
deleting insn with uid = 136.
deleting insn with uid = 143.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 12.
verify found no changes in insn with uid = 28.
verify found no changes in insn with uid = 46.
verify found no changes in insn with uid = 55.
verify found no changes in insn with uid = 60.
verify found no changes in insn with uid = 64.
verify found no changes in insn with uid = 71.
verify found no changes in insn with uid = 85.
verify found no changes in insn with uid = 102.
verify found no changes in insn with uid = 119.
verify found no changes in insn with uid = 135.


insert

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={47d,44u} r1={17d,5u} r2={12d} r3={1d,1u} r4={15d,4u} r5={23d,12u} r6={1d,59u} r7={1d,32u} r8={11d} r9={11d} r10={11d} r11={11d} r12={11d} r13={11d} r14={11d} r15={11d} r17={23d,11u} r18={11d} r19={11d} r20={1d,1u} r21={12d} r22={12d} r23={12d} r24={12d} r25={12d} r26={12d} r27={12d} r28={12d} r29={11d} r30={11d} r31={11d} r32={11d} r33={11d} r34={11d} r35={11d} r36={11d} r37={12d} r38={12d} r39={11d} r40={11d} r45={11d} r46={11d} r47={11d} r48={11d} r49={11d} r50={11d} r51={11d} r52={11d} r53={11d} r54={11d} r55={11d} r56={11d} r57={11d} r58={11d} r59={11d} r60={11d} r61={11d} r62={11d} r63={11d} r64={11d} r65={11d} r66={11d} r67={11d} r68={11d} r69={11d} r70={11d} r71={11d} r72={11d} r73={11d} r74={11d} r75={11d} r76={11d} r77={11d} r78={11d} r79={11d} r80={11d} 
;;    total ref usage 1046{877d,169u,0e} in 101{90 regular + 11 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 node+0 S8 A64])
        (reg:DI 5 di [ node ])) "test1.c":117 81 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 key+0 S4 A32])
        (reg:SI 4 si [ key ])) "test1.c":117 82 {*movsi_internal}
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                    (const_int -40 [0xffffffffffffffd8])) [2 node+0 S8 A64])
            (const_int 0 [0]))) "test1.c":118 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 16)
            (pc))) "test1.c":118 627 {*jcc_1}
     (nil)
 -> 16)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 107 109
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg:SI 0 ax [109])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 key+0 S4 A32])) "test1.c":119 82 {*movsi_internal}
     (nil))
(insn 11 10 12 3 (set (reg:SI 5 di)
        (reg:SI 0 ax [109])) "test1.c":119 82 {*movsi_internal}
     (nil))
(call_insn 12 11 150 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("newNode") [flags 0x3]  <function_decl 0x7fddd77ea900 newNode>) [0 newNode S1 A8])
            (const_int 0 [0]))) "test1.c":119 676 {*call_value}
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(jump_insn 150 12 151 3 (set (pc)
        (label_ref 141)) "test1.c":119 659 {jump}
     (nil)
 -> 141)
;;  succ:       21 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107

(barrier 151 150 16)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 110
(code_label 16 151 17 4 31 (nil) [1 uses])
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 4 (set (reg/f:DI 0 ax [110])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 node+0 S8 A64])) "test1.c":123 81 {*movdi_internal}
     (nil))
(insn 19 18 20 4 (set (reg:SI 0 ax [orig:87 _1 ] [87])
        (mem:SI (reg/f:DI 0 ax [110]) [1 node_28(D)->key+0 S4 A64])) "test1.c":123 82 {*movsi_internal}
     (nil))
(insn 20 19 21 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -44 [0xffffffffffffffd4])) [1 key+0 S4 A32])
            (reg:SI 0 ax [orig:87 _1 ] [87]))) "test1.c":123 7 {*cmpsi_1}
     (nil))
(jump_insn 21 20 22 4 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 34)
            (pc))) "test1.c":123 627 {*jcc_1}
     (nil)
 -> 34)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 89 111 112 113
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 5 (set (reg/f:DI 0 ax [111])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 node+0 S8 A64])) "test1.c":125 81 {*movdi_internal}
     (nil))
(insn 24 23 25 5 (set (reg/f:DI 0 ax [orig:88 _2 ] [88])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [111])
                (const_int 8 [0x8])) [2 node_28(D)->left+0 S8 A64])) "test1.c":125 81 {*movdi_internal}
     (nil))
(insn 25 24 26 5 (set (reg:SI 1 dx [112])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 key+0 S4 A32])) "test1.c":125 82 {*movsi_internal}
     (nil))
(insn 26 25 27 5 (set (reg:SI 4 si)
        (reg:SI 1 dx [112])) "test1.c":125 82 {*movsi_internal}
     (nil))
(insn 27 26 28 5 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:88 _2 ] [88])) "test1.c":125 81 {*movdi_internal}
     (nil))
(call_insn 28 27 29 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("insert") [flags 0x3]  <function_decl 0x7fddd77eeb00 insert>) [0 insert S1 A8])
            (const_int 0 [0]))) "test1.c":125 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 29 28 30 5 (set (reg/f:DI 1 dx [orig:89 _3 ] [89])
        (reg:DI 0 ax)) "test1.c":125 81 {*movdi_internal}
     (nil))
(insn 30 29 31 5 (set (reg/f:DI 0 ax [113])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 node+0 S8 A64])) "test1.c":124 81 {*movdi_internal}
     (nil))
(insn 31 30 152 5 (set (mem/f:DI (plus:DI (reg/f:DI 0 ax [113])
                (const_int 8 [0x8])) [2 node_28(D)->left+0 S8 A64])
        (reg/f:DI 1 dx [orig:89 _3 ] [89])) "test1.c":124 81 {*movdi_internal}
     (nil))
(jump_insn 152 31 153 5 (set (pc)
        (label_ref 50)) 659 {jump}
     (nil)
 -> 50)
;;  succ:       8 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 153 152 34)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 90 114
(code_label 34 153 35 6 33 (nil) [1 uses])
(note 35 34 36 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 6 (set (reg/f:DI 0 ax [114])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 node+0 S8 A64])) "test1.c":126 81 {*movdi_internal}
     (nil))
(insn 37 36 38 6 (set (reg:SI 0 ax [orig:90 _4 ] [90])
        (mem:SI (reg/f:DI 0 ax [114]) [1 node_28(D)->key+0 S4 A64])) "test1.c":126 82 {*movsi_internal}
     (nil))
(insn 38 37 39 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -44 [0xffffffffffffffd4])) [1 key+0 S4 A32])
            (reg:SI 0 ax [orig:90 _4 ] [90]))) "test1.c":126 7 {*cmpsi_1}
     (nil))
(jump_insn 39 38 40 6 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 50)
            (pc))) "test1.c":126 627 {*jcc_1}
     (nil)
 -> 50)
;;  succ:       7 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 91 92 115 116 117
(note 40 39 41 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 7 (set (reg/f:DI 0 ax [115])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 node+0 S8 A64])) "test1.c":128 81 {*movdi_internal}
     (nil))
(insn 42 41 43 7 (set (reg/f:DI 0 ax [orig:91 _5 ] [91])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [115])
                (const_int 16 [0x10])) [2 node_28(D)->right+0 S8 A64])) "test1.c":128 81 {*movdi_internal}
     (nil))
(insn 43 42 44 7 (set (reg:SI 1 dx [116])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 key+0 S4 A32])) "test1.c":128 82 {*movsi_internal}
     (nil))
(insn 44 43 45 7 (set (reg:SI 4 si)
        (reg:SI 1 dx [116])) "test1.c":128 82 {*movsi_internal}
     (nil))
(insn 45 44 46 7 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:91 _5 ] [91])) "test1.c":128 81 {*movdi_internal}
     (nil))
(call_insn 46 45 47 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("insert") [flags 0x3]  <function_decl 0x7fddd77eeb00 insert>) [0 insert S1 A8])
            (const_int 0 [0]))) "test1.c":128 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 47 46 48 7 (set (reg/f:DI 1 dx [orig:92 _6 ] [92])
        (reg:DI 0 ax)) "test1.c":128 81 {*movdi_internal}
     (nil))
(insn 48 47 49 7 (set (reg/f:DI 0 ax [117])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 node+0 S8 A64])) "test1.c":127 81 {*movdi_internal}
     (nil))
(insn 49 48 50 7 (set (mem/f:DI (plus:DI (reg/f:DI 0 ax [117])
                (const_int 16 [0x10])) [2 node_28(D)->right+0 S8 A64])
        (reg/f:DI 1 dx [orig:92 _6 ] [92])) "test1.c":127 81 {*movdi_internal}
     (nil))
;;  succ:       8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;;              6
;;              5 [100.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 93 94 95 96 97 98 118 119 120 121 122
(code_label 50 49 51 8 34 (nil) [2 uses])
(note 51 50 52 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 8 (set (reg/f:DI 0 ax [118])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 node+0 S8 A64])) "test1.c":131 81 {*movdi_internal}
     (nil))
(insn 53 52 54 8 (set (reg/f:DI 0 ax [orig:93 _7 ] [93])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [118])
                (const_int 16 [0x10])) [2 node_28(D)->right+0 S8 A64])) "test1.c":131 81 {*movdi_internal}
     (nil))
(insn 54 53 55 8 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:93 _7 ] [93])) "test1.c":131 81 {*movdi_internal}
     (nil))
(call_insn 55 54 56 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("nodeHeight") [flags 0x3]  <function_decl 0x7fddd77eab00 nodeHeight>) [0 nodeHeight S1 A8])
            (const_int 0 [0]))) "test1.c":131 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 56 55 57 8 (set (reg:SI 3 bx [orig:94 _8 ] [94])
        (reg:SI 0 ax)) "test1.c":131 82 {*movsi_internal}
     (nil))
(insn 57 56 58 8 (set (reg/f:DI 0 ax [119])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 node+0 S8 A64])) "test1.c":131 81 {*movdi_internal}
     (nil))
(insn 58 57 59 8 (set (reg/f:DI 0 ax [orig:95 _9 ] [95])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [119])
                (const_int 8 [0x8])) [2 node_28(D)->left+0 S8 A64])) "test1.c":131 81 {*movdi_internal}
     (nil))
(insn 59 58 60 8 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:95 _9 ] [95])) "test1.c":131 81 {*movdi_internal}
     (nil))
(call_insn 60 59 62 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("nodeHeight") [flags 0x3]  <function_decl 0x7fddd77eab00 nodeHeight>) [0 nodeHeight S1 A8])
            (const_int 0 [0]))) "test1.c":131 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 62 60 63 8 (set (reg:SI 4 si)
        (reg:SI 3 bx [orig:94 _8 ] [94])) "test1.c":131 82 {*movsi_internal}
     (nil))
(insn 63 62 64 8 (set (reg:SI 5 di)
        (reg:SI 0 ax [orig:96 _10 ] [96])) "test1.c":131 82 {*movsi_internal}
     (nil))
(call_insn 64 63 66 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("max") [flags 0x3]  <function_decl 0x7fddd77ea700 max>) [0 max S1 A8])
            (const_int 0 [0]))) "test1.c":131 676 {*call_value}
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 66 64 67 8 (parallel [
            (set (reg:SI 1 dx [orig:98 _12 ] [98])
                (plus:SI (reg:SI 0 ax [orig:97 _11 ] [97])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":131 217 {*addsi_1}
     (nil))
(insn 67 66 68 8 (set (reg/f:DI 0 ax [120])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 node+0 S8 A64])) "test1.c":131 81 {*movdi_internal}
     (nil))
(insn 68 67 69 8 (set (mem:SI (plus:DI (reg/f:DI 0 ax [120])
                (const_int 24 [0x18])) [1 node_28(D)->height+0 S4 A64])
        (reg:SI 1 dx [orig:98 _12 ] [98])) "test1.c":131 82 {*movsi_internal}
     (nil))
(insn 69 68 70 8 (set (reg:DI 0 ax [121])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 node+0 S8 A64])) "test1.c":134 81 {*movdi_internal}
     (nil))
(insn 70 69 71 8 (set (reg:DI 5 di)
        (reg:DI 0 ax [121])) "test1.c":134 81 {*movdi_internal}
     (nil))
(call_insn 71 70 73 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("heightDiff") [flags 0x3]  <function_decl 0x7fddd77ead00 heightDiff>) [0 heightDiff S1 A8])
            (const_int 0 [0]))) "test1.c":134 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 73 71 74 8 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 balance+0 S4 A32])
        (reg:SI 0 ax [122])) "test1.c":134 82 {*movsi_internal}
     (nil))
(insn 74 73 75 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20 [0xffffffffffffffec])) [1 balance+0 S4 A32])
            (const_int 1 [0x1]))) "test1.c":137 7 {*cmpsi_1}
     (nil))
(jump_insn 75 74 76 8 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 89)
            (pc))) "test1.c":137 627 {*jcc_1}
     (nil)
 -> 89)
;;  succ:       9 (FALLTHRU)
;;              11
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 99 100 123
(note 76 75 77 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 9 (set (reg/f:DI 0 ax [123])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 node+0 S8 A64])) "test1.c":137 81 {*movdi_internal}
     (nil))
(insn 78 77 79 9 (set (reg/f:DI 0 ax [orig:99 _13 ] [99])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [123])
                (const_int 8 [0x8])) [2 node_28(D)->left+0 S8 A64])) "test1.c":137 81 {*movdi_internal}
     (nil))
(insn 79 78 80 9 (set (reg:SI 0 ax [orig:100 _14 ] [100])
        (mem:SI (reg/f:DI 0 ax [orig:99 _13 ] [99]) [1 _13->key+0 S4 A64])) "test1.c":137 82 {*movsi_internal}
     (nil))
(insn 80 79 81 9 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -44 [0xffffffffffffffd4])) [1 key+0 S4 A32])
            (reg:SI 0 ax [orig:100 _14 ] [100]))) "test1.c":137 7 {*cmpsi_1}
     (nil))
(jump_insn 81 80 82 9 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 89)
            (pc))) "test1.c":137 627 {*jcc_1}
     (nil)
 -> 89)
;;  succ:       10 (FALLTHRU)
;;              11
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 107 124
(note 82 81 83 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 10 (set (reg:DI 0 ax [124])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 node+0 S8 A64])) "test1.c":138 81 {*movdi_internal}
     (nil))
(insn 84 83 85 10 (set (reg:DI 5 di)
        (reg:DI 0 ax [124])) "test1.c":138 81 {*movdi_internal}
     (nil))
(call_insn 85 84 154 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rightRotate") [flags 0x3]  <function_decl 0x7fddd77ee300 rightRotate>) [0 rightRotate S1 A8])
            (const_int 0 [0]))) "test1.c":138 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 154 85 155 10 (set (pc)
        (label_ref 141)) "test1.c":138 659 {jump}
     (nil)
 -> 141)
;;  succ:       21 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107

(barrier 155 154 89)
;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL, MODIFIED)
;;  pred:       8
;;              9
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 89 155 90 11 35 (nil) [2 uses])
(note 90 89 91 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 92 11 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20 [0xffffffffffffffec])) [1 balance+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))) "test1.c":141 7 {*cmpsi_1}
     (nil))
(jump_insn 92 91 93 11 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 106)
            (pc))) "test1.c":141 627 {*jcc_1}
     (nil)
 -> 106)
;;  succ:       12 (FALLTHRU)
;;              14
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 101 102 125
(note 93 92 94 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 94 93 95 12 (set (reg/f:DI 0 ax [125])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 node+0 S8 A64])) "test1.c":141 81 {*movdi_internal}
     (nil))
(insn 95 94 96 12 (set (reg/f:DI 0 ax [orig:101 _15 ] [101])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [125])
                (const_int 16 [0x10])) [2 node_28(D)->right+0 S8 A64])) "test1.c":141 81 {*movdi_internal}
     (nil))
(insn 96 95 97 12 (set (reg:SI 0 ax [orig:102 _16 ] [102])
        (mem:SI (reg/f:DI 0 ax [orig:101 _15 ] [101]) [1 _15->key+0 S4 A64])) "test1.c":141 82 {*movsi_internal}
     (nil))
(insn 97 96 98 12 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -44 [0xffffffffffffffd4])) [1 key+0 S4 A32])
            (reg:SI 0 ax [orig:102 _16 ] [102]))) "test1.c":141 7 {*cmpsi_1}
     (nil))
(jump_insn 98 97 99 12 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 106)
            (pc))) "test1.c":141 627 {*jcc_1}
     (nil)
 -> 106)
;;  succ:       13 (FALLTHRU)
;;              14
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 107 126
(note 99 98 100 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 100 99 101 13 (set (reg:DI 0 ax [126])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 node+0 S8 A64])) "test1.c":142 81 {*movdi_internal}
     (nil))
(insn 101 100 102 13 (set (reg:DI 5 di)
        (reg:DI 0 ax [126])) "test1.c":142 81 {*movdi_internal}
     (nil))
(call_insn 102 101 156 13 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("leftRotate") [flags 0x3]  <function_decl 0x7fddd77ee500 leftRotate>) [0 leftRotate S1 A8])
            (const_int 0 [0]))) "test1.c":142 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 156 102 157 13 (set (pc)
        (label_ref 141)) "test1.c":142 659 {jump}
     (nil)
 -> 141)
;;  succ:       21 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107

(barrier 157 156 106)
;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (RTL, MODIFIED)
;;  pred:       11
;;              12
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 106 157 107 14 36 (nil) [2 uses])
(note 107 106 108 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 108 107 109 14 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20 [0xffffffffffffffec])) [1 balance+0 S4 A32])
            (const_int 1 [0x1]))) "test1.c":145 7 {*cmpsi_1}
     (nil))
(jump_insn 109 108 110 14 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 122)
            (pc))) "test1.c":145 627 {*jcc_1}
     (nil)
 -> 122)
;;  succ:       15 (FALLTHRU)
;;              17
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 103 104 127
(note 110 109 111 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 112 15 (set (reg/f:DI 0 ax [127])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 node+0 S8 A64])) "test1.c":145 81 {*movdi_internal}
     (nil))
(insn 112 111 113 15 (set (reg/f:DI 0 ax [orig:103 _17 ] [103])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [127])
                (const_int 8 [0x8])) [2 node_28(D)->left+0 S8 A64])) "test1.c":145 81 {*movdi_internal}
     (nil))
(insn 113 112 114 15 (set (reg:SI 0 ax [orig:104 _18 ] [104])
        (mem:SI (reg/f:DI 0 ax [orig:103 _17 ] [103]) [1 _17->key+0 S4 A64])) "test1.c":145 82 {*movsi_internal}
     (nil))
(insn 114 113 115 15 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -44 [0xffffffffffffffd4])) [1 key+0 S4 A32])
            (reg:SI 0 ax [orig:104 _18 ] [104]))) "test1.c":145 7 {*cmpsi_1}
     (nil))
(jump_insn 115 114 116 15 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 122)
            (pc))) "test1.c":145 627 {*jcc_1}
     (nil)
 -> 122)
;;  succ:       16 (FALLTHRU)
;;              17
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (RTL, MODIFIED)
;;  pred:       15 (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 128 129
(note 116 115 117 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 117 116 118 16 (set (reg:DI 0 ax [128])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 node+0 S8 A64])) "test1.c":147 81 {*movdi_internal}
     (nil))
(insn 118 117 119 16 (set (reg:DI 5 di)
        (reg:DI 0 ax [128])) "test1.c":147 81 {*movdi_internal}
     (nil))
(call_insn 119 118 121 16 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("LeftRightRotate") [flags 0x3]  <function_decl 0x7fddd77ee700 LeftRightRotate>) [0 LeftRightRotate S1 A8])
            (const_int 0 [0]))) "test1.c":147 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 121 119 122 16 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 node+0 S8 A64])
        (reg:DI 0 ax [129])) "test1.c":147 81 {*movdi_internal}
     (nil))
;;  succ:       17 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (RTL, MODIFIED)
;;  pred:       14
;;              15
;;              16 (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 122 121 123 17 37 (nil) [2 uses])
(note 123 122 124 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 124 123 125 17 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20 [0xffffffffffffffec])) [1 balance+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))) "test1.c":151 7 {*cmpsi_1}
     (nil))
(jump_insn 125 124 126 17 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 138)
            (pc))) "test1.c":151 627 {*jcc_1}
     (nil)
 -> 138)
;;  succ:       18 (FALLTHRU)
;;              20
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (RTL, MODIFIED)
;;  pred:       17 (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 105 106 130
(note 126 125 127 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 127 126 128 18 (set (reg/f:DI 0 ax [130])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 node+0 S8 A64])) "test1.c":151 81 {*movdi_internal}
     (nil))
(insn 128 127 129 18 (set (reg/f:DI 0 ax [orig:105 _19 ] [105])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [130])
                (const_int 16 [0x10])) [2 node_21->right+0 S8 A64])) "test1.c":151 81 {*movdi_internal}
     (nil))
(insn 129 128 130 18 (set (reg:SI 0 ax [orig:106 _20 ] [106])
        (mem:SI (reg/f:DI 0 ax [orig:105 _19 ] [105]) [1 _19->key+0 S4 A64])) "test1.c":151 82 {*movsi_internal}
     (nil))
(insn 130 129 131 18 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -44 [0xffffffffffffffd4])) [1 key+0 S4 A32])
            (reg:SI 0 ax [orig:106 _20 ] [106]))) "test1.c":151 7 {*cmpsi_1}
     (nil))
(jump_insn 131 130 132 18 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 138)
            (pc))) "test1.c":151 627 {*jcc_1}
     (nil)
 -> 138)
;;  succ:       19 (FALLTHRU)
;;              20
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (RTL, MODIFIED)
;;  pred:       18 (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 131 132
(note 132 131 133 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 133 132 134 19 (set (reg:DI 0 ax [131])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 node+0 S8 A64])) "test1.c":153 81 {*movdi_internal}
     (nil))
(insn 134 133 135 19 (set (reg:DI 5 di)
        (reg:DI 0 ax [131])) "test1.c":153 81 {*movdi_internal}
     (nil))
(call_insn 135 134 137 19 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("RightLeftRotate") [flags 0x3]  <function_decl 0x7fddd77ee900 RightLeftRotate>) [0 RightLeftRotate S1 A8])
            (const_int 0 [0]))) "test1.c":153 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 137 135 138 19 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 node+0 S8 A64])
        (reg:DI 0 ax [132])) "test1.c":153 81 {*movdi_internal}
     (nil))
;;  succ:       20 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (RTL, MODIFIED)
;;  pred:       17
;;              18
;;              19 (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 107
(code_label 138 137 139 20 38 (nil) [2 uses])
(note 139 138 140 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 140 139 141 20 (set (reg/f:DI 0 ax [orig:107 _23 ] [107])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 node+0 S8 A64])) "test1.c":156 81 {*movdi_internal}
     (nil))
;;  succ:       21 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107

;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 1, flags: (RTL, MODIFIED)
;;  pred:       20 (FALLTHRU)
;;              3 [100.0%] 
;;              10 [100.0%] 
;;              13 [100.0%] 
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107
;; lr  def 	 0 [ax] 108
(code_label 141 140 142 21 32 (nil) [3 uses])
(note 142 141 147 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 147 142 148 21 (set (reg/i:DI 0 ax)
        (reg/f:DI 0 ax [orig:108 <retval> ] [108])) "test1.c":157 81 {*movdi_internal}
     (nil))
(insn 148 147 158 21 (use (reg/i:DI 0 ax)) "test1.c":157 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 158 148 0 NOTE_INSN_DELETED)

;; Function delete (delete, funcdef_no=16, decl_uid=2819, cgraph_uid=16, symbol_order=16)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=80, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=48, prev_offset=0)
Can eliminate 20 to 6 (offset=-16, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 7:  (0) ?mr {*cmpdi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 10:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 15:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) rm  (1) re {*cmpsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 20:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 21:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 27:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 28:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 33:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) rm  (1) re {*cmpsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 38:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 39:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 45:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 46:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 51:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 52:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 53:  (0) r {*cmpdi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 56:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 57:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (0) r {*cmpdi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 62:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 63:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 64:  (0) r {*cmpdi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 67:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 68:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 73:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 74:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 77:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 78:  (0) ?mr {*cmpdi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 81:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 82:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 83:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 88:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 89:  (0) r  (1) rem {*movdi_internal}
            Staticly defined alt reject+=600
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 90:  (0) =!r  (1) riFo {*movti_internal}
            Staticly defined alt reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=1209,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 91:  (0) o  (1) re {*movti_internal}
            Staticly defined alt reject+=600
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 92:  (0) =!r  (1) riFo {*movti_internal}
            Staticly defined alt reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=1209,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 93:  (0) o  (1) re {*movti_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 96:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 98:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 103:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 104:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 106:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 108:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 109:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 110:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 111:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 112:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 113:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 114:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 115:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 116:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 119:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 121:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 122:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 125:  (0) ?mr {*cmpdi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 128:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 133:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 134:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 136:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 138:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 139:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 141:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 145:  (1) rBwBz {*call_value}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 147:  (0) r  (1) r  (2) le {*addsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 148:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 149:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 150:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 152:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 154:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 155:  (0) rm  (1) re {*cmpsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 158:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 159:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 161:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 163:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 166:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 168:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 174:  (0) rm  (1) re {*cmpsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 177:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 178:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 180:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 182:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 185:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 187:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 189:  (0) m  (1) re {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 192:  (0) rm  (1) re {*cmpsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 195:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 196:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 198:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 200:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 203:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 205:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 211:  (0) rm  (1) re {*cmpsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 214:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 215:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 217:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 219:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 222:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 224:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 226:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 229:  (0) r  (1) rem {*movdi_internal}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5
EBB 6
EBB 7
EBB 8
EBB 9
EBB 10
EBB 11
EBB 12
EBB 13
EBB 14
EBB 15
EBB 16
EBB 17
EBB 18
EBB 19
EBB 20
EBB 21
EBB 22
EBB 23
EBB 24
EBB 25
EBB 26
EBB 27
EBB 28
EBB 29
EBB 30
EBB 31
EBB 32
EBB 33

********** Pseudo live ranges #1: **********

  BB 33
   Insn 237: point = 0, n_alt = -1
   Insn 236: point = 0, n_alt = -2
   Insn 232: point = 1, n_alt = -2
  BB 28
   Insn 255: point = 4, n_alt = -1
   Insn 206: point = 4, n_alt = -2
   Insn 205: point = 5, n_alt = 0
   Insn 204: point = 5, n_alt = -2
   Insn 203: point = 6, n_alt = 3
  BB 22
   Insn 253: point = 7, n_alt = -1
   Insn 169: point = 7, n_alt = -2
   Insn 168: point = 8, n_alt = 0
   Insn 167: point = 8, n_alt = -2
   Insn 166: point = 9, n_alt = 3
  BB 19
   Insn 251: point = 10, n_alt = -1
   Insn 128: point = 10, n_alt = 3
  BB 3
   Insn 239: point = 11, n_alt = -1
   Insn 10: point = 11, n_alt = 3
  BB 32
   Insn 229: point = 12, n_alt = 3
  BB 31
   Insn 226: point = 13, n_alt = 5
   Insn 225: point = 14, n_alt = -2
   Insn 224: point = 15, n_alt = 0
   Insn 223: point = 15, n_alt = -2
   Insn 222: point = 16, n_alt = 3
  BB 30
   Insn 220: point = 17, n_alt = -1
   Insn 219: point = 17, n_alt = 0
   Insn 218: point = 18, n_alt = -2
   Insn 217: point = 19, n_alt = 0
   Insn 216: point = 19, n_alt = -2
   Insn 215: point = 20, n_alt = 3
   Insn 214: point = 22, n_alt = 3
  BB 29
   Insn 212: point = 23, n_alt = -1
   Insn 211: point = 23, n_alt = 0
  BB 27
   Insn 201: point = 23, n_alt = -1
   Insn 200: point = 23, n_alt = 0
   Insn 199: point = 24, n_alt = -2
   Insn 198: point = 25, n_alt = 0
   Insn 197: point = 25, n_alt = -2
   Insn 196: point = 26, n_alt = 3
   Insn 195: point = 28, n_alt = 3
  BB 26
   Insn 193: point = 29, n_alt = -1
   Insn 192: point = 29, n_alt = 0
  BB 25
   Insn 189: point = 29, n_alt = 5
   Insn 188: point = 30, n_alt = -2
   Insn 187: point = 31, n_alt = 0
   Insn 186: point = 31, n_alt = -2
   Insn 185: point = 32, n_alt = 3
  BB 24
   Insn 183: point = 33, n_alt = -1
   Insn 182: point = 33, n_alt = 0
   Insn 181: point = 34, n_alt = -2
   Insn 180: point = 35, n_alt = 0
   Insn 179: point = 35, n_alt = -2
   Insn 178: point = 36, n_alt = 3
   Insn 177: point = 38, n_alt = 3
  BB 23
   Insn 175: point = 39, n_alt = -1
   Insn 174: point = 39, n_alt = 0
  BB 21
   Insn 164: point = 39, n_alt = -1
   Insn 163: point = 39, n_alt = 0
   Insn 162: point = 40, n_alt = -2
   Insn 161: point = 41, n_alt = 0
   Insn 160: point = 41, n_alt = -2
   Insn 159: point = 42, n_alt = 3
   Insn 158: point = 44, n_alt = 3
  BB 20
   Insn 156: point = 45, n_alt = -1
   Insn 155: point = 45, n_alt = 0
   Insn 154: point = 45, n_alt = 1
   Insn 153: point = 46, n_alt = -2
   Insn 152: point = 47, n_alt = 0
   Insn 151: point = 47, n_alt = -2
   Insn 150: point = 48, n_alt = 3
   Insn 149: point = 49, n_alt = 1
   Insn 148: point = 50, n_alt = 3
   Insn 147: point = 51, n_alt = 3
   Insn 146: point = 53, n_alt = -2
   Insn 145: point = 54, n_alt = 0
   Insn 144: point = 54, n_alt = -2
   Insn 143: point = 55, n_alt = -2
   Insn 142: point = 56, n_alt = -2
   Insn 141: point = 57, n_alt = 0
   Insn 140: point = 57, n_alt = -2
   Insn 139: point = 58, n_alt = 3
   Insn 138: point = 60, n_alt = 3
   Insn 137: point = 61, n_alt = -2
   Insn 136: point = 62, n_alt = 0
   Insn 135: point = 62, n_alt = -2
   Insn 134: point = 63, n_alt = 3
   Insn 133: point = 65, n_alt = 3
  BB 18
   Insn 126: point = 66, n_alt = -1
   Insn 125: point = 66, n_alt = 1
  BB 16
   Insn 249: point = 66, n_alt = -1
   Insn 98: point = 66, n_alt = 0
   Insn 97: point = 66, n_alt = -2
   Insn 96: point = 67, n_alt = 3
  BB 14
   Insn 247: point = 68, n_alt = -1
   Insn 83: point = 68, n_alt = 5
   Insn 82: point = 68, n_alt = 5
   Insn 81: point = 69, n_alt = 3
  BB 15
   Insn 93: point = 70, n_alt = 1
   Insn 92: point = 71, n_alt = 0
   Insn 91: point = 73, n_alt = 1
   Insn 90: point = 74, n_alt = 0
   Insn 89: point = 75, n_alt = 3
   Insn 88: point = 76, n_alt = 3
  BB 13
   Insn 79: point = 77, n_alt = -1
   Insn 78: point = 77, n_alt = 1
   Insn 77: point = 77, n_alt = 5
  BB 11
   Insn 245: point = 79, n_alt = -1
   Insn 68: point = 79, n_alt = 3
   Insn 67: point = 81, n_alt = 3
  BB 12
   Insn 74: point = 82, n_alt = 3
   Insn 73: point = 84, n_alt = 3
  BB 10
   Insn 65: point = 85, n_alt = -1
   Insn 64: point = 85, n_alt = 0
   Insn 63: point = 86, n_alt = 3
   Insn 62: point = 88, n_alt = 3
  BB 7
   Insn 243: point = 89, n_alt = -1
   Insn 46: point = 89, n_alt = 5
   Insn 45: point = 90, n_alt = 3
   Insn 44: point = 91, n_alt = -2
   Insn 43: point = 92, n_alt = 0
   Insn 42: point = 92, n_alt = -2
   Insn 41: point = 93, n_alt = -2
   Insn 40: point = 94, n_alt = 0
   Insn 39: point = 95, n_alt = 3
   Insn 38: point = 97, n_alt = 3
  BB 5
   Insn 241: point = 98, n_alt = -1
   Insn 28: point = 98, n_alt = 5
   Insn 27: point = 99, n_alt = 3
   Insn 26: point = 100, n_alt = -2
   Insn 25: point = 101, n_alt = 0
   Insn 24: point = 101, n_alt = -2
   Insn 23: point = 102, n_alt = -2
   Insn 22: point = 103, n_alt = 0
   Insn 21: point = 104, n_alt = 3
   Insn 20: point = 106, n_alt = 3
  BB 17
   Insn 122: point = 107, n_alt = 5
   Insn 121: point = 108, n_alt = 3
   Insn 120: point = 109, n_alt = -2
   Insn 119: point = 110, n_alt = 0
   Insn 118: point = 110, n_alt = -2
   Insn 117: point = 111, n_alt = -2
   Insn 116: point = 112, n_alt = 3
   Insn 115: point = 114, n_alt = 3
   Insn 114: point = 115, n_alt = 0
   Insn 113: point = 117, n_alt = 3
   Insn 112: point = 118, n_alt = 1
   Insn 111: point = 119, n_alt = 3
   Insn 110: point = 120, n_alt = 0
   Insn 109: point = 122, n_alt = 3
   Insn 108: point = 123, n_alt = 5
   Insn 107: point = 124, n_alt = -2
   Insn 106: point = 125, n_alt = 0
   Insn 105: point = 125, n_alt = -2
   Insn 104: point = 126, n_alt = 3
   Insn 103: point = 128, n_alt = 3
  BB 9
   Insn 59: point = 129, n_alt = -1
   Insn 58: point = 129, n_alt = 0
   Insn 57: point = 130, n_alt = 3
   Insn 56: point = 132, n_alt = 3
  BB 8
   Insn 54: point = 133, n_alt = -1
   Insn 53: point = 133, n_alt = 0
   Insn 52: point = 134, n_alt = 3
   Insn 51: point = 136, n_alt = 3
  BB 6
   Insn 36: point = 137, n_alt = -1
   Insn 35: point = 137, n_alt = 0
   Insn 34: point = 138, n_alt = 0
   Insn 33: point = 140, n_alt = 3
  BB 4
   Insn 18: point = 141, n_alt = -1
   Insn 17: point = 141, n_alt = 0
   Insn 16: point = 142, n_alt = 0
   Insn 15: point = 144, n_alt = 3
  BB 2
   Insn 8: point = 145, n_alt = -1
   Insn 7: point = 145, n_alt = 1
   Insn 3: point = 145, n_alt = 1
   Insn 2: point = 145, n_alt = 5
 r87: [141..142]
 r88: [101..104]
 r89: [98..100]
 r90: [137..138]
 r91: [92..95]
 r92: [89..91]
 r93: [133..134]
 r94: [129..130]
 r95: [85..86]
 r96: [125..126]
 r97: [118..120]
 r98: [111..115]
 r99: [110..112]
 r100: [107..109]
 r101: [62..63]
 r102: [55..61]
 r103: [57..58]
 r104: [54..56]
 r105: [52..53]
 r106: [49..51]
 r107: [41..42]
 r108: [39..40]
 r109: [35..36]
 r110: [33..34]
 r111: [25..26]
 r112: [23..24]
 r113: [19..20]
 r114: [17..18]
 r115: [10..12] [7..7] [2..4]
 r116: [82..82] [77..79]
 r117: [0..1]
 r118: [143..144]
 r119: [105..106]
 r120: [102..103]
 r121: [98..99]
 r122: [139..140]
 r123: [96..97]
 r124: [93..94]
 r125: [89..90]
 r126: [135..136]
 r127: [131..132]
 r128: [87..88]
 r129: [80..81]
 r130: [83..84]
 r131: [68..69]
 r132: [70..76]
 r133: [72..75]
 r134: [73..74]
 r135: [70..71]
 r136: [66..67]
 r137: [127..128]
 r138: [123..124]
 r139: [121..122]
 r140: [118..119]
 r141: [116..117]
 r142: [113..114]
 r143: [107..108]
 r144: [64..65]
 r145: [59..60]
 r146: [49..50]
 r147: [47..48]
 r148: [45..46]
 r149: [43..44]
 r150: [8..9]
 r151: [37..38]
 r152: [31..32]
 r153: [29..30]
 r154: [27..28]
 r155: [5..6]
 r156: [21..22]
 r157: [15..16]
 r158: [13..14]
Compressing live ranges: from 145 to 126 - 86%
Ranges after the compression:
 r87: [122..123]
 r88: [88..89]
 r89: [86..87]
 r90: [118..119]
 r91: [82..83]
 r92: [80..81]
 r93: [114..115]
 r94: [110..111]
 r95: [76..77]
 r96: [106..107]
 r97: [100..101]
 r98: [94..97]
 r99: [94..95]
 r100: [92..93]
 r101: [57..58]
 r102: [51..56]
 r103: [53..54]
 r104: [51..52]
 r105: [49..50]
 r106: [47..48]
 r107: [39..40]
 r108: [37..38]
 r109: [33..34]
 r110: [31..32]
 r111: [23..24]
 r112: [21..22]
 r113: [17..18]
 r114: [15..16]
 r115: [9..10] [6..6] [2..3]
 r116: [73..73] [69..70]
 r117: [0..1]
 r118: [124..125]
 r119: [90..91]
 r120: [88..89]
 r121: [86..87]
 r122: [120..121]
 r123: [84..85]
 r124: [82..83]
 r125: [80..81]
 r126: [116..117]
 r127: [112..113]
 r128: [78..79]
 r129: [71..72]
 r130: [74..75]
 r131: [63..64]
 r132: [65..68]
 r133: [67..68]
 r134: [67..68]
 r135: [65..66]
 r136: [61..62]
 r137: [108..109]
 r138: [104..105]
 r139: [102..103]
 r140: [100..101]
 r141: [98..99]
 r142: [96..97]
 r143: [92..93]
 r144: [59..60]
 r145: [55..56]
 r146: [47..48]
 r147: [45..46]
 r148: [43..44]
 r149: [41..42]
 r150: [7..8]
 r151: [35..36]
 r152: [29..30]
 r153: [27..28]
 r154: [25..26]
 r155: [4..5]
 r156: [19..20]
 r157: [13..14]
 r158: [11..12]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=80, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=48, prev_offset=0)
Can eliminate 20 to 6 (offset=-16, prev_offset=-16)
changing reg in insn 16
changing reg in insn 17
changing reg in insn 21
changing reg in insn 24
changing reg in insn 26
changing reg in insn 28
changing reg in insn 34
changing reg in insn 35
changing reg in insn 39
changing reg in insn 42
changing reg in insn 44
changing reg in insn 46
changing reg in insn 52
changing reg in insn 53
changing reg in insn 57
changing reg in insn 58
changing reg in insn 63
changing reg in insn 64
changing reg in insn 104
changing reg in insn 105
changing reg in insn 110
changing reg in insn 112
changing reg in insn 114
changing reg in insn 117
changing reg in insn 116
changing reg in insn 118
changing reg in insn 120
changing reg in insn 122
changing reg in insn 134
changing reg in insn 135
changing reg in insn 137
changing reg in insn 143
changing reg in insn 139
changing reg in insn 140
changing reg in insn 142
changing reg in insn 144
changing reg in insn 146
changing reg in insn 147
changing reg in insn 147
changing reg in insn 149
changing reg in insn 159
changing reg in insn 160
changing reg in insn 162
changing reg in insn 163
changing reg in insn 178
changing reg in insn 179
changing reg in insn 181
changing reg in insn 182
changing reg in insn 196
changing reg in insn 197
changing reg in insn 199
changing reg in insn 200
changing reg in insn 215
changing reg in insn 216
changing reg in insn 218
changing reg in insn 219
changing reg in insn 229
changing reg in insn 206
changing reg in insn 169
changing reg in insn 128
changing reg in insn 10
changing reg in insn 232
changing reg in insn 74
changing reg in insn 68
changing reg in insn 77
changing reg in insn 232
changing reg in insn 236
changing reg in insn 15
changing reg in insn 16
changing reg in insn 20
changing reg in insn 21
changing reg in insn 22
changing reg in insn 23
changing reg in insn 27
changing reg in insn 28
changing reg in insn 33
changing reg in insn 34
changing reg in insn 38
changing reg in insn 39
changing reg in insn 40
changing reg in insn 41
changing reg in insn 45
changing reg in insn 46
changing reg in insn 51
changing reg in insn 52
changing reg in insn 56
changing reg in insn 57
changing reg in insn 62
changing reg in insn 63
changing reg in insn 67
changing reg in insn 68
changing reg in insn 73
changing reg in insn 74
changing reg in insn 81
changing reg in insn 82
changing reg in insn 88
changing reg in insn 93
changing reg in insn 91
changing reg in insn 89
changing reg in insn 92
changing reg in insn 90
changing reg in insn 90
changing reg in insn 91
changing reg in insn 92
changing reg in insn 93
changing reg in insn 96
changing reg in insn 97
changing reg in insn 103
changing reg in insn 104
changing reg in insn 107
changing reg in insn 108
changing reg in insn 109
changing reg in insn 110
changing reg in insn 111
changing reg in insn 112
changing reg in insn 113
changing reg in insn 114
changing reg in insn 115
changing reg in insn 116
changing reg in insn 121
changing reg in insn 122
changing reg in insn 133
changing reg in insn 134
changing reg in insn 138
changing reg in insn 139
changing reg in insn 148
changing reg in insn 149
changing reg in insn 150
changing reg in insn 151
changing reg in insn 153
changing reg in insn 154
changing reg in insn 158
changing reg in insn 159
changing reg in insn 166
changing reg in insn 167
changing reg in insn 177
changing reg in insn 178
changing reg in insn 185
changing reg in insn 186
changing reg in insn 188
changing reg in insn 189
changing reg in insn 195
changing reg in insn 196
changing reg in insn 203
changing reg in insn 204
changing reg in insn 214
changing reg in insn 215
changing reg in insn 222
changing reg in insn 223
changing reg in insn 225
changing reg in insn 226
deleting insn with uid = 107.
deleting insn with uid = 142.
deleting insn with uid = 146.
deleting insn with uid = 153.
deleting insn with uid = 162.
deleting insn with uid = 169.
deleting insn with uid = 181.
deleting insn with uid = 188.
deleting insn with uid = 199.
deleting insn with uid = 206.
deleting insn with uid = 218.
deleting insn with uid = 225.
deleting insn with uid = 232.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 25.
verify found no changes in insn with uid = 43.
verify found no changes in insn with uid = 98.
verify found no changes in insn with uid = 106.
verify found no changes in insn with uid = 119.
verify found no changes in insn with uid = 136.
verify found no changes in insn with uid = 141.
verify found no changes in insn with uid = 145.
verify found no changes in insn with uid = 152.
verify found no changes in insn with uid = 161.
verify found no changes in insn with uid = 168.
verify found no changes in insn with uid = 180.
verify found no changes in insn with uid = 187.
verify found no changes in insn with uid = 198.
verify found no changes in insn with uid = 205.
verify found no changes in insn with uid = 217.
verify found no changes in insn with uid = 224.


delete

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={72d,66u} r1={28d,10u} r2={19d,2u} r3={1d,1u} r4={23d,7u} r5={35d,18u} r6={1d,89u} r7={1d,50u} r8={17d} r9={17d} r10={17d} r11={17d} r12={17d} r13={17d} r14={17d} r15={17d} r17={34d,16u} r18={17d} r19={17d} r20={1d,1u} r21={18d} r22={18d} r23={18d} r24={18d} r25={18d} r26={18d} r27={18d} r28={18d} r29={17d} r30={17d} r31={17d} r32={17d} r33={17d} r34={17d} r35={17d} r36={17d} r37={18d} r38={18d} r39={17d} r40={17d} r45={17d} r46={17d} r47={17d} r48={17d} r49={17d} r50={17d} r51={17d} r52={17d} r53={17d} r54={17d} r55={17d} r56={17d} r57={17d} r58={17d} r59={17d} r60={17d} r61={17d} r62={17d} r63={17d} r64={17d} r65={17d} r66={17d} r67={17d} r68={17d} r69={17d} r70={17d} r71={17d} r72={17d} r73={17d} r74={17d} r75={17d} r76={17d} r77={17d} r78={17d} r79={17d} r80={17d} 
;;    total ref usage 1607{1347d,260u,0e} in 161{144 regular + 17 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 node+0 S8 A64])
        (reg:DI 5 di [ node ])) "test1.c":160 81 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [1 queryNum+0 S4 A32])
        (reg:SI 4 si [ queryNum ])) "test1.c":160 82 {*movsi_internal}
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [2 node+0 S8 A64])
            (const_int 0 [0]))) "test1.c":161 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 13)
            (pc))) "test1.c":161 627 {*jcc_1}
     (nil)
 -> 13)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 115
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 239 3 (set (reg/f:DI 0 ax [orig:115 _34 ] [115])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 node+0 S8 A64])) "test1.c":162 81 {*movdi_internal}
     (nil))
(jump_insn 239 10 240 3 (set (pc)
        (label_ref 230)) "test1.c":162 659 {jump}
     (nil)
 -> 230)
;;  succ:       33 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115

(barrier 240 239 13)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 118
(code_label 13 240 14 4 40 (nil) [1 uses])
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (set (reg/f:DI 0 ax [118])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 node+0 S8 A64])) "test1.c":164 81 {*movdi_internal}
     (nil))
(insn 16 15 17 4 (set (reg:SI 0 ax [orig:87 _1 ] [87])
        (mem:SI (reg/f:DI 0 ax [118]) [1 node_43(D)->key+0 S4 A64])) "test1.c":164 82 {*movsi_internal}
     (nil))
(insn 17 16 18 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -60 [0xffffffffffffffc4])) [1 queryNum+0 S4 A32])
            (reg:SI 0 ax [orig:87 _1 ] [87]))) "test1.c":164 7 {*cmpsi_1}
     (nil))
(jump_insn 18 17 19 4 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) "test1.c":164 627 {*jcc_1}
     (nil)
 -> 31)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 89 119 120 121
(note 19 18 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 5 (set (reg/f:DI 0 ax [119])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 node+0 S8 A64])) "test1.c":166 81 {*movdi_internal}
     (nil))
(insn 21 20 22 5 (set (reg/f:DI 0 ax [orig:88 _2 ] [88])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [119])
                (const_int 8 [0x8])) [2 node_43(D)->left+0 S8 A64])) "test1.c":166 81 {*movdi_internal}
     (nil))
(insn 22 21 23 5 (set (reg:SI 1 dx [120])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [1 queryNum+0 S4 A32])) "test1.c":166 82 {*movsi_internal}
     (nil))
(insn 23 22 24 5 (set (reg:SI 4 si)
        (reg:SI 1 dx [120])) "test1.c":166 82 {*movsi_internal}
     (nil))
(insn 24 23 25 5 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:88 _2 ] [88])) "test1.c":166 81 {*movdi_internal}
     (nil))
(call_insn 25 24 26 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("delete") [flags 0x3]  <function_decl 0x7fddd77eed00 delete>) [0 delete S1 A8])
            (const_int 0 [0]))) "test1.c":166 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 26 25 27 5 (set (reg/f:DI 1 dx [orig:89 _3 ] [89])
        (reg:DI 0 ax)) "test1.c":166 81 {*movdi_internal}
     (nil))
(insn 27 26 28 5 (set (reg/f:DI 0 ax [121])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 node+0 S8 A64])) "test1.c":165 81 {*movdi_internal}
     (nil))
(insn 28 27 241 5 (set (mem/f:DI (plus:DI (reg/f:DI 0 ax [121])
                (const_int 8 [0x8])) [2 node_43(D)->left+0 S8 A64])
        (reg/f:DI 1 dx [orig:89 _3 ] [89])) "test1.c":165 81 {*movdi_internal}
     (nil))
(jump_insn 241 28 242 5 (set (pc)
        (label_ref 123)) 659 {jump}
     (nil)
 -> 123)
;;  succ:       18 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 242 241 31)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 90 122
(code_label 31 242 32 6 42 (nil) [1 uses])
(note 32 31 33 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 6 (set (reg/f:DI 0 ax [122])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 node+0 S8 A64])) "test1.c":167 81 {*movdi_internal}
     (nil))
(insn 34 33 35 6 (set (reg:SI 0 ax [orig:90 _4 ] [90])
        (mem:SI (reg/f:DI 0 ax [122]) [1 node_43(D)->key+0 S4 A64])) "test1.c":167 82 {*movsi_internal}
     (nil))
(insn 35 34 36 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -60 [0xffffffffffffffc4])) [1 queryNum+0 S4 A32])
            (reg:SI 0 ax [orig:90 _4 ] [90]))) "test1.c":167 7 {*cmpsi_1}
     (nil))
(jump_insn 36 35 37 6 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) "test1.c":167 627 {*jcc_1}
     (nil)
 -> 49)
;;  succ:       7 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 91 92 123 124 125
(note 37 36 38 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 7 (set (reg/f:DI 0 ax [123])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 node+0 S8 A64])) "test1.c":169 81 {*movdi_internal}
     (nil))
(insn 39 38 40 7 (set (reg/f:DI 0 ax [orig:91 _5 ] [91])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [123])
                (const_int 16 [0x10])) [2 node_43(D)->right+0 S8 A64])) "test1.c":169 81 {*movdi_internal}
     (nil))
(insn 40 39 41 7 (set (reg:SI 1 dx [124])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [1 queryNum+0 S4 A32])) "test1.c":169 82 {*movsi_internal}
     (nil))
(insn 41 40 42 7 (set (reg:SI 4 si)
        (reg:SI 1 dx [124])) "test1.c":169 82 {*movsi_internal}
     (nil))
(insn 42 41 43 7 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:91 _5 ] [91])) "test1.c":169 81 {*movdi_internal}
     (nil))
(call_insn 43 42 44 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("delete") [flags 0x3]  <function_decl 0x7fddd77eed00 delete>) [0 delete S1 A8])
            (const_int 0 [0]))) "test1.c":169 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 44 43 45 7 (set (reg/f:DI 1 dx [orig:92 _6 ] [92])
        (reg:DI 0 ax)) "test1.c":169 81 {*movdi_internal}
     (nil))
(insn 45 44 46 7 (set (reg/f:DI 0 ax [125])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 node+0 S8 A64])) "test1.c":168 81 {*movdi_internal}
     (nil))
(insn 46 45 243 7 (set (mem/f:DI (plus:DI (reg/f:DI 0 ax [125])
                (const_int 16 [0x10])) [2 node_43(D)->right+0 S8 A64])
        (reg/f:DI 1 dx [orig:92 _6 ] [92])) "test1.c":168 81 {*movdi_internal}
     (nil))
(jump_insn 243 46 244 7 (set (pc)
        (label_ref 123)) 659 {jump}
     (nil)
 -> 123)
;;  succ:       18 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 244 243 49)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL, MODIFIED)
;;  pred:       6
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 93 126
(code_label 49 244 50 8 44 (nil) [1 uses])
(note 50 49 51 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 8 (set (reg/f:DI 0 ax [126])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 node+0 S8 A64])) "test1.c":173 81 {*movdi_internal}
     (nil))
(insn 52 51 53 8 (set (reg/f:DI 0 ax [orig:93 _7 ] [93])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [126])
                (const_int 8 [0x8])) [2 node_43(D)->left+0 S8 A64])) "test1.c":173 81 {*movdi_internal}
     (nil))
(insn 53 52 54 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:93 _7 ] [93])
            (const_int 0 [0]))) "test1.c":173 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 54 53 55 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 60)
            (pc))) "test1.c":173 627 {*jcc_1}
     (nil)
 -> 60)
;;  succ:       10
;;              9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 94 127
(note 55 54 56 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 9 (set (reg/f:DI 0 ax [127])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 node+0 S8 A64])) "test1.c":173 81 {*movdi_internal}
     (nil))
(insn 57 56 58 9 (set (reg/f:DI 0 ax [orig:94 _8 ] [94])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [127])
                (const_int 16 [0x10])) [2 node_43(D)->right+0 S8 A64])) "test1.c":173 81 {*movdi_internal}
     (nil))
(insn 58 57 59 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:94 _8 ] [94])
            (const_int 0 [0]))) "test1.c":173 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 59 58 60 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 101)
            (pc))) "test1.c":173 627 {*jcc_1}
     (nil)
 -> 101)
;;  succ:       10 (FALLTHRU)
;;              17
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL, MODIFIED)
;;  pred:       8
;;              9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 95 128
(code_label 60 59 61 10 45 (nil) [1 uses])
(note 61 60 62 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 10 (set (reg/f:DI 0 ax [128])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 node+0 S8 A64])) "test1.c":175 81 {*movdi_internal}
     (nil))
(insn 63 62 64 10 (set (reg/f:DI 0 ax [orig:95 _9 ] [95])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [128])
                (const_int 8 [0x8])) [2 node_43(D)->left+0 S8 A64])) "test1.c":175 81 {*movdi_internal}
     (nil))
(insn 64 63 65 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:95 _9 ] [95])
            (const_int 0 [0]))) "test1.c":175 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 65 64 66 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 71)
            (pc))) "test1.c":175 627 {*jcc_1}
     (nil)
 -> 71)
;;  succ:       11 (FALLTHRU)
;;              12
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 116 129
(note 66 65 67 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 11 (set (reg/f:DI 0 ax [129])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 node+0 S8 A64])) "test1.c":175 81 {*movdi_internal}
     (nil))
(insn 68 67 245 11 (set (reg/f:DI 0 ax [orig:116 iftmp.0_35 ] [116])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [129])
                (const_int 8 [0x8])) [2 node_43(D)->left+0 S8 A64])) "test1.c":175 81 {*movdi_internal}
     (nil))
(jump_insn 245 68 246 11 (set (pc)
        (label_ref 75)) 659 {jump}
     (nil)
 -> 75)
;;  succ:       13 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 116

(barrier 246 245 71)
;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL, MODIFIED)
;;  pred:       10
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 116 130
(code_label 71 246 72 12 47 (nil) [1 uses])
(note 72 71 73 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 12 (set (reg/f:DI 0 ax [130])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 node+0 S8 A64])) "test1.c":175 81 {*movdi_internal}
     (nil))
(insn 74 73 75 12 (set (reg/f:DI 0 ax [orig:116 iftmp.0_35 ] [116])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [130])
                (const_int 16 [0x10])) [2 node_43(D)->right+0 S8 A64])) "test1.c":175 81 {*movdi_internal}
     (nil))
;;  succ:       13 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 116

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;;              11 [100.0%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 116
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 116
;; lr  def 	 17 [flags]
(code_label 75 74 76 13 48 (nil) [1 uses])
(note 76 75 77 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 13 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 temp+0 S8 A64])
        (reg/f:DI 0 ax [orig:116 iftmp.0_35 ] [116])) "test1.c":175 81 {*movdi_internal}
     (nil))
(insn 78 77 79 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                    (const_int -24 [0xffffffffffffffe8])) [2 temp+0 S8 A64])
            (const_int 0 [0]))) "test1.c":178 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 79 78 80 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 86)
            (pc))) "test1.c":178 627 {*jcc_1}
     (nil)
 -> 86)
;;  succ:       14 (FALLTHRU)
;;              15
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 131
(note 80 79 81 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 14 (set (reg/f:DI 0 ax [131])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 node+0 S8 A64])) "test1.c":180 81 {*movdi_internal}
     (nil))
(insn 82 81 83 14 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 temp+0 S8 A64])
        (reg/f:DI 0 ax [131])) "test1.c":180 81 {*movdi_internal}
     (nil))
(insn 83 82 247 14 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 node+0 S8 A64])
        (const_int 0 [0])) "test1.c":181 81 {*movdi_internal}
     (nil))
(jump_insn 247 83 248 14 (set (pc)
        (label_ref 94)) 659 {jump}
     (nil)
 -> 94)
;;  succ:       16 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 248 247 86)
;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (RTL, MODIFIED)
;;  pred:       13
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 132 133 134 135
(code_label 86 248 87 15 49 (nil) [1 uses])
(note 87 86 88 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 15 (set (reg/f:DI 2 cx [132])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 node+0 S8 A64])) "test1.c":184 81 {*movdi_internal}
     (nil))
(insn 89 88 90 15 (set (reg/f:DI 4 si [133])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 temp+0 S8 A64])) "test1.c":184 81 {*movdi_internal}
     (nil))
(insn 90 89 91 15 (set (reg:TI 0 ax [134])
        (mem:TI (reg/f:DI 4 si [133]) [3 *temp_53+0 S16 A64])) "test1.c":184 80 {*movti_internal}
     (nil))
(insn 91 90 92 15 (set (mem:TI (reg/f:DI 2 cx [132]) [3 *node_43(D)+0 S16 A64])
        (reg:TI 0 ax [134])) "test1.c":184 80 {*movti_internal}
     (nil))
(insn 92 91 93 15 (set (reg:TI 0 ax [135])
        (mem:TI (plus:DI (reg/f:DI 4 si [133])
                (const_int 16 [0x10])) [3 *temp_53+16 S16 A64])) "test1.c":184 80 {*movti_internal}
     (nil))
(insn 93 92 94 15 (set (mem:TI (plus:DI (reg/f:DI 2 cx [132])
                (const_int 16 [0x10])) [3 *node_43(D)+16 S16 A64])
        (reg:TI 0 ax [135])) "test1.c":184 80 {*movti_internal}
     (nil))
;;  succ:       16 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (RTL, MODIFIED)
;;  pred:       15 (FALLTHRU)
;;              14 [100.0%] 
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 136
(code_label 94 93 95 16 50 (nil) [1 uses])
(note 95 94 96 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 97 16 (set (reg:DI 0 ax [136])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 temp+0 S8 A64])) "test1.c":186 81 {*movdi_internal}
     (nil))
(insn 97 96 98 16 (set (reg:DI 5 di)
        (reg:DI 0 ax [136])) "test1.c":186 81 {*movdi_internal}
     (nil))
(call_insn 98 97 249 16 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fddd76c9800 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "test1.c":186 665 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 249 98 250 16 (set (pc)
        (label_ref 123)) "test1.c":174 659 {jump}
     (nil)
 -> 123)
;;  succ:       18 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 250 249 101)
;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (RTL, MODIFIED)
;;  pred:       9
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 96 97 98 99 100 137 138 139 140 141 142 143
(code_label 101 250 102 17 46 (nil) [1 uses])
(note 102 101 103 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 104 17 (set (reg/f:DI 0 ax [137])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 node+0 S8 A64])) "test1.c":193 81 {*movdi_internal}
     (nil))
(insn 104 103 105 17 (set (reg/f:DI 0 ax [orig:96 _10 ] [96])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [137])
                (const_int 16 [0x10])) [2 node_43(D)->right+0 S8 A64])) "test1.c":193 81 {*movdi_internal}
     (nil))
(insn 105 104 106 17 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:96 _10 ] [96])) "test1.c":193 81 {*movdi_internal}
     (nil))
(call_insn 106 105 108 17 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("minNode") [flags 0x3]  <function_decl 0x7fddd77eaf00 minNode>) [0 minNode S1 A8])
            (const_int 0 [0]))) "test1.c":193 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 108 106 109 17 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 temp+0 S8 A64])
        (reg:DI 0 ax [138])) "test1.c":193 81 {*movdi_internal}
     (nil))
(insn 109 108 110 17 (set (reg/f:DI 0 ax [139])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 temp+0 S8 A64])) "test1.c":194 81 {*movdi_internal}
     (nil))
(insn 110 109 111 17 (set (reg:SI 1 dx [orig:97 _11 ] [97])
        (mem:SI (reg/f:DI 0 ax [139]) [1 temp_47->key+0 S4 A64])) "test1.c":194 82 {*movsi_internal}
     (nil))
(insn 111 110 112 17 (set (reg/f:DI 0 ax [140])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 node+0 S8 A64])) "test1.c":194 81 {*movdi_internal}
     (nil))
(insn 112 111 113 17 (set (mem:SI (reg/f:DI 0 ax [140]) [1 node_43(D)->key+0 S4 A64])
        (reg:SI 1 dx [orig:97 _11 ] [97])) "test1.c":194 82 {*movsi_internal}
     (nil))
(insn 113 112 114 17 (set (reg/f:DI 0 ax [141])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 temp+0 S8 A64])) "test1.c":196 81 {*movdi_internal}
     (nil))
(insn 114 113 115 17 (set (reg:SI 1 dx [orig:98 _12 ] [98])
        (mem:SI (reg/f:DI 0 ax [141]) [1 temp_47->key+0 S4 A64])) "test1.c":196 82 {*movsi_internal}
     (nil))
(insn 115 114 116 17 (set (reg/f:DI 0 ax [142])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 node+0 S8 A64])) "test1.c":196 81 {*movdi_internal}
     (nil))
(insn 116 115 117 17 (set (reg/f:DI 0 ax [orig:99 _13 ] [99])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [142])
                (const_int 16 [0x10])) [2 node_43(D)->right+0 S8 A64])) "test1.c":196 81 {*movdi_internal}
     (nil))
(insn 117 116 118 17 (set (reg:SI 4 si)
        (reg:SI 1 dx [orig:98 _12 ] [98])) "test1.c":196 82 {*movsi_internal}
     (nil))
(insn 118 117 119 17 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:99 _13 ] [99])) "test1.c":196 81 {*movdi_internal}
     (nil))
(call_insn 119 118 120 17 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("delete") [flags 0x3]  <function_decl 0x7fddd77eed00 delete>) [0 delete S1 A8])
            (const_int 0 [0]))) "test1.c":196 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 120 119 121 17 (set (reg/f:DI 1 dx [orig:100 _14 ] [100])
        (reg:DI 0 ax)) "test1.c":196 81 {*movdi_internal}
     (nil))
(insn 121 120 122 17 (set (reg/f:DI 0 ax [143])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 node+0 S8 A64])) "test1.c":195 81 {*movdi_internal}
     (nil))
(insn 122 121 123 17 (set (mem/f:DI (plus:DI (reg/f:DI 0 ax [143])
                (const_int 16 [0x10])) [2 node_43(D)->right+0 S8 A64])
        (reg/f:DI 1 dx [orig:100 _14 ] [100])) "test1.c":195 81 {*movdi_internal}
     (nil))
;;  succ:       18 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (RTL, MODIFIED)
;;  pred:       17 (FALLTHRU)
;;              5 [100.0%] 
;;              7 [100.0%] 
;;              16 [100.0%] 
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 123 122 124 18 43 (nil) [3 uses])
(note 124 123 125 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 125 124 126 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [2 node+0 S8 A64])
            (const_int 0 [0]))) "test1.c":202 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 126 125 127 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 131)
            (pc))) "test1.c":202 627 {*jcc_1}
     (nil)
 -> 131)
;;  succ:       19 (FALLTHRU)
;;              20
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (RTL, MODIFIED)
;;  pred:       18 (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 115
(note 127 126 128 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 128 127 251 19 (set (reg/f:DI 0 ax [orig:115 _34 ] [115])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 node+0 S8 A64])) "test1.c":203 81 {*movdi_internal}
     (nil))
(jump_insn 251 128 252 19 (set (pc)
        (label_ref 230)) "test1.c":203 659 {jump}
     (nil)
 -> 230)
;;  succ:       33 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115

(barrier 252 251 131)
;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (RTL, MODIFIED)
;;  pred:       18
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 101 102 103 104 105 106 144 145 146 147 148
(code_label 131 252 132 20 51 (nil) [1 uses])
(note 132 131 133 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 133 132 134 20 (set (reg/f:DI 0 ax [144])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 node+0 S8 A64])) "test1.c":206 81 {*movdi_internal}
     (nil))
(insn 134 133 135 20 (set (reg/f:DI 0 ax [orig:101 _15 ] [101])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [144])
                (const_int 16 [0x10])) [2 node_30->right+0 S8 A64])) "test1.c":206 81 {*movdi_internal}
     (nil))
(insn 135 134 136 20 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:101 _15 ] [101])) "test1.c":206 81 {*movdi_internal}
     (nil))
(call_insn 136 135 137 20 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("nodeHeight") [flags 0x3]  <function_decl 0x7fddd77eab00 nodeHeight>) [0 nodeHeight S1 A8])
            (const_int 0 [0]))) "test1.c":206 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 137 136 138 20 (set (reg:SI 3 bx [orig:102 _16 ] [102])
        (reg:SI 0 ax)) "test1.c":206 82 {*movsi_internal}
     (nil))
(insn 138 137 139 20 (set (reg/f:DI 0 ax [145])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 node+0 S8 A64])) "test1.c":206 81 {*movdi_internal}
     (nil))
(insn 139 138 140 20 (set (reg/f:DI 0 ax [orig:103 _17 ] [103])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [145])
                (const_int 8 [0x8])) [2 node_30->left+0 S8 A64])) "test1.c":206 81 {*movdi_internal}
     (nil))
(insn 140 139 141 20 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:103 _17 ] [103])) "test1.c":206 81 {*movdi_internal}
     (nil))
(call_insn 141 140 143 20 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("nodeHeight") [flags 0x3]  <function_decl 0x7fddd77eab00 nodeHeight>) [0 nodeHeight S1 A8])
            (const_int 0 [0]))) "test1.c":206 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 143 141 144 20 (set (reg:SI 4 si)
        (reg:SI 3 bx [orig:102 _16 ] [102])) "test1.c":206 82 {*movsi_internal}
     (nil))
(insn 144 143 145 20 (set (reg:SI 5 di)
        (reg:SI 0 ax [orig:104 _18 ] [104])) "test1.c":206 82 {*movsi_internal}
     (nil))
(call_insn 145 144 147 20 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("max") [flags 0x3]  <function_decl 0x7fddd77ea700 max>) [0 max S1 A8])
            (const_int 0 [0]))) "test1.c":206 676 {*call_value}
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 147 145 148 20 (parallel [
            (set (reg:SI 1 dx [orig:106 _20 ] [106])
                (plus:SI (reg:SI 0 ax [orig:105 _19 ] [105])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":206 217 {*addsi_1}
     (nil))
(insn 148 147 149 20 (set (reg/f:DI 0 ax [146])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 node+0 S8 A64])) "test1.c":206 81 {*movdi_internal}
     (nil))
(insn 149 148 150 20 (set (mem:SI (plus:DI (reg/f:DI 0 ax [146])
                (const_int 24 [0x18])) [1 node_30->height+0 S4 A64])
        (reg:SI 1 dx [orig:106 _20 ] [106])) "test1.c":206 82 {*movsi_internal}
     (nil))
(insn 150 149 151 20 (set (reg:DI 0 ax [147])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 node+0 S8 A64])) "test1.c":208 81 {*movdi_internal}
     (nil))
(insn 151 150 152 20 (set (reg:DI 5 di)
        (reg:DI 0 ax [147])) "test1.c":208 81 {*movdi_internal}
     (nil))
(call_insn 152 151 154 20 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("heightDiff") [flags 0x3]  <function_decl 0x7fddd77ead00 heightDiff>) [0 heightDiff S1 A8])
            (const_int 0 [0]))) "test1.c":208 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 154 152 155 20 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 balance+0 S4 A32])
        (reg:SI 0 ax [148])) "test1.c":208 82 {*movsi_internal}
     (nil))
(insn 155 154 156 20 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [1 balance+0 S4 A32])
            (const_int 1 [0x1]))) "test1.c":211 7 {*cmpsi_1}
     (nil))
(jump_insn 156 155 157 20 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 172)
            (pc))) "test1.c":211 627 {*jcc_1}
     (nil)
 -> 172)
;;  succ:       21 (FALLTHRU)
;;              23
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (RTL, MODIFIED)
;;  pred:       20 (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 107 108 149
(note 157 156 158 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 158 157 159 21 (set (reg/f:DI 0 ax [149])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 node+0 S8 A64])) "test1.c":211 81 {*movdi_internal}
     (nil))
(insn 159 158 160 21 (set (reg/f:DI 0 ax [orig:107 _21 ] [107])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [149])
                (const_int 8 [0x8])) [2 node_30->left+0 S8 A64])) "test1.c":211 81 {*movdi_internal}
     (nil))
(insn 160 159 161 21 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:107 _21 ] [107])) "test1.c":211 81 {*movdi_internal}
     (nil))
(call_insn 161 160 163 21 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("heightDiff") [flags 0x3]  <function_decl 0x7fddd77ead00 heightDiff>) [0 heightDiff S1 A8])
            (const_int 0 [0]))) "test1.c":211 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 163 161 164 21 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 0 ax [orig:108 _22 ] [108])
            (const_int 0 [0]))) "test1.c":211 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 164 163 165 21 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 172)
            (pc))) "test1.c":211 627 {*jcc_1}
     (nil)
 -> 172)
;;  succ:       22 (FALLTHRU)
;;              23
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (RTL, MODIFIED)
;;  pred:       21 (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 115 150
(note 165 164 166 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 166 165 167 22 (set (reg:DI 0 ax [150])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 node+0 S8 A64])) "test1.c":212 81 {*movdi_internal}
     (nil))
(insn 167 166 168 22 (set (reg:DI 5 di)
        (reg:DI 0 ax [150])) "test1.c":212 81 {*movdi_internal}
     (nil))
(call_insn 168 167 253 22 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rightRotate") [flags 0x3]  <function_decl 0x7fddd77ee300 rightRotate>) [0 rightRotate S1 A8])
            (const_int 0 [0]))) "test1.c":212 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 253 168 254 22 (set (pc)
        (label_ref 230)) "test1.c":212 659 {jump}
     (nil)
 -> 230)
;;  succ:       33 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115

(barrier 254 253 172)
;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 22, next block 24, flags: (RTL, MODIFIED)
;;  pred:       20
;;              21
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 172 254 173 23 52 (nil) [2 uses])
(note 173 172 174 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 174 173 175 23 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [1 balance+0 S4 A32])
            (const_int 1 [0x1]))) "test1.c":215 7 {*cmpsi_1}
     (nil))
(jump_insn 175 174 176 23 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 190)
            (pc))) "test1.c":215 627 {*jcc_1}
     (nil)
 -> 190)
;;  succ:       24 (FALLTHRU)
;;              26
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 25, flags: (RTL, MODIFIED)
;;  pred:       23 (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 109 110 151
(note 176 175 177 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 177 176 178 24 (set (reg/f:DI 0 ax [151])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 node+0 S8 A64])) "test1.c":215 81 {*movdi_internal}
     (nil))
(insn 178 177 179 24 (set (reg/f:DI 0 ax [orig:109 _23 ] [109])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [151])
                (const_int 8 [0x8])) [2 node_30->left+0 S8 A64])) "test1.c":215 81 {*movdi_internal}
     (nil))
(insn 179 178 180 24 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:109 _23 ] [109])) "test1.c":215 81 {*movdi_internal}
     (nil))
(call_insn 180 179 182 24 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("heightDiff") [flags 0x3]  <function_decl 0x7fddd77ead00 heightDiff>) [0 heightDiff S1 A8])
            (const_int 0 [0]))) "test1.c":215 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 182 180 183 24 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 0 ax [orig:110 _24 ] [110])
            (const_int 0 [0]))) "test1.c":215 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 183 182 184 24 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 190)
            (pc))) "test1.c":215 627 {*jcc_1}
     (nil)
 -> 190)
;;  succ:       25 (FALLTHRU)
;;              26
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 24, next block 26, flags: (RTL, MODIFIED)
;;  pred:       24 (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 152 153
(note 184 183 185 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 185 184 186 25 (set (reg:DI 0 ax [152])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 node+0 S8 A64])) "test1.c":217 81 {*movdi_internal}
     (nil))
(insn 186 185 187 25 (set (reg:DI 5 di)
        (reg:DI 0 ax [152])) "test1.c":217 81 {*movdi_internal}
     (nil))
(call_insn 187 186 189 25 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("LeftRightRotate") [flags 0x3]  <function_decl 0x7fddd77ee700 LeftRightRotate>) [0 LeftRightRotate S1 A8])
            (const_int 0 [0]))) "test1.c":217 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 189 187 190 25 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 node+0 S8 A64])
        (reg:DI 0 ax [153])) "test1.c":217 81 {*movdi_internal}
     (nil))
;;  succ:       26 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 25, next block 27, flags: (RTL, MODIFIED)
;;  pred:       23
;;              24
;;              25 (FALLTHRU)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 190 189 191 26 53 (nil) [2 uses])
(note 191 190 192 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 192 191 193 26 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [1 balance+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))) "test1.c":221 7 {*cmpsi_1}
     (nil))
(jump_insn 193 192 194 26 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 209)
            (pc))) "test1.c":221 627 {*jcc_1}
     (nil)
 -> 209)
;;  succ:       27 (FALLTHRU)
;;              29
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 27, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 26, next block 28, flags: (RTL, MODIFIED)
;;  pred:       26 (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 111 112 154
(note 194 193 195 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 195 194 196 27 (set (reg/f:DI 0 ax [154])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 node+0 S8 A64])) "test1.c":221 81 {*movdi_internal}
     (nil))
(insn 196 195 197 27 (set (reg/f:DI 0 ax [orig:111 _25 ] [111])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [154])
                (const_int 16 [0x10])) [2 node_31->right+0 S8 A64])) "test1.c":221 81 {*movdi_internal}
     (nil))
(insn 197 196 198 27 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:111 _25 ] [111])) "test1.c":221 81 {*movdi_internal}
     (nil))
(call_insn 198 197 200 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("heightDiff") [flags 0x3]  <function_decl 0x7fddd77ead00 heightDiff>) [0 heightDiff S1 A8])
            (const_int 0 [0]))) "test1.c":221 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 200 198 201 27 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 0 ax [orig:112 _26 ] [112])
            (const_int 0 [0]))) "test1.c":221 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 201 200 202 27 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 209)
            (pc))) "test1.c":221 627 {*jcc_1}
     (nil)
 -> 209)
;;  succ:       28 (FALLTHRU)
;;              29
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 28, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 27, next block 29, flags: (RTL, MODIFIED)
;;  pred:       27 (FALLTHRU)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 115 155
(note 202 201 203 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 203 202 204 28 (set (reg:DI 0 ax [155])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 node+0 S8 A64])) "test1.c":222 81 {*movdi_internal}
     (nil))
(insn 204 203 205 28 (set (reg:DI 5 di)
        (reg:DI 0 ax [155])) "test1.c":222 81 {*movdi_internal}
     (nil))
(call_insn 205 204 255 28 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("leftRotate") [flags 0x3]  <function_decl 0x7fddd77ee500 leftRotate>) [0 leftRotate S1 A8])
            (const_int 0 [0]))) "test1.c":222 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 255 205 256 28 (set (pc)
        (label_ref 230)) "test1.c":222 659 {jump}
     (nil)
 -> 230)
;;  succ:       33 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115

(barrier 256 255 209)
;; basic block 29, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 28, next block 30, flags: (RTL, MODIFIED)
;;  pred:       26
;;              27
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 209 256 210 29 54 (nil) [2 uses])
(note 210 209 211 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 211 210 212 29 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [1 balance+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))) "test1.c":225 7 {*cmpsi_1}
     (nil))
(jump_insn 212 211 213 29 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 227)
            (pc))) "test1.c":225 627 {*jcc_1}
     (nil)
 -> 227)
;;  succ:       30 (FALLTHRU)
;;              32
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 30, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 29, next block 31, flags: (RTL, MODIFIED)
;;  pred:       29 (FALLTHRU)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 113 114 156
(note 213 212 214 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 214 213 215 30 (set (reg/f:DI 0 ax [156])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 node+0 S8 A64])) "test1.c":225 81 {*movdi_internal}
     (nil))
(insn 215 214 216 30 (set (reg/f:DI 0 ax [orig:113 _27 ] [113])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [156])
                (const_int 16 [0x10])) [2 node_31->right+0 S8 A64])) "test1.c":225 81 {*movdi_internal}
     (nil))
(insn 216 215 217 30 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:113 _27 ] [113])) "test1.c":225 81 {*movdi_internal}
     (nil))
(call_insn 217 216 219 30 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("heightDiff") [flags 0x3]  <function_decl 0x7fddd77ead00 heightDiff>) [0 heightDiff S1 A8])
            (const_int 0 [0]))) "test1.c":225 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 219 217 220 30 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 0 ax [orig:114 _28 ] [114])
            (const_int 0 [0]))) "test1.c":225 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 220 219 221 30 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 227)
            (pc))) "test1.c":225 627 {*jcc_1}
     (nil)
 -> 227)
;;  succ:       31 (FALLTHRU)
;;              32
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 31, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 30, next block 32, flags: (RTL, MODIFIED)
;;  pred:       30 (FALLTHRU)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 157 158
(note 221 220 222 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 222 221 223 31 (set (reg:DI 0 ax [157])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 node+0 S8 A64])) "test1.c":227 81 {*movdi_internal}
     (nil))
(insn 223 222 224 31 (set (reg:DI 5 di)
        (reg:DI 0 ax [157])) "test1.c":227 81 {*movdi_internal}
     (nil))
(call_insn 224 223 226 31 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("RightLeftRotate") [flags 0x3]  <function_decl 0x7fddd77ee900 RightLeftRotate>) [0 RightLeftRotate S1 A8])
            (const_int 0 [0]))) "test1.c":227 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 226 224 227 31 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 node+0 S8 A64])
        (reg:DI 0 ax [158])) "test1.c":227 81 {*movdi_internal}
     (nil))
;;  succ:       32 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 32, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 31, next block 33, flags: (RTL, MODIFIED)
;;  pred:       29
;;              30
;;              31 (FALLTHRU)
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 115
(code_label 227 226 228 32 55 (nil) [2 uses])
(note 228 227 229 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 229 228 230 32 (set (reg/f:DI 0 ax [orig:115 _34 ] [115])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 node+0 S8 A64])) "test1.c":230 81 {*movdi_internal}
     (nil))
;;  succ:       33 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115

;; basic block 33, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 32, next block 1, flags: (RTL, MODIFIED)
;;  pred:       32 (FALLTHRU)
;;              3 [100.0%] 
;;              19 [100.0%] 
;;              22 [100.0%] 
;;              28 [100.0%] 
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115
;; lr  def 	 0 [ax] 117
(code_label 230 229 231 33 41 (nil) [4 uses])
(note 231 230 236 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 236 231 237 33 (set (reg/i:DI 0 ax)
        (reg/f:DI 0 ax [orig:117 <retval> ] [117])) "test1.c":231 81 {*movdi_internal}
     (nil))
(insn 237 236 257 33 (use (reg/i:DI 0 ax)) "test1.c":231 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 257 237 0 NOTE_INSN_DELETED)

;; Function findNode (findNode, funcdef_no=17, decl_uid=2826, cgraph_uid=17, symbol_order=17)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=16, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 7:  (0) ?mr {*cmpdi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 10:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) rm  (1) re {*cmpsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 15:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 16:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 22:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 27:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) rm  (1) re {*cmpsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 32:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 33:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 39:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 42:  (0) r  (1) rem {*movdi_internal}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5
EBB 6
EBB 7

********** Pseudo live ranges #1: **********

  BB 7
   Insn 50: point = 0, n_alt = -1
   Insn 49: point = 0, n_alt = -2
   Insn 45: point = 1, n_alt = -2
   Insn 42: point = 3, n_alt = 3
  BB 4
   Insn 52: point = 4, n_alt = -1
   Insn 22: point = 4, n_alt = 5
   Insn 21: point = 5, n_alt = -2
   Insn 20: point = 6, n_alt = 0
   Insn 19: point = 6, n_alt = -2
   Insn 18: point = 7, n_alt = -2
   Insn 17: point = 8, n_alt = 0
   Insn 16: point = 9, n_alt = 3
   Insn 15: point = 11, n_alt = 3
  BB 6
   Insn 39: point = 12, n_alt = 5
   Insn 38: point = 13, n_alt = -2
   Insn 37: point = 14, n_alt = 0
   Insn 36: point = 14, n_alt = -2
   Insn 35: point = 15, n_alt = -2
   Insn 34: point = 16, n_alt = 0
   Insn 33: point = 17, n_alt = 3
   Insn 32: point = 19, n_alt = 3
  BB 5
   Insn 30: point = 20, n_alt = -1
   Insn 29: point = 20, n_alt = 0
   Insn 28: point = 21, n_alt = 0
   Insn 27: point = 23, n_alt = 3
  BB 3
   Insn 13: point = 24, n_alt = -1
   Insn 12: point = 24, n_alt = 0
   Insn 11: point = 25, n_alt = 0
   Insn 10: point = 27, n_alt = 3
  BB 2
   Insn 8: point = 28, n_alt = -1
   Insn 7: point = 28, n_alt = 1
   Insn 3: point = 28, n_alt = 1
   Insn 2: point = 28, n_alt = 5
 r87: [24..25]
 r88: [6..9]
 r89: [20..21]
 r90: [14..17]
 r91: [2..3]
 r92: [0..1]
 r93: [26..27]
 r94: [10..11]
 r95: [7..8]
 r96: [4..5]
 r97: [22..23]
 r98: [18..19]
 r99: [15..16]
 r100: [12..13]
Compressing live ranges: from 28 to 24 - 85%
Ranges after the compression:
 r87: [20..21]
 r88: [6..7]
 r89: [16..17]
 r90: [12..13]
 r91: [2..3]
 r92: [0..1]
 r93: [22..23]
 r94: [8..9]
 r95: [6..7]
 r96: [4..5]
 r97: [18..19]
 r98: [14..15]
 r99: [12..13]
 r100: [10..11]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=16, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 11
changing reg in insn 12
changing reg in insn 16
changing reg in insn 19
changing reg in insn 28
changing reg in insn 29
changing reg in insn 33
changing reg in insn 36
changing reg in insn 42
changing reg in insn 45
changing reg in insn 45
changing reg in insn 49
changing reg in insn 10
changing reg in insn 11
changing reg in insn 15
changing reg in insn 16
changing reg in insn 17
changing reg in insn 18
changing reg in insn 21
changing reg in insn 22
changing reg in insn 27
changing reg in insn 28
changing reg in insn 32
changing reg in insn 33
changing reg in insn 34
changing reg in insn 35
changing reg in insn 38
changing reg in insn 39
deleting insn with uid = 21.
deleting insn with uid = 38.
deleting insn with uid = 45.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 20.
verify found no changes in insn with uid = 37.


findNode

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={13d,13u} r1={5d,2u} r2={3d} r4={5d,3u} r5={5d,3u} r6={1d,21u} r7={1d,9u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={5d,3u} r18={2d} r19={2d} r20={1d,1u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} 
;;    total ref usage 236{181d,55u,0e} in 30{28 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [2 node+0 S8 A64])
        (reg:DI 5 di [ node ])) "test1.c":234 81 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [1 queryNum+0 S4 A32])
        (reg:SI 4 si [ queryNum ])) "test1.c":234 82 {*movsi_internal}
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                    (const_int -8 [0xfffffffffffffff8])) [2 node+0 S8 A64])
            (const_int 0 [0]))) "test1.c":235 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) "test1.c":235 627 {*jcc_1}
     (nil)
 -> 40)
;;  succ:       3 (FALLTHRU)
;;              7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 93
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg/f:DI 0 ax [93])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [2 node+0 S8 A64])) "test1.c":237 81 {*movdi_internal}
     (nil))
(insn 11 10 12 3 (set (reg:SI 0 ax [orig:87 _1 ] [87])
        (mem:SI (reg/f:DI 0 ax [93]) [1 node_7(D)->key+0 S4 A64])) "test1.c":237 82 {*movsi_internal}
     (nil))
(insn 12 11 13 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -12 [0xfffffffffffffff4])) [1 queryNum+0 S4 A32])
            (reg:SI 0 ax [orig:87 _1 ] [87]))) "test1.c":237 7 {*cmpsi_1}
     (nil))
(jump_insn 13 12 14 3 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) "test1.c":237 627 {*jcc_1}
     (nil)
 -> 25)
;;  succ:       4 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 94 95 96
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (set (reg/f:DI 0 ax [94])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [2 node+0 S8 A64])) "test1.c":238 81 {*movdi_internal}
     (nil))
(insn 16 15 17 4 (set (reg/f:DI 0 ax [orig:88 _2 ] [88])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [94])
                (const_int 8 [0x8])) [2 node_7(D)->left+0 S8 A64])) "test1.c":238 81 {*movdi_internal}
     (nil))
(insn 17 16 18 4 (set (reg:SI 1 dx [95])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [1 queryNum+0 S4 A32])) "test1.c":238 82 {*movsi_internal}
     (nil))
(insn 18 17 19 4 (set (reg:SI 4 si)
        (reg:SI 1 dx [95])) "test1.c":238 82 {*movsi_internal}
     (nil))
(insn 19 18 20 4 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:88 _2 ] [88])) "test1.c":238 81 {*movdi_internal}
     (nil))
(call_insn 20 19 22 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("findNode") [flags 0x3]  <function_decl 0x7fddd77eef00 findNode>) [0 findNode S1 A8])
            (const_int 0 [0]))) "test1.c":238 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 22 20 52 4 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [2 node+0 S8 A64])
        (reg:DI 0 ax [96])) "test1.c":238 81 {*movdi_internal}
     (nil))
(jump_insn 52 22 53 4 (set (pc)
        (label_ref 40)) 659 {jump}
     (nil)
 -> 40)
;;  succ:       7 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 53 52 25)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 89 97
(code_label 25 53 26 5 58 (nil) [1 uses])
(note 26 25 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 5 (set (reg/f:DI 0 ax [97])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [2 node+0 S8 A64])) "test1.c":239 81 {*movdi_internal}
     (nil))
(insn 28 27 29 5 (set (reg:SI 0 ax [orig:89 _3 ] [89])
        (mem:SI (reg/f:DI 0 ax [97]) [1 node_7(D)->key+0 S4 A64])) "test1.c":239 82 {*movsi_internal}
     (nil))
(insn 29 28 30 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -12 [0xfffffffffffffff4])) [1 queryNum+0 S4 A32])
            (reg:SI 0 ax [orig:89 _3 ] [89]))) "test1.c":239 7 {*cmpsi_1}
     (nil))
(jump_insn 30 29 31 5 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) "test1.c":239 627 {*jcc_1}
     (nil)
 -> 40)
;;  succ:       6 (FALLTHRU)
;;              7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 90 98 99 100
(note 31 30 32 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 6 (set (reg/f:DI 0 ax [98])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [2 node+0 S8 A64])) "test1.c":240 81 {*movdi_internal}
     (nil))
(insn 33 32 34 6 (set (reg/f:DI 0 ax [orig:90 _4 ] [90])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [98])
                (const_int 16 [0x10])) [2 node_7(D)->right+0 S8 A64])) "test1.c":240 81 {*movdi_internal}
     (nil))
(insn 34 33 35 6 (set (reg:SI 1 dx [99])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [1 queryNum+0 S4 A32])) "test1.c":240 82 {*movsi_internal}
     (nil))
(insn 35 34 36 6 (set (reg:SI 4 si)
        (reg:SI 1 dx [99])) "test1.c":240 82 {*movsi_internal}
     (nil))
(insn 36 35 37 6 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:90 _4 ] [90])) "test1.c":240 81 {*movdi_internal}
     (nil))
(call_insn 37 36 39 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("findNode") [flags 0x3]  <function_decl 0x7fddd77eef00 findNode>) [0 findNode S1 A8])
            (const_int 0 [0]))) "test1.c":240 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 39 37 40 6 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [2 node+0 S8 A64])
        (reg:DI 0 ax [100])) "test1.c":240 81 {*movdi_internal}
     (nil))
;;  succ:       7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 1, flags: (RTL, MODIFIED)
;;  pred:       2
;;              6 (FALLTHRU)
;;              5
;;              4 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 91 92
(code_label 40 39 41 7 57 (nil) [3 uses])
(note 41 40 42 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 49 7 (set (reg/f:DI 0 ax [orig:91 _14 ] [91])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [2 node+0 S8 A64])) "test1.c":243 81 {*movdi_internal}
     (nil))
(insn 49 42 50 7 (set (reg/i:DI 0 ax)
        (reg/f:DI 0 ax [orig:92 <retval> ] [92])) "test1.c":244 81 {*movdi_internal}
     (nil))
(insn 50 49 54 7 (use (reg/i:DI 0 ax)) "test1.c":244 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 54 50 0 NOTE_INSN_DELETED)

;; Function printPreOrder (printPreOrder, funcdef_no=18, decl_uid=2829, cgraph_uid=18, symbol_order=18)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=16, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) ?mr {*cmpdi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 13:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 16:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 17:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 19:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 20:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 23:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 24:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) rBwBz {*call}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 5
EBB 4

********** Pseudo live ranges #1: **********

  BB 4
  BB 3
   Insn 31: point = 0, n_alt = -1
   Insn 26: point = 0, n_alt = 0
   Insn 25: point = 0, n_alt = -2
   Insn 24: point = 1, n_alt = 3
   Insn 23: point = 3, n_alt = 3
   Insn 22: point = 4, n_alt = 0
   Insn 21: point = 4, n_alt = -2
   Insn 20: point = 5, n_alt = 3
   Insn 19: point = 7, n_alt = 3
   Insn 18: point = 8, n_alt = 0
   Insn 17: point = 8, n_alt = 1
   Insn 16: point = 8, n_alt = 4
   Insn 15: point = 8, n_alt = -2
   Insn 14: point = 9, n_alt = 0
   Insn 13: point = 11, n_alt = 3
  BB 5
   Insn 35: point = 12, n_alt = -1
  BB 2
   Insn 7: point = 12, n_alt = -1
   Insn 6: point = 12, n_alt = 1
   Insn 2: point = 12, n_alt = 5
 r87: [8..9]
 r88: [4..5]
 r89: [0..1]
 r90: [10..11]
 r91: [6..7]
 r92: [2..3]
Compressing live ranges: from 12 to 12 - 100%
Ranges after the compression:
 r87: [8..9]
 r88: [4..5]
 r89: [0..1]
 r90: [10..11]
 r91: [6..7]
 r92: [2..3]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=16, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 14
changing reg in insn 15
changing reg in insn 20
changing reg in insn 21
changing reg in insn 24
changing reg in insn 25
changing reg in insn 13
changing reg in insn 14
changing reg in insn 19
changing reg in insn 20
changing reg in insn 23
changing reg in insn 24
starting the processing of deferred insns
ending the processing of deferred insns


printPreOrder

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={11d,7u} r1={4d} r2={4d} r4={5d,1u} r5={7d,4u} r6={1d,10u} r7={1d,8u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={4d,1u} r18={3d} r19={3d} r20={1d,1u} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} 
;;    total ref usage 278{246d,32u,0e} in 19{16 regular + 3 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [2 node+0 S8 A64])
        (reg:DI 5 di [ node ])) "test1.c":247 81 {*movdi_internal}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                    (const_int -8 [0xfffffffffffffff8])) [2 node+0 S8 A64])
            (const_int 0 [0]))) "test1.c":248 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 7 6 12 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 34)
            (pc))) "test1.c":248 627 {*jcc_1}
     (nil)
 -> 34)
;;  succ:       5
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92
(note 12 7 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (set (reg/f:DI 0 ax [90])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [2 node+0 S8 A64])) "test1.c":251 81 {*movdi_internal}
     (nil))
(insn 14 13 15 3 (set (reg:SI 0 ax [orig:87 _1 ] [87])
        (mem:SI (reg/f:DI 0 ax [90]) [1 node_5(D)->key+0 S4 A64])) "test1.c":251 82 {*movsi_internal}
     (nil))
(insn 15 14 16 3 (set (reg:SI 4 si)
        (reg:SI 0 ax [orig:87 _1 ] [87])) "test1.c":251 82 {*movsi_internal}
     (nil))
(insn 16 15 17 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7fddd7490f30 *.LC3>)) "test1.c":251 81 {*movdi_internal}
     (nil))
(insn 17 16 18 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) "test1.c":251 84 {*movqi_internal}
     (nil))
(call_insn 18 17 19 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fddd76aef00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "test1.c":251 676 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 19 18 20 3 (set (reg/f:DI 0 ax [91])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [2 node+0 S8 A64])) "test1.c":252 81 {*movdi_internal}
     (nil))
(insn 20 19 21 3 (set (reg/f:DI 0 ax [orig:88 _2 ] [88])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [91])
                (const_int 8 [0x8])) [2 node_5(D)->left+0 S8 A64])) "test1.c":252 81 {*movdi_internal}
     (nil))
(insn 21 20 22 3 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:88 _2 ] [88])) "test1.c":252 81 {*movdi_internal}
     (nil))
(call_insn 22 21 23 3 (call (mem:QI (symbol_ref:DI ("printPreOrder") [flags 0x3]  <function_decl 0x7fddd77fa100 printPreOrder>) [0 printPreOrder S1 A8])
        (const_int 0 [0])) "test1.c":252 665 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 23 22 24 3 (set (reg/f:DI 0 ax [92])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [2 node+0 S8 A64])) "test1.c":253 81 {*movdi_internal}
     (nil))
(insn 24 23 25 3 (set (reg/f:DI 0 ax [orig:89 _3 ] [89])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [92])
                (const_int 16 [0x10])) [2 node_5(D)->right+0 S8 A64])) "test1.c":253 81 {*movdi_internal}
     (nil))
(insn 25 24 26 3 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:89 _3 ] [89])) "test1.c":253 81 {*movdi_internal}
     (nil))
(call_insn 26 25 31 3 (call (mem:QI (symbol_ref:DI ("printPreOrder") [flags 0x3]  <function_decl 0x7fddd77fa100 printPreOrder>) [0 printPreOrder S1 A8])
        (const_int 0 [0])) "test1.c":253 665 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 31 26 32 3 (set (pc)
        (label_ref 29)) 659 {jump}
     (nil)
 -> 29)
;;  succ:       4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 32 31 34)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 34 32 33 5 63 (nil) [1 uses])
(note 33 34 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 35 33 29 5 (const_int 0 [0]) "test1.c":249 694 {nop}
     (nil))
;;  succ:       4 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 1, flags: (RTL, MODIFIED)
;;  pred:       5 [100.0%]  (FALLTHRU)
;;              3
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 29 35 30 4 60 (nil) [1 uses])
(note 30 29 36 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 36 30 0 NOTE_INSN_DELETED)

;; Function printInOrder (printInOrder, funcdef_no=19, decl_uid=2832, cgraph_uid=19, symbol_order=19)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=16, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) ?mr {*cmpdi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 13:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 14:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 17:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 20:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 21:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 23:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 24:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) rBwBz {*call}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 5
EBB 4

********** Pseudo live ranges #1: **********

  BB 4
  BB 3
   Insn 31: point = 0, n_alt = -1
   Insn 26: point = 0, n_alt = 0
   Insn 25: point = 0, n_alt = -2
   Insn 24: point = 1, n_alt = 3
   Insn 23: point = 3, n_alt = 3
   Insn 22: point = 4, n_alt = 0
   Insn 21: point = 4, n_alt = 1
   Insn 20: point = 4, n_alt = 4
   Insn 19: point = 4, n_alt = -2
   Insn 18: point = 5, n_alt = 0
   Insn 17: point = 7, n_alt = 3
   Insn 16: point = 8, n_alt = 0
   Insn 15: point = 8, n_alt = -2
   Insn 14: point = 9, n_alt = 3
   Insn 13: point = 11, n_alt = 3
  BB 5
   Insn 35: point = 12, n_alt = -1
  BB 2
   Insn 7: point = 12, n_alt = -1
   Insn 6: point = 12, n_alt = 1
   Insn 2: point = 12, n_alt = 5
 r87: [8..9]
 r88: [4..5]
 r89: [0..1]
 r90: [10..11]
 r91: [6..7]
 r92: [2..3]
Compressing live ranges: from 12 to 12 - 100%
Ranges after the compression:
 r87: [8..9]
 r88: [4..5]
 r89: [0..1]
 r90: [10..11]
 r91: [6..7]
 r92: [2..3]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=16, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 14
changing reg in insn 15
changing reg in insn 18
changing reg in insn 19
changing reg in insn 24
changing reg in insn 25
changing reg in insn 13
changing reg in insn 14
changing reg in insn 17
changing reg in insn 18
changing reg in insn 23
changing reg in insn 24
starting the processing of deferred insns
ending the processing of deferred insns


printInOrder

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={11d,7u} r1={4d} r2={4d} r4={5d,1u} r5={7d,4u} r6={1d,10u} r7={1d,8u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={4d,1u} r18={3d} r19={3d} r20={1d,1u} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} 
;;    total ref usage 278{246d,32u,0e} in 19{16 regular + 3 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [2 node+0 S8 A64])
        (reg:DI 5 di [ node ])) "test1.c":257 81 {*movdi_internal}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                    (const_int -8 [0xfffffffffffffff8])) [2 node+0 S8 A64])
            (const_int 0 [0]))) "test1.c":258 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 7 6 12 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 34)
            (pc))) "test1.c":258 627 {*jcc_1}
     (nil)
 -> 34)
;;  succ:       5
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92
(note 12 7 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (set (reg/f:DI 0 ax [90])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [2 node+0 S8 A64])) "test1.c":260 81 {*movdi_internal}
     (nil))
(insn 14 13 15 3 (set (reg/f:DI 0 ax [orig:87 _1 ] [87])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [90])
                (const_int 8 [0x8])) [2 node_5(D)->left+0 S8 A64])) "test1.c":260 81 {*movdi_internal}
     (nil))
(insn 15 14 16 3 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:87 _1 ] [87])) "test1.c":260 81 {*movdi_internal}
     (nil))
(call_insn 16 15 17 3 (call (mem:QI (symbol_ref:DI ("printInOrder") [flags 0x3]  <function_decl 0x7fddd77fa300 printInOrder>) [0 printInOrder S1 A8])
        (const_int 0 [0])) "test1.c":260 665 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 17 16 18 3 (set (reg/f:DI 0 ax [91])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [2 node+0 S8 A64])) "test1.c":261 81 {*movdi_internal}
     (nil))
(insn 18 17 19 3 (set (reg:SI 0 ax [orig:88 _2 ] [88])
        (mem:SI (reg/f:DI 0 ax [91]) [1 node_5(D)->key+0 S4 A64])) "test1.c":261 82 {*movsi_internal}
     (nil))
(insn 19 18 20 3 (set (reg:SI 4 si)
        (reg:SI 0 ax [orig:88 _2 ] [88])) "test1.c":261 82 {*movsi_internal}
     (nil))
(insn 20 19 21 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7fddd7490f30 *.LC3>)) "test1.c":261 81 {*movdi_internal}
     (nil))
(insn 21 20 22 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) "test1.c":261 84 {*movqi_internal}
     (nil))
(call_insn 22 21 23 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fddd76aef00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "test1.c":261 676 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 23 22 24 3 (set (reg/f:DI 0 ax [92])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [2 node+0 S8 A64])) "test1.c":262 81 {*movdi_internal}
     (nil))
(insn 24 23 25 3 (set (reg/f:DI 0 ax [orig:89 _3 ] [89])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [92])
                (const_int 16 [0x10])) [2 node_5(D)->right+0 S8 A64])) "test1.c":262 81 {*movdi_internal}
     (nil))
(insn 25 24 26 3 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:89 _3 ] [89])) "test1.c":262 81 {*movdi_internal}
     (nil))
(call_insn 26 25 31 3 (call (mem:QI (symbol_ref:DI ("printInOrder") [flags 0x3]  <function_decl 0x7fddd77fa300 printInOrder>) [0 printInOrder S1 A8])
        (const_int 0 [0])) "test1.c":262 665 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 31 26 32 3 (set (pc)
        (label_ref 29)) 659 {jump}
     (nil)
 -> 29)
;;  succ:       4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 32 31 34)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 34 32 33 5 67 (nil) [1 uses])
(note 33 34 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 35 33 29 5 (const_int 0 [0]) "test1.c":259 694 {nop}
     (nil))
;;  succ:       4 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 1, flags: (RTL, MODIFIED)
;;  pred:       5 [100.0%]  (FALLTHRU)
;;              3
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 29 35 30 4 64 (nil) [1 uses])
(note 30 29 36 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 36 30 0 NOTE_INSN_DELETED)

;; Function printPostOrder (printPostOrder, funcdef_no=20, decl_uid=2835, cgraph_uid=20, symbol_order=20)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=16, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) ?mr {*cmpdi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 13:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 14:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 17:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 18:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 21:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 24:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 25:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (1) rBwBz {*call_value}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 5
EBB 4

********** Pseudo live ranges #1: **********

  BB 4
  BB 3
   Insn 31: point = 0, n_alt = -1
   Insn 26: point = 0, n_alt = 0
   Insn 25: point = 0, n_alt = 1
   Insn 24: point = 0, n_alt = 4
   Insn 23: point = 0, n_alt = -2
   Insn 22: point = 1, n_alt = 0
   Insn 21: point = 3, n_alt = 3
   Insn 20: point = 4, n_alt = 0
   Insn 19: point = 4, n_alt = -2
   Insn 18: point = 5, n_alt = 3
   Insn 17: point = 7, n_alt = 3
   Insn 16: point = 8, n_alt = 0
   Insn 15: point = 8, n_alt = -2
   Insn 14: point = 9, n_alt = 3
   Insn 13: point = 11, n_alt = 3
  BB 5
   Insn 35: point = 12, n_alt = -1
  BB 2
   Insn 7: point = 12, n_alt = -1
   Insn 6: point = 12, n_alt = 1
   Insn 2: point = 12, n_alt = 5
 r87: [8..9]
 r88: [4..5]
 r89: [0..1]
 r90: [10..11]
 r91: [6..7]
 r92: [2..3]
Compressing live ranges: from 12 to 12 - 100%
Ranges after the compression:
 r87: [8..9]
 r88: [4..5]
 r89: [0..1]
 r90: [10..11]
 r91: [6..7]
 r92: [2..3]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=16, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 14
changing reg in insn 15
changing reg in insn 18
changing reg in insn 19
changing reg in insn 22
changing reg in insn 23
changing reg in insn 13
changing reg in insn 14
changing reg in insn 17
changing reg in insn 18
changing reg in insn 21
changing reg in insn 22
starting the processing of deferred insns
ending the processing of deferred insns


printPostOrder

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={11d,7u} r1={4d} r2={4d} r4={5d,1u} r5={7d,4u} r6={1d,10u} r7={1d,8u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={4d,1u} r18={3d} r19={3d} r20={1d,1u} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} 
;;    total ref usage 278{246d,32u,0e} in 19{16 regular + 3 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [2 node+0 S8 A64])
        (reg:DI 5 di [ node ])) "test1.c":266 81 {*movdi_internal}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                    (const_int -8 [0xfffffffffffffff8])) [2 node+0 S8 A64])
            (const_int 0 [0]))) "test1.c":267 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 7 6 12 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 34)
            (pc))) "test1.c":267 627 {*jcc_1}
     (nil)
 -> 34)
;;  succ:       5
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92
(note 12 7 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (set (reg/f:DI 0 ax [90])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [2 node+0 S8 A64])) "test1.c":269 81 {*movdi_internal}
     (nil))
(insn 14 13 15 3 (set (reg/f:DI 0 ax [orig:87 _1 ] [87])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [90])
                (const_int 8 [0x8])) [2 node_5(D)->left+0 S8 A64])) "test1.c":269 81 {*movdi_internal}
     (nil))
(insn 15 14 16 3 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:87 _1 ] [87])) "test1.c":269 81 {*movdi_internal}
     (nil))
(call_insn 16 15 17 3 (call (mem:QI (symbol_ref:DI ("printPostOrder") [flags 0x3]  <function_decl 0x7fddd77fa500 printPostOrder>) [0 printPostOrder S1 A8])
        (const_int 0 [0])) "test1.c":269 665 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 17 16 18 3 (set (reg/f:DI 0 ax [91])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [2 node+0 S8 A64])) "test1.c":270 81 {*movdi_internal}
     (nil))
(insn 18 17 19 3 (set (reg/f:DI 0 ax [orig:88 _2 ] [88])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [91])
                (const_int 16 [0x10])) [2 node_5(D)->right+0 S8 A64])) "test1.c":270 81 {*movdi_internal}
     (nil))
(insn 19 18 20 3 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:88 _2 ] [88])) "test1.c":270 81 {*movdi_internal}
     (nil))
(call_insn 20 19 21 3 (call (mem:QI (symbol_ref:DI ("printPostOrder") [flags 0x3]  <function_decl 0x7fddd77fa500 printPostOrder>) [0 printPostOrder S1 A8])
        (const_int 0 [0])) "test1.c":270 665 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 21 20 22 3 (set (reg/f:DI 0 ax [92])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [2 node+0 S8 A64])) "test1.c":271 81 {*movdi_internal}
     (nil))
(insn 22 21 23 3 (set (reg:SI 0 ax [orig:89 _3 ] [89])
        (mem:SI (reg/f:DI 0 ax [92]) [1 node_5(D)->key+0 S4 A64])) "test1.c":271 82 {*movsi_internal}
     (nil))
(insn 23 22 24 3 (set (reg:SI 4 si)
        (reg:SI 0 ax [orig:89 _3 ] [89])) "test1.c":271 82 {*movsi_internal}
     (nil))
(insn 24 23 25 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7fddd7490f30 *.LC3>)) "test1.c":271 81 {*movdi_internal}
     (nil))
(insn 25 24 26 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) "test1.c":271 84 {*movqi_internal}
     (nil))
(call_insn 26 25 31 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fddd76aef00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "test1.c":271 676 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(jump_insn 31 26 32 3 (set (pc)
        (label_ref 29)) 659 {jump}
     (nil)
 -> 29)
;;  succ:       4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 32 31 34)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 34 32 33 5 71 (nil) [1 uses])
(note 33 34 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 35 33 29 5 (const_int 0 [0]) "test1.c":268 694 {nop}
     (nil))
;;  succ:       4 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 1, flags: (RTL, MODIFIED)
;;  pred:       5 [100.0%]  (FALLTHRU)
;;              3
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 29 35 30 4 68 (nil) [1 uses])
(note 30 29 36 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 36 30 0 NOTE_INSN_DELETED)

;; Function main (main, funcdef_no=21, decl_uid=2837, cgraph_uid=21, symbol_order=21)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=64, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=48, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 10:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 12:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 14:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 16:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 18:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 20:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 22:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 24:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 26:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (1) rBwBz {*call_value}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 28:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 30:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 31:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) rm  (1) re {*cmpsi_1}
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 36:  (0) r  (1) rmWz {*zero_extendsidi2}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 37:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 38:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 40:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 41:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 42
	 Choosing alt 0 in insn 42:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) rBw {*tablejump_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 49:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 50:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 56:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 57:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (1) rBwBz {*call_value}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 59:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 61:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 62:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 63:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 64:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 65:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 68:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 70:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 71:  (0) ?mr {*cmpdi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 74:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 76:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 77:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 78:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 83:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 84:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 85:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 86:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 88:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 89:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 90:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 91:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 92:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 95:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 97:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 98:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 99:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 100:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 101:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 103:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 104:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 105:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 112:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 113:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 114:  (1) rBwBz {*call_value}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 115:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 117:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 118:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 119:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 120:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 121:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 124:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 126:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 127:  (0) ?mr {*cmpdi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 130:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 132:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 133:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 134:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 139:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 140:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 141:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 142:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 144:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 145:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 146:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 147:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 148:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 151:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 153:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 154:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 155:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 156:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 157:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 159:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 160:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 161:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 168:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 169:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 170:  (1) rBwBz {*call_value}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 171:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 173:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 174:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 175:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 176:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 177:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 180:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 182:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 183:  (0) ?mr {*cmpdi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 186:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 188:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 189:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 190:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 195:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 196:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 197:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 200:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 201:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 202:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 203:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 204:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 205:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 206:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 208:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 209:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 210:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 217:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 218:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 219:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 221:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 226:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 227:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 228:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 230:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 235:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 236:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 237:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 239:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 244:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 245:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 246:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 247:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 249:  (0) rBwBz {*call}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 254:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 255:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 256:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 260:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 263:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5
EBB 6
EBB 7
EBB 8
EBB 9
EBB 10
EBB 11
EBB 12
EBB 13
EBB 14
EBB 15
EBB 16
EBB 17
EBB 18
EBB 19
EBB 20
EBB 21
EBB 22
EBB 25
EBB 23
EBB 24

********** Pseudo live ranges #1: **********

  BB 24
   Insn 271: point = 0, n_alt = -1
   Insn 270: point = 0, n_alt = -2
   Insn 266: point = 1, n_alt = -2
   Insn 263: point = 3, n_alt = 0
  BB 23
   Insn 261: point = 4, n_alt = -1
   Insn 260: point = 4, n_alt = 0
  BB 21
   Insn 296: point = 4, n_alt = -1
   Insn 249: point = 4, n_alt = 0
   Insn 248: point = 4, n_alt = -2
   Insn 247: point = 5, n_alt = 0
   Insn 246: point = 5, n_alt = 3
   Insn 245: point = 6, n_alt = 0
   Insn 244: point = 6, n_alt = 4
  BB 20
   Insn 294: point = 6, n_alt = -1
   Insn 239: point = 6, n_alt = 0
   Insn 238: point = 6, n_alt = -2
   Insn 237: point = 7, n_alt = 3
   Insn 236: point = 8, n_alt = 0
   Insn 235: point = 8, n_alt = 4
  BB 19
   Insn 292: point = 8, n_alt = -1
   Insn 230: point = 8, n_alt = 0
   Insn 229: point = 8, n_alt = -2
   Insn 228: point = 9, n_alt = 3
   Insn 227: point = 10, n_alt = 0
   Insn 226: point = 10, n_alt = 4
  BB 18
   Insn 290: point = 10, n_alt = -1
   Insn 221: point = 10, n_alt = 0
   Insn 220: point = 10, n_alt = -2
   Insn 219: point = 11, n_alt = 3
   Insn 218: point = 12, n_alt = 0
   Insn 217: point = 12, n_alt = 4
  BB 17
   Insn 288: point = 12, n_alt = -1
  BB 15
   Insn 286: point = 12, n_alt = -1
   Insn 190: point = 12, n_alt = 0
   Insn 189: point = 12, n_alt = 1
   Insn 188: point = 12, n_alt = 4
   Insn 187: point = 12, n_alt = -2
   Insn 186: point = 13, n_alt = 0
  BB 16
   Insn 210: point = 14, n_alt = 0
   Insn 209: point = 14, n_alt = 0
   Insn 208: point = 14, n_alt = 0
   Insn 207: point = 14, n_alt = -2
   Insn 206: point = 15, n_alt = 0
   Insn 205: point = 15, n_alt = 3
   Insn 204: point = 16, n_alt = 0
   Insn 203: point = 16, n_alt = 4
   Insn 202: point = 16, n_alt = 0
   Insn 201: point = 16, n_alt = 1
   Insn 200: point = 16, n_alt = 4
   Insn 199: point = 16, n_alt = -2
   Insn 198: point = 17, n_alt = -2
   Insn 197: point = 18, n_alt = 0
   Insn 196: point = 19, n_alt = 0
   Insn 195: point = 21, n_alt = 3
  BB 14
   Insn 184: point = 22, n_alt = -1
   Insn 183: point = 22, n_alt = 1
   Insn 182: point = 22, n_alt = 5
   Insn 181: point = 23, n_alt = -2
   Insn 180: point = 24, n_alt = 0
   Insn 179: point = 24, n_alt = -2
   Insn 178: point = 25, n_alt = -2
   Insn 177: point = 26, n_alt = 3
   Insn 176: point = 27, n_alt = 0
   Insn 175: point = 28, n_alt = 0
   Insn 174: point = 28, n_alt = 1
   Insn 173: point = 28, n_alt = 4
   Insn 172: point = 28, n_alt = -2
   Insn 171: point = 29, n_alt = 3
   Insn 170: point = 30, n_alt = 0
   Insn 169: point = 30, n_alt = 1
   Insn 168: point = 30, n_alt = 4
  BB 13
   Insn 284: point = 30, n_alt = -1
  BB 11
   Insn 282: point = 30, n_alt = -1
   Insn 134: point = 30, n_alt = 0
   Insn 133: point = 30, n_alt = 1
   Insn 132: point = 30, n_alt = 4
   Insn 131: point = 30, n_alt = -2
   Insn 130: point = 31, n_alt = 0
  BB 12
   Insn 161: point = 32, n_alt = 0
   Insn 160: point = 32, n_alt = 0
   Insn 159: point = 32, n_alt = 0
   Insn 158: point = 32, n_alt = -2
   Insn 157: point = 33, n_alt = 0
   Insn 156: point = 33, n_alt = 3
   Insn 155: point = 34, n_alt = 0
   Insn 154: point = 34, n_alt = 4
   Insn 153: point = 34, n_alt = 5
   Insn 152: point = 35, n_alt = -2
   Insn 151: point = 36, n_alt = 0
   Insn 150: point = 36, n_alt = -2
   Insn 149: point = 37, n_alt = -2
   Insn 148: point = 38, n_alt = 3
   Insn 147: point = 39, n_alt = 0
   Insn 146: point = 40, n_alt = 0
   Insn 145: point = 40, n_alt = 0
   Insn 144: point = 40, n_alt = 0
   Insn 143: point = 40, n_alt = -2
   Insn 142: point = 41, n_alt = 0
   Insn 141: point = 41, n_alt = 3
   Insn 140: point = 42, n_alt = 0
   Insn 139: point = 42, n_alt = 4
  BB 10
   Insn 128: point = 42, n_alt = -1
   Insn 127: point = 42, n_alt = 1
   Insn 126: point = 42, n_alt = 5
   Insn 125: point = 43, n_alt = -2
   Insn 124: point = 44, n_alt = 0
   Insn 123: point = 44, n_alt = -2
   Insn 122: point = 45, n_alt = -2
   Insn 121: point = 46, n_alt = 3
   Insn 120: point = 47, n_alt = 0
   Insn 119: point = 48, n_alt = 0
   Insn 118: point = 48, n_alt = 1
   Insn 117: point = 48, n_alt = 4
   Insn 116: point = 48, n_alt = -2
   Insn 115: point = 49, n_alt = 3
   Insn 114: point = 50, n_alt = 0
   Insn 113: point = 50, n_alt = 1
   Insn 112: point = 50, n_alt = 4
  BB 9
   Insn 280: point = 50, n_alt = -1
  BB 7
   Insn 278: point = 50, n_alt = -1
   Insn 78: point = 50, n_alt = 0
   Insn 77: point = 50, n_alt = 1
   Insn 76: point = 50, n_alt = 4
   Insn 75: point = 50, n_alt = -2
   Insn 74: point = 51, n_alt = 0
  BB 8
   Insn 105: point = 52, n_alt = 0
   Insn 104: point = 52, n_alt = 0
   Insn 103: point = 52, n_alt = 0
   Insn 102: point = 52, n_alt = -2
   Insn 101: point = 53, n_alt = 0
   Insn 100: point = 53, n_alt = 3
   Insn 99: point = 54, n_alt = 0
   Insn 98: point = 54, n_alt = 4
   Insn 97: point = 54, n_alt = 5
   Insn 96: point = 55, n_alt = -2
   Insn 95: point = 56, n_alt = 0
   Insn 94: point = 56, n_alt = -2
   Insn 93: point = 57, n_alt = -2
   Insn 92: point = 58, n_alt = 3
   Insn 91: point = 59, n_alt = 0
   Insn 90: point = 60, n_alt = 0
   Insn 89: point = 60, n_alt = 0
   Insn 88: point = 60, n_alt = 0
   Insn 87: point = 60, n_alt = -2
   Insn 86: point = 61, n_alt = 0
   Insn 85: point = 61, n_alt = 3
   Insn 84: point = 62, n_alt = 0
   Insn 83: point = 62, n_alt = 4
  BB 6
   Insn 72: point = 62, n_alt = -1
   Insn 71: point = 62, n_alt = 1
   Insn 70: point = 62, n_alt = 5
   Insn 69: point = 63, n_alt = -2
   Insn 68: point = 64, n_alt = 0
   Insn 67: point = 64, n_alt = -2
   Insn 66: point = 65, n_alt = -2
   Insn 65: point = 66, n_alt = 3
   Insn 64: point = 67, n_alt = 0
   Insn 63: point = 68, n_alt = 0
   Insn 62: point = 68, n_alt = 1
   Insn 61: point = 68, n_alt = 4
   Insn 60: point = 68, n_alt = -2
   Insn 59: point = 69, n_alt = 3
   Insn 58: point = 70, n_alt = 0
   Insn 57: point = 70, n_alt = 1
   Insn 56: point = 70, n_alt = 4
  BB 5
   Insn 276: point = 70, n_alt = -1
   Insn 51: point = 70, n_alt = 0
   Insn 50: point = 70, n_alt = 4
   Insn 49: point = 70, n_alt = 1
  BB 4
   Insn 43: point = 70, n_alt = 0
   Insn 42: point = 71, n_alt = 0
   Insn 41: point = 73, n_alt = 4
   Insn 40: point = 74, n_alt = 1
   Insn 39: point = 76, n_alt = 0
   Insn 38: point = 78, n_alt = 4
   Insn 37: point = 79, n_alt = 1
   Insn 36: point = 81, n_alt = 3
  BB 2
   Insn 274: point = 84, n_alt = -1
   Insn 6: point = 84, n_alt = 5
   Insn 5: point = 84, n_alt = 1
  BB 25
   Insn 299: point = 84, n_alt = -1
  BB 22
   Insn 256: point = 84, n_alt = 0
   Insn 255: point = 84, n_alt = 4
   Insn 254: point = 84, n_alt = 1
  BB 3
   Insn 35: point = 84, n_alt = -1
   Insn 34: point = 84, n_alt = 0
   Insn 33: point = 84, n_alt = 0
   Insn 32: point = 85, n_alt = 0
   Insn 31: point = 85, n_alt = 1
   Insn 30: point = 85, n_alt = 4
   Insn 29: point = 85, n_alt = -2
   Insn 28: point = 86, n_alt = 3
   Insn 27: point = 87, n_alt = 0
   Insn 26: point = 87, n_alt = 4
   Insn 25: point = 87, n_alt = 0
   Insn 24: point = 87, n_alt = 4
   Insn 23: point = 87, n_alt = 0
   Insn 22: point = 87, n_alt = 4
   Insn 21: point = 87, n_alt = 0
   Insn 20: point = 87, n_alt = 4
   Insn 19: point = 87, n_alt = 0
   Insn 18: point = 87, n_alt = 4
   Insn 17: point = 87, n_alt = 0
   Insn 16: point = 87, n_alt = 4
   Insn 15: point = 87, n_alt = 0
   Insn 14: point = 87, n_alt = 4
   Insn 13: point = 87, n_alt = 0
   Insn 12: point = 87, n_alt = 4
   Insn 11: point = 87, n_alt = 0
   Insn 10: point = 87, n_alt = 4
 r87: [82..84]
 r88: [65..67]
 r89: [50..51]
 r90: [57..59]
 r91: [45..47]
 r92: [30..31]
 r93: [37..39]
 r94: [25..27]
 r95: [12..13]
 r96: [17..19]
 r97: [16..18]
 r98: [2..3]
 r99: [0..1]
 r100: [85..86]
 r101: [80..81]
 r102: [77..79]
 r103: [77..78]
 r104: [75..76]
 r105: [72..74]
 r106: [70..71]
 r107: [72..73]
 r108: [68..69]
 r109: [64..66]
 r110: [62..63]
 r111: [60..61]
 r112: [56..58]
 r113: [54..55]
 r114: [52..53]
 r115: [48..49]
 r116: [44..46]
 r117: [42..43]
 r118: [40..41]
 r119: [36..38]
 r120: [34..35]
 r121: [32..33]
 r122: [28..29]
 r123: [24..26]
 r124: [22..23]
 r125: [20..21]
 r126: [14..15]
 r127: [10..11]
 r128: [8..9]
 r129: [6..7]
 r130: [4..5]
Compressing live ranges: from 87 to 72 - 82%
Ranges after the compression:
 r87: [68..69]
 r88: [54..55]
 r89: [42..43]
 r90: [48..49]
 r91: [38..39]
 r92: [26..27]
 r93: [32..33]
 r94: [22..23]
 r95: [12..13]
 r96: [16..17]
 r97: [16..17]
 r98: [2..3]
 r99: [0..1]
 r100: [70..71]
 r101: [66..67]
 r102: [64..65]
 r103: [64..65]
 r104: [62..63]
 r105: [60..61]
 r106: [58..59]
 r107: [60..61]
 r108: [56..57]
 r109: [54..55]
 r110: [52..53]
 r111: [50..51]
 r112: [48..49]
 r113: [46..47]
 r114: [44..45]
 r115: [40..41]
 r116: [38..39]
 r117: [36..37]
 r118: [34..35]
 r119: [32..33]
 r120: [30..31]
 r121: [28..29]
 r122: [24..25]
 r123: [22..23]
 r124: [20..21]
 r125: [18..19]
 r126: [14..15]
 r127: [10..11]
 r128: [8..9]
 r129: [6..7]
 r130: [4..5]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=64, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=48, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 33
changing reg in insn 36
changing reg in insn 34
changing reg in insn 64
changing reg in insn 66
changing reg in insn 74
changing reg in insn 75
changing reg in insn 91
changing reg in insn 93
changing reg in insn 120
changing reg in insn 122
changing reg in insn 130
changing reg in insn 131
changing reg in insn 147
changing reg in insn 149
changing reg in insn 176
changing reg in insn 178
changing reg in insn 186
changing reg in insn 187
changing reg in insn 196
changing reg in insn 198
changing reg in insn 197
changing reg in insn 199
changing reg in insn 263
changing reg in insn 266
changing reg in insn 266
changing reg in insn 270
changing reg in insn 28
changing reg in insn 29
changing reg in insn 36
changing reg in insn 37
changing reg in insn 37
changing reg in insn 39
changing reg in insn 38
changing reg in insn 39
changing reg in insn 39
changing reg in insn 40
changing reg in insn 40
changing reg in insn 42
changing reg in insn 43
changing reg in insn 41
changing reg in insn 59
changing reg in insn 60
changing reg in insn 65
changing reg in insn 67
changing reg in insn 69
changing reg in insn 70
changing reg in insn 85
changing reg in insn 87
changing reg in insn 92
changing reg in insn 94
changing reg in insn 96
changing reg in insn 97
changing reg in insn 100
changing reg in insn 102
changing reg in insn 115
changing reg in insn 116
changing reg in insn 121
changing reg in insn 123
changing reg in insn 125
changing reg in insn 126
changing reg in insn 141
changing reg in insn 143
changing reg in insn 148
changing reg in insn 150
changing reg in insn 152
changing reg in insn 153
changing reg in insn 156
changing reg in insn 158
changing reg in insn 171
changing reg in insn 172
changing reg in insn 177
changing reg in insn 179
changing reg in insn 181
changing reg in insn 182
changing reg in insn 195
changing reg in insn 196
changing reg in insn 205
changing reg in insn 207
changing reg in insn 219
changing reg in insn 220
changing reg in insn 228
changing reg in insn 229
changing reg in insn 237
changing reg in insn 238
changing reg in insn 246
changing reg in insn 248
deleting insn with uid = 69.
deleting insn with uid = 96.
deleting insn with uid = 125.
deleting insn with uid = 152.
deleting insn with uid = 181.
deleting insn with uid = 198.
deleting insn with uid = 266.
starting the processing of deferred insns
ending the processing of deferred insns


main

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={93d,49u} r1={59d,8u} r2={51d} r4={70d,19u} r5={101d,50u} r6={1d,67u} r7={1d,75u} r8={50d} r9={50d} r10={50d} r11={50d} r12={50d} r13={50d} r14={50d} r15={50d} r17={61d,5u} r18={50d} r19={50d} r20={1d,1u} r21={51d} r22={51d} r23={51d} r24={51d} r25={51d} r26={51d} r27={51d} r28={51d} r29={50d} r30={50d} r31={50d} r32={50d} r33={50d} r34={50d} r35={50d} r36={50d} r37={51d} r38={51d} r39={50d} r40={50d} r45={50d} r46={50d} r47={50d} r48={50d} r49={50d} r50={50d} r51={50d} r52={50d} r53={50d} r54={50d} r55={50d} r56={50d} r57={50d} r58={50d} r59={50d} r60={50d} r61={50d} r62={50d} r63={50d} r64={50d} r65={50d} r66={50d} r67={50d} r68={50d} r69={50d} r70={50d} r71={50d} r72={50d} r73={50d} r74={50d} r75={50d} r76={50d} r77={50d} r78={50d} r79={50d} r80={50d} 
;;    total ref usage 4022{3748d,274u,0e} in 203{153 regular + 50 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 flag+0 S4 A32])
        (const_int 1 [0x1])) "test1.c":277 82 {*movsi_internal}
     (nil))
(insn 6 5 274 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [2 root+0 S8 A64])
        (const_int 0 [0])) "test1.c":281 81 {*movdi_internal}
     (nil))
(jump_insn 274 6 275 2 (set (pc)
        (label_ref 257)) "test1.c":284 659 {jump}
     (nil)
 -> 257)
;;  succ:       23 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 275 274 259)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       23
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 100
(code_label 259 275 9 3 90 (nil) [1 uses])
(note 9 259 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7fddd7497ea0 *.LC4>)) "test1.c":286 81 {*movdi_internal}
     (nil))
(call_insn 11 10 12 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fddd76af600 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "test1.c":286 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 12 11 13 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7fddd7497f30 *.LC5>)) "test1.c":288 81 {*movdi_internal}
     (nil))
(call_insn 13 12 14 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fddd76af600 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "test1.c":288 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 14 13 15 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7fddd74a0000 *.LC6>)) "test1.c":289 81 {*movdi_internal}
     (nil))
(call_insn 15 14 16 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fddd76af600 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "test1.c":289 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 16 15 17 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fddd74a0090 *.LC7>)) "test1.c":290 81 {*movdi_internal}
     (nil))
(call_insn 17 16 18 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fddd76af600 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "test1.c":290 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 18 17 19 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7fddd74a0120 *.LC8>)) "test1.c":291 81 {*movdi_internal}
     (nil))
(call_insn 19 18 20 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fddd76af600 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "test1.c":291 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 20 19 21 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7fddd74a01b0 *.LC9>)) "test1.c":292 81 {*movdi_internal}
     (nil))
(call_insn 21 20 22 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fddd76af600 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "test1.c":292 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 22 21 23 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7fddd74a0240 *.LC10>)) "test1.c":293 81 {*movdi_internal}
     (nil))
(call_insn 23 22 24 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fddd76af600 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "test1.c":293 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 24 23 25 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7fddd74a02d0 *.LC11>)) "test1.c":294 81 {*movdi_internal}
     (nil))
(call_insn 25 24 26 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fddd76af600 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "test1.c":294 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 26 25 27 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7fddd74a0360 *.LC12>)) "test1.c":296 81 {*movdi_internal}
     (nil))
(call_insn 27 26 28 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fddd76af600 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "test1.c":296 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 28 27 29 3 (parallel [
            (set (reg:DI 0 ax [100])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -28 [0xffffffffffffffe4])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":297 218 {*adddi_1}
     (nil))
(insn 29 28 30 3 (set (reg:DI 4 si)
        (reg:DI 0 ax [100])) "test1.c":297 81 {*movdi_internal}
     (nil))
(insn 30 29 31 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fddd745d5a0 *.LC2>)) "test1.c":297 81 {*movdi_internal}
     (nil))
(insn 31 30 32 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) "test1.c":297 84 {*movqi_internal}
     (nil))
(call_insn 32 31 33 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0x7fddd76afb00 scanf>) [0 __builtin_scanf S1 A8])
            (const_int 0 [0]))) "test1.c":297 676 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 33 32 34 3 (set (reg:SI 0 ax [orig:87 choice.1_1 ] [87])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 choice+0 S4 A32])) "test1.c":299 82 {*movsi_internal}
     (nil))
(insn 34 33 35 3 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 0 ax [orig:87 choice.1_1 ] [87])
            (const_int 7 [0x7]))) "test1.c":299 7 {*cmpsi_1}
     (nil))
(jump_insn 35 34 273 3 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 252)
            (pc))) "test1.c":299 627 {*jcc_1}
     (nil)
 -> 252)
;;  succ:       22
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 17 [flags] 101 102 103 104 105 106 107
(note 273 35 36 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 36 273 37 4 (set (reg:DI 0 ax [101])
        (zero_extend:DI (reg:SI 0 ax [orig:87 choice.1_1 ] [87]))) "test1.c":299 131 {*zero_extendsidi2}
     (nil))
(insn 37 36 38 4 (parallel [
            (set (reg:DI 1 dx [102])
                (ashift:DI (reg:DI 0 ax [101])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":299 522 {*ashldi3_1}
     (nil))
(insn 38 37 39 4 (set (reg:DI 0 ax [103])
        (label_ref:DI 44)) "test1.c":299 81 {*movdi_internal}
     (insn_list:REG_LABEL_OPERAND 44 (nil)))
(insn 39 38 40 4 (set (reg:SI 0 ax [104])
        (mem/u/c:SI (plus:DI (reg:DI 1 dx [102])
                (reg:DI 0 ax [103])) [0  S4 A8])) "test1.c":299 82 {*movsi_internal}
     (nil))
(insn 40 39 41 4 (set (reg:DI 1 dx [105])
        (sign_extend:DI (reg:SI 0 ax [104]))) "test1.c":299 145 {*extendsidi2_rex64}
     (nil))
(insn 41 40 42 4 (set (reg:DI 0 ax [107])
        (label_ref:DI 44)) "test1.c":299 81 {*movdi_internal}
     (insn_list:REG_LABEL_OPERAND 44 (nil)))
(insn 42 41 43 4 (parallel [
            (set (reg:DI 0 ax [106])
                (plus:DI (reg:DI 0 ax [107])
                    (reg:DI 1 dx [105])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":299 218 {*adddi_1}
     (nil))
(jump_insn 43 42 44 4 (parallel [
            (set (pc)
                (reg:DI 0 ax [106]))
            (use (label_ref 44))
        ]) "test1.c":299 663 {*tablejump_1}
     (nil)
 -> 44)
;;  succ:       21
;;              5
;;              6
;;              10
;;              14
;;              18
;;              19
;;              20
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Insn is not within a basic block
(code_label 44 43 45 76 (nil) [3 uses])
;; Insn is not within a basic block
(jump_table_data 45 44 46 (addr_diff_vec:SI (label_ref:DI 44)
         [
            (label_ref:DI 47)
            (label_ref:DI 54)
            (label_ref:DI 110)
            (label_ref:DI 166)
            (label_ref:DI 215)
            (label_ref:DI 224)
            (label_ref:DI 233)
            (label_ref:DI 242)
        ]
        (const_int 0 [0])
        (const_int 0 [0])))
(barrier 46 45 47)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 47 46 48 5 75 (nil) [1 uses])
(note 48 47 49 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 5 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 flag+0 S4 A32])
        (const_int 0 [0])) "test1.c":303 82 {*movsi_internal}
     (nil))
(insn 50 49 51 5 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7fddd74a03f0 *.LC13>)) "test1.c":304 81 {*movdi_internal}
     (nil))
(call_insn 51 50 276 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fddd76af600 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "test1.c":304 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 276 51 277 5 (set (pc)
        (label_ref 257)) "test1.c":305 659 {jump}
     (nil)
 -> 257)
;;  succ:       23 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 277 276 54)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 108 109 110
(code_label 54 277 55 6 77 (nil) [1 uses])
(note 55 54 56 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 6 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7fddd74a0480 *.LC14>)) "test1.c":310 81 {*movdi_internal}
     (nil))
(insn 57 56 58 6 (set (reg:QI 0 ax)
        (const_int 0 [0])) "test1.c":310 84 {*movqi_internal}
     (nil))
(call_insn 58 57 59 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fddd76aef00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "test1.c":310 676 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 59 58 60 6 (parallel [
            (set (reg:DI 0 ax [108])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":311 218 {*adddi_1}
     (nil))
(insn 60 59 61 6 (set (reg:DI 4 si)
        (reg:DI 0 ax [108])) "test1.c":311 81 {*movdi_internal}
     (nil))
(insn 61 60 62 6 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fddd745d5a0 *.LC2>)) "test1.c":311 81 {*movdi_internal}
     (nil))
(insn 62 61 63 6 (set (reg:QI 0 ax)
        (const_int 0 [0])) "test1.c":311 84 {*movqi_internal}
     (nil))
(call_insn 63 62 64 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0x7fddd76afb00 scanf>) [0 __builtin_scanf S1 A8])
            (const_int 0 [0]))) "test1.c":311 676 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 64 63 65 6 (set (reg:SI 1 dx [orig:88 insertNum.2_2 ] [88])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 insertNum+0 S4 A64])) "test1.c":313 82 {*movsi_internal}
     (nil))
(insn 65 64 66 6 (set (reg:DI 0 ax [109])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [2 root+0 S8 A64])) "test1.c":313 81 {*movdi_internal}
     (nil))
(insn 66 65 67 6 (set (reg:SI 4 si)
        (reg:SI 1 dx [orig:88 insertNum.2_2 ] [88])) "test1.c":313 82 {*movsi_internal}
     (nil))
(insn 67 66 68 6 (set (reg:DI 5 di)
        (reg:DI 0 ax [109])) "test1.c":313 81 {*movdi_internal}
     (nil))
(call_insn 68 67 70 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("findNode") [flags 0x3]  <function_decl 0x7fddd77eef00 findNode>) [0 findNode S1 A8])
            (const_int 0 [0]))) "test1.c":313 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 70 68 71 6 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 tempNode+0 S8 A64])
        (reg:DI 0 ax [110])) "test1.c":313 81 {*movdi_internal}
     (nil))
(insn 71 70 72 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                    (const_int -24 [0xffffffffffffffe8])) [2 tempNode+0 S8 A64])
            (const_int 0 [0]))) "test1.c":315 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 72 71 73 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 81)
            (pc))) "test1.c":315 627 {*jcc_1}
     (nil)
 -> 81)
;;  succ:       7 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 89
(note 73 72 74 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 75 7 (set (reg:SI 0 ax [orig:89 insertNum.3_3 ] [89])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 insertNum+0 S4 A64])) "test1.c":316 82 {*movsi_internal}
     (nil))
(insn 75 74 76 7 (set (reg:SI 4 si)
        (reg:SI 0 ax [orig:89 insertNum.3_3 ] [89])) "test1.c":316 82 {*movsi_internal}
     (nil))
(insn 76 75 77 7 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7fddd74a0510 *.LC15>)) "test1.c":316 81 {*movdi_internal}
     (nil))
(insn 77 76 78 7 (set (reg:QI 0 ax)
        (const_int 0 [0])) "test1.c":316 84 {*movqi_internal}
     (nil))
(call_insn 78 77 278 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fddd76aef00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "test1.c":316 676 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(jump_insn 278 78 279 7 (set (pc)
        (label_ref 106)) 659 {jump}
     (nil)
 -> 106)
;;  succ:       9 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 279 278 81)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL, MODIFIED)
;;  pred:       6
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 90 111 112 113 114
(code_label 81 279 82 8 84 (nil) [1 uses])
(note 82 81 83 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 8 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7fddd74a05a0 *.LC16>)) "test1.c":319 81 {*movdi_internal}
     (nil))
(call_insn 84 83 85 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fddd76af600 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "test1.c":319 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 85 84 86 8 (set (reg:DI 0 ax [111])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [2 root+0 S8 A64])) "test1.c":320 81 {*movdi_internal}
     (nil))
(insn 86 85 87 8 (set (reg:SI 4 si)
        (const_int 1 [0x1])) "test1.c":320 82 {*movsi_internal}
     (nil))
(insn 87 86 88 8 (set (reg:DI 5 di)
        (reg:DI 0 ax [111])) "test1.c":320 81 {*movdi_internal}
     (nil))
(call_insn 88 87 89 8 (call (mem:QI (symbol_ref:DI ("printAVL") [flags 0x3]  <function_decl 0x7fddd77ee100 printAVL>) [0 printAVL S1 A8])
        (const_int 0 [0])) "test1.c":320 665 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 89 88 90 8 (set (reg:SI 5 di)
        (const_int 10 [0xa])) "test1.c":321 82 {*movsi_internal}
     (nil))
(call_insn 90 89 91 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7fddd76af200 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) "test1.c":321 676 {*call_value}
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 91 90 92 8 (set (reg:SI 1 dx [orig:90 insertNum.4_4 ] [90])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 insertNum+0 S4 A64])) "test1.c":323 82 {*movsi_internal}
     (nil))
(insn 92 91 93 8 (set (reg:DI 0 ax [112])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [2 root+0 S8 A64])) "test1.c":323 81 {*movdi_internal}
     (nil))
(insn 93 92 94 8 (set (reg:SI 4 si)
        (reg:SI 1 dx [orig:90 insertNum.4_4 ] [90])) "test1.c":323 82 {*movsi_internal}
     (nil))
(insn 94 93 95 8 (set (reg:DI 5 di)
        (reg:DI 0 ax [112])) "test1.c":323 81 {*movdi_internal}
     (nil))
(call_insn 95 94 97 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("insert") [flags 0x3]  <function_decl 0x7fddd77eeb00 insert>) [0 insert S1 A8])
            (const_int 0 [0]))) "test1.c":323 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 97 95 98 8 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [2 root+0 S8 A64])
        (reg:DI 0 ax [113])) "test1.c":323 81 {*movdi_internal}
     (nil))
(insn 98 97 99 8 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7fddd74a05a0 *.LC16>)) "test1.c":324 81 {*movdi_internal}
     (nil))
(call_insn 99 98 100 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fddd76af600 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "test1.c":324 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 100 99 101 8 (set (reg:DI 0 ax [114])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [2 root+0 S8 A64])) "test1.c":325 81 {*movdi_internal}
     (nil))
(insn 101 100 102 8 (set (reg:SI 4 si)
        (const_int 1 [0x1])) "test1.c":325 82 {*movsi_internal}
     (nil))
(insn 102 101 103 8 (set (reg:DI 5 di)
        (reg:DI 0 ax [114])) "test1.c":325 81 {*movdi_internal}
     (nil))
(call_insn 103 102 104 8 (call (mem:QI (symbol_ref:DI ("printAVL") [flags 0x3]  <function_decl 0x7fddd77ee100 printAVL>) [0 printAVL S1 A8])
        (const_int 0 [0])) "test1.c":325 665 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 104 103 105 8 (set (reg:SI 5 di)
        (const_int 10 [0xa])) "test1.c":326 82 {*movsi_internal}
     (nil))
(call_insn 105 104 106 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7fddd76af200 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) "test1.c":326 676 {*call_value}
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:       9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;;              7 [100.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 106 105 107 9 85 (nil) [1 uses])
(note 107 106 280 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(jump_insn 280 107 281 9 (set (pc)
        (label_ref 257)) "test1.c":329 659 {jump}
     (nil)
 -> 257)
;;  succ:       23 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 281 280 110)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL, MODIFIED)
;;  pred:       4
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 91 115 116 117
(code_label 110 281 111 10 78 (nil) [1 uses])
(note 111 110 112 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 112 111 113 10 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7fddd74a0630 *.LC17>)) "test1.c":334 81 {*movdi_internal}
     (nil))
(insn 113 112 114 10 (set (reg:QI 0 ax)
        (const_int 0 [0])) "test1.c":334 84 {*movqi_internal}
     (nil))
(call_insn 114 113 115 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fddd76aef00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "test1.c":334 676 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 115 114 116 10 (parallel [
            (set (reg:DI 0 ax [115])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":335 218 {*adddi_1}
     (nil))
(insn 116 115 117 10 (set (reg:DI 4 si)
        (reg:DI 0 ax [115])) "test1.c":335 81 {*movdi_internal}
     (nil))
(insn 117 116 118 10 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fddd745d5a0 *.LC2>)) "test1.c":335 81 {*movdi_internal}
     (nil))
(insn 118 117 119 10 (set (reg:QI 0 ax)
        (const_int 0 [0])) "test1.c":335 84 {*movqi_internal}
     (nil))
(call_insn 119 118 120 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0x7fddd76afb00 scanf>) [0 __builtin_scanf S1 A8])
            (const_int 0 [0]))) "test1.c":335 676 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 120 119 121 10 (set (reg:SI 1 dx [orig:91 queryNum.5_5 ] [91])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 queryNum+0 S4 A32])) "test1.c":337 82 {*movsi_internal}
     (nil))
(insn 121 120 122 10 (set (reg:DI 0 ax [116])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [2 root+0 S8 A64])) "test1.c":337 81 {*movdi_internal}
     (nil))
(insn 122 121 123 10 (set (reg:SI 4 si)
        (reg:SI 1 dx [orig:91 queryNum.5_5 ] [91])) "test1.c":337 82 {*movsi_internal}
     (nil))
(insn 123 122 124 10 (set (reg:DI 5 di)
        (reg:DI 0 ax [116])) "test1.c":337 81 {*movdi_internal}
     (nil))
(call_insn 124 123 126 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("findNode") [flags 0x3]  <function_decl 0x7fddd77eef00 findNode>) [0 findNode S1 A8])
            (const_int 0 [0]))) "test1.c":337 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 126 124 127 10 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 tempNode+0 S8 A64])
        (reg:DI 0 ax [117])) "test1.c":337 81 {*movdi_internal}
     (nil))
(insn 127 126 128 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                    (const_int -24 [0xffffffffffffffe8])) [2 tempNode+0 S8 A64])
            (const_int 0 [0]))) "test1.c":339 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 128 127 129 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 137)
            (pc))) "test1.c":339 627 {*jcc_1}
     (nil)
 -> 137)
;;  succ:       11 (FALLTHRU)
;;              12
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 92
(note 129 128 130 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 130 129 131 11 (set (reg:SI 0 ax [orig:92 queryNum.6_6 ] [92])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 queryNum+0 S4 A32])) "test1.c":340 82 {*movsi_internal}
     (nil))
(insn 131 130 132 11 (set (reg:SI 4 si)
        (reg:SI 0 ax [orig:92 queryNum.6_6 ] [92])) "test1.c":340 82 {*movsi_internal}
     (nil))
(insn 132 131 133 11 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7fddd74a06c0 *.LC18>)) "test1.c":340 81 {*movdi_internal}
     (nil))
(insn 133 132 134 11 (set (reg:QI 0 ax)
        (const_int 0 [0])) "test1.c":340 84 {*movqi_internal}
     (nil))
(call_insn 134 133 282 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fddd76aef00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "test1.c":340 676 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(jump_insn 282 134 283 11 (set (pc)
        (label_ref 162)) 659 {jump}
     (nil)
 -> 162)
;;  succ:       13 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 283 282 137)
;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL, MODIFIED)
;;  pred:       10
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 93 118 119 120 121
(code_label 137 283 138 12 86 (nil) [1 uses])
(note 138 137 139 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 139 138 140 12 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7fddd74a05a0 *.LC16>)) "test1.c":343 81 {*movdi_internal}
     (nil))
(call_insn 140 139 141 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fddd76af600 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "test1.c":343 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 141 140 142 12 (set (reg:DI 0 ax [118])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [2 root+0 S8 A64])) "test1.c":344 81 {*movdi_internal}
     (nil))
(insn 142 141 143 12 (set (reg:SI 4 si)
        (const_int 1 [0x1])) "test1.c":344 82 {*movsi_internal}
     (nil))
(insn 143 142 144 12 (set (reg:DI 5 di)
        (reg:DI 0 ax [118])) "test1.c":344 81 {*movdi_internal}
     (nil))
(call_insn 144 143 145 12 (call (mem:QI (symbol_ref:DI ("printAVL") [flags 0x3]  <function_decl 0x7fddd77ee100 printAVL>) [0 printAVL S1 A8])
        (const_int 0 [0])) "test1.c":344 665 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 145 144 146 12 (set (reg:SI 5 di)
        (const_int 10 [0xa])) "test1.c":345 82 {*movsi_internal}
     (nil))
(call_insn 146 145 147 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7fddd76af200 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) "test1.c":345 676 {*call_value}
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 147 146 148 12 (set (reg:SI 1 dx [orig:93 queryNum.7_7 ] [93])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 queryNum+0 S4 A32])) "test1.c":346 82 {*movsi_internal}
     (nil))
(insn 148 147 149 12 (set (reg:DI 0 ax [119])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [2 root+0 S8 A64])) "test1.c":346 81 {*movdi_internal}
     (nil))
(insn 149 148 150 12 (set (reg:SI 4 si)
        (reg:SI 1 dx [orig:93 queryNum.7_7 ] [93])) "test1.c":346 82 {*movsi_internal}
     (nil))
(insn 150 149 151 12 (set (reg:DI 5 di)
        (reg:DI 0 ax [119])) "test1.c":346 81 {*movdi_internal}
     (nil))
(call_insn 151 150 153 12 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("delete") [flags 0x3]  <function_decl 0x7fddd77eed00 delete>) [0 delete S1 A8])
            (const_int 0 [0]))) "test1.c":346 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 153 151 154 12 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [2 root+0 S8 A64])
        (reg:DI 0 ax [120])) "test1.c":346 81 {*movdi_internal}
     (nil))
(insn 154 153 155 12 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7fddd74a05a0 *.LC16>)) "test1.c":348 81 {*movdi_internal}
     (nil))
(call_insn 155 154 156 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fddd76af600 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "test1.c":348 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 156 155 157 12 (set (reg:DI 0 ax [121])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [2 root+0 S8 A64])) "test1.c":349 81 {*movdi_internal}
     (nil))
(insn 157 156 158 12 (set (reg:SI 4 si)
        (const_int 1 [0x1])) "test1.c":349 82 {*movsi_internal}
     (nil))
(insn 158 157 159 12 (set (reg:DI 5 di)
        (reg:DI 0 ax [121])) "test1.c":349 81 {*movdi_internal}
     (nil))
(call_insn 159 158 160 12 (call (mem:QI (symbol_ref:DI ("printAVL") [flags 0x3]  <function_decl 0x7fddd77ee100 printAVL>) [0 printAVL S1 A8])
        (const_int 0 [0])) "test1.c":349 665 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 160 159 161 12 (set (reg:SI 5 di)
        (const_int 10 [0xa])) "test1.c":350 82 {*movsi_internal}
     (nil))
(call_insn 161 160 162 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7fddd76af200 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) "test1.c":350 676 {*call_value}
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:       13 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;;              11 [100.0%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 162 161 163 13 87 (nil) [1 uses])
(note 163 162 284 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(jump_insn 284 163 285 13 (set (pc)
        (label_ref 257)) "test1.c":353 659 {jump}
     (nil)
 -> 257)
;;  succ:       23 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 285 284 166)
;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (RTL, MODIFIED)
;;  pred:       4
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 94 122 123 124
(code_label 166 285 167 14 79 (nil) [1 uses])
(note 167 166 168 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 168 167 169 14 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7fddd74a0750 *.LC19>)) "test1.c":358 81 {*movdi_internal}
     (nil))
(insn 169 168 170 14 (set (reg:QI 0 ax)
        (const_int 0 [0])) "test1.c":358 84 {*movqi_internal}
     (nil))
(call_insn 170 169 171 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fddd76aef00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "test1.c":358 676 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 171 170 172 14 (parallel [
            (set (reg:DI 0 ax [122])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":359 218 {*adddi_1}
     (nil))
(insn 172 171 173 14 (set (reg:DI 4 si)
        (reg:DI 0 ax [122])) "test1.c":359 81 {*movdi_internal}
     (nil))
(insn 173 172 174 14 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fddd745d5a0 *.LC2>)) "test1.c":359 81 {*movdi_internal}
     (nil))
(insn 174 173 175 14 (set (reg:QI 0 ax)
        (const_int 0 [0])) "test1.c":359 84 {*movqi_internal}
     (nil))
(call_insn 175 174 176 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0x7fddd76afb00 scanf>) [0 __builtin_scanf S1 A8])
            (const_int 0 [0]))) "test1.c":359 676 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 176 175 177 14 (set (reg:SI 1 dx [orig:94 queryNum.8_8 ] [94])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 queryNum+0 S4 A32])) "test1.c":361 82 {*movsi_internal}
     (nil))
(insn 177 176 178 14 (set (reg:DI 0 ax [123])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [2 root+0 S8 A64])) "test1.c":361 81 {*movdi_internal}
     (nil))
(insn 178 177 179 14 (set (reg:SI 4 si)
        (reg:SI 1 dx [orig:94 queryNum.8_8 ] [94])) "test1.c":361 82 {*movsi_internal}
     (nil))
(insn 179 178 180 14 (set (reg:DI 5 di)
        (reg:DI 0 ax [123])) "test1.c":361 81 {*movdi_internal}
     (nil))
(call_insn 180 179 182 14 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("findNode") [flags 0x3]  <function_decl 0x7fddd77eef00 findNode>) [0 findNode S1 A8])
            (const_int 0 [0]))) "test1.c":361 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 182 180 183 14 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 tempNode+0 S8 A64])
        (reg:DI 0 ax [124])) "test1.c":361 81 {*movdi_internal}
     (nil))
(insn 183 182 184 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                    (const_int -24 [0xffffffffffffffe8])) [2 tempNode+0 S8 A64])
            (const_int 0 [0]))) "test1.c":363 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 184 183 185 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 193)
            (pc))) "test1.c":363 627 {*jcc_1}
     (nil)
 -> 193)
;;  succ:       15 (FALLTHRU)
;;              16
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 95
(note 185 184 186 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 186 185 187 15 (set (reg:SI 0 ax [orig:95 queryNum.9_9 ] [95])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 queryNum+0 S4 A32])) "test1.c":364 82 {*movsi_internal}
     (nil))
(insn 187 186 188 15 (set (reg:SI 4 si)
        (reg:SI 0 ax [orig:95 queryNum.9_9 ] [95])) "test1.c":364 82 {*movsi_internal}
     (nil))
(insn 188 187 189 15 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7fddd74a07e0 *.LC20>)) "test1.c":364 81 {*movdi_internal}
     (nil))
(insn 189 188 190 15 (set (reg:QI 0 ax)
        (const_int 0 [0])) "test1.c":364 84 {*movqi_internal}
     (nil))
(call_insn 190 189 286 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fddd76aef00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "test1.c":364 676 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(jump_insn 286 190 287 15 (set (pc)
        (label_ref 211)) 659 {jump}
     (nil)
 -> 211)
;;  succ:       17 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 287 286 193)
;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (RTL, MODIFIED)
;;  pred:       14
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 96 97 125 126
(code_label 193 287 194 16 88 (nil) [1 uses])
(note 194 193 195 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 195 194 196 16 (set (reg/f:DI 0 ax [125])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 tempNode+0 S8 A64])) "test1.c":367 81 {*movdi_internal}
     (nil))
(insn 196 195 197 16 (set (reg:SI 1 dx [orig:96 _10 ] [96])
        (mem:SI (plus:DI (reg/f:DI 0 ax [125])
                (const_int 24 [0x18])) [1 tempNode_48->height+0 S4 A64])) "test1.c":367 82 {*movsi_internal}
     (nil))
(insn 197 196 199 16 (set (reg:SI 0 ax [orig:97 queryNum.10_11 ] [97])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 queryNum+0 S4 A32])) "test1.c":367 82 {*movsi_internal}
     (nil))
(insn 199 197 200 16 (set (reg:SI 4 si)
        (reg:SI 0 ax [orig:97 queryNum.10_11 ] [97])) "test1.c":367 82 {*movsi_internal}
     (nil))
(insn 200 199 201 16 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x7fddd74a0870 *.LC21>)) "test1.c":367 81 {*movdi_internal}
     (nil))
(insn 201 200 202 16 (set (reg:QI 0 ax)
        (const_int 0 [0])) "test1.c":367 84 {*movqi_internal}
     (nil))
(call_insn 202 201 203 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fddd76aef00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "test1.c":367 676 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 203 202 204 16 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7fddd74a05a0 *.LC16>)) "test1.c":370 81 {*movdi_internal}
     (nil))
(call_insn 204 203 205 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fddd76af600 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "test1.c":370 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 205 204 206 16 (set (reg:DI 0 ax [126])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [2 root+0 S8 A64])) "test1.c":371 81 {*movdi_internal}
     (nil))
(insn 206 205 207 16 (set (reg:SI 4 si)
        (const_int 1 [0x1])) "test1.c":371 82 {*movsi_internal}
     (nil))
(insn 207 206 208 16 (set (reg:DI 5 di)
        (reg:DI 0 ax [126])) "test1.c":371 81 {*movdi_internal}
     (nil))
(call_insn 208 207 209 16 (call (mem:QI (symbol_ref:DI ("printAVL") [flags 0x3]  <function_decl 0x7fddd77ee100 printAVL>) [0 printAVL S1 A8])
        (const_int 0 [0])) "test1.c":371 665 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 209 208 210 16 (set (reg:SI 5 di)
        (const_int 10 [0xa])) "test1.c":372 82 {*movsi_internal}
     (nil))
(call_insn 210 209 211 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7fddd76af200 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) "test1.c":372 676 {*call_value}
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:       17 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (RTL, MODIFIED)
;;  pred:       16 (FALLTHRU)
;;              15 [100.0%] 
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 211 210 212 17 89 (nil) [1 uses])
(note 212 211 288 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(jump_insn 288 212 289 17 (set (pc)
        (label_ref 257)) "test1.c":375 659 {jump}
     (nil)
 -> 257)
;;  succ:       23 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 289 288 215)
;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (RTL, MODIFIED)
;;  pred:       4
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 127
(code_label 215 289 216 18 80 (nil) [1 uses])
(note 216 215 217 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 217 216 218 18 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7fddd74a0900 *.LC22>)) "test1.c":380 81 {*movdi_internal}
     (nil))
(call_insn 218 217 219 18 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fddd76af600 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "test1.c":380 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 219 218 220 18 (set (reg:DI 0 ax [127])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [2 root+0 S8 A64])) "test1.c":381 81 {*movdi_internal}
     (nil))
(insn 220 219 221 18 (set (reg:DI 5 di)
        (reg:DI 0 ax [127])) "test1.c":381 81 {*movdi_internal}
     (nil))
(call_insn 221 220 290 18 (call (mem:QI (symbol_ref:DI ("printPreOrder") [flags 0x3]  <function_decl 0x7fddd77fa100 printPreOrder>) [0 printPreOrder S1 A8])
        (const_int 0 [0])) "test1.c":381 665 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 290 221 291 18 (set (pc)
        (label_ref 257)) "test1.c":383 659 {jump}
     (nil)
 -> 257)
;;  succ:       23 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 291 290 224)
;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (RTL, MODIFIED)
;;  pred:       4
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 128
(code_label 224 291 225 19 81 (nil) [1 uses])
(note 225 224 226 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 226 225 227 19 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7fddd74a0990 *.LC23>)) "test1.c":388 81 {*movdi_internal}
     (nil))
(call_insn 227 226 228 19 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fddd76af600 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "test1.c":388 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 228 227 229 19 (set (reg:DI 0 ax [128])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [2 root+0 S8 A64])) "test1.c":389 81 {*movdi_internal}
     (nil))
(insn 229 228 230 19 (set (reg:DI 5 di)
        (reg:DI 0 ax [128])) "test1.c":389 81 {*movdi_internal}
     (nil))
(call_insn 230 229 292 19 (call (mem:QI (symbol_ref:DI ("printInOrder") [flags 0x3]  <function_decl 0x7fddd77fa300 printInOrder>) [0 printInOrder S1 A8])
        (const_int 0 [0])) "test1.c":389 665 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 292 230 293 19 (set (pc)
        (label_ref 257)) "test1.c":391 659 {jump}
     (nil)
 -> 257)
;;  succ:       23 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 293 292 233)
;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (RTL, MODIFIED)
;;  pred:       4
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 129
(code_label 233 293 234 20 82 (nil) [1 uses])
(note 234 233 235 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 235 234 236 20 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7fddd74a0a20 *.LC24>)) "test1.c":396 81 {*movdi_internal}
     (nil))
(call_insn 236 235 237 20 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fddd76af600 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "test1.c":396 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 237 236 238 20 (set (reg:DI 0 ax [129])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [2 root+0 S8 A64])) "test1.c":397 81 {*movdi_internal}
     (nil))
(insn 238 237 239 20 (set (reg:DI 5 di)
        (reg:DI 0 ax [129])) "test1.c":397 81 {*movdi_internal}
     (nil))
(call_insn 239 238 294 20 (call (mem:QI (symbol_ref:DI ("printPostOrder") [flags 0x3]  <function_decl 0x7fddd77fa500 printPostOrder>) [0 printPostOrder S1 A8])
        (const_int 0 [0])) "test1.c":397 665 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 294 239 295 20 (set (pc)
        (label_ref 257)) "test1.c":399 659 {jump}
     (nil)
 -> 257)
;;  succ:       23 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 295 294 242)
;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (RTL, MODIFIED)
;;  pred:       4
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 130
(code_label 242 295 243 21 83 (nil) [1 uses])
(note 243 242 244 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 244 243 245 21 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x7fddd74a0ab0 *.LC25>)) "test1.c":404 81 {*movdi_internal}
     (nil))
(call_insn 245 244 246 21 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fddd76af600 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "test1.c":404 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 246 245 247 21 (set (reg:DI 0 ax [130])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [2 root+0 S8 A64])) "test1.c":405 81 {*movdi_internal}
     (nil))
(insn 247 246 248 21 (set (reg:SI 4 si)
        (const_int 1 [0x1])) "test1.c":405 82 {*movsi_internal}
     (nil))
(insn 248 247 249 21 (set (reg:DI 5 di)
        (reg:DI 0 ax [130])) "test1.c":405 81 {*movdi_internal}
     (nil))
(call_insn 249 248 296 21 (call (mem:QI (symbol_ref:DI ("printAVL") [flags 0x3]  <function_decl 0x7fddd77ee100 printAVL>) [0 printAVL S1 A8])
        (const_int 0 [0])) "test1.c":405 665 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(jump_insn 296 249 297 21 (set (pc)
        (label_ref 257)) "test1.c":407 659 {jump}
     (nil)
 -> 257)
;;  succ:       23 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 297 296 252)
;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 21, next block 25, flags: (RTL, MODIFIED)
;;  pred:       3
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 252 297 253 22 74 (nil) [1 uses])
(note 253 252 254 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 254 253 255 22 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 flag+0 S4 A32])
        (const_int 0 [0])) "test1.c":412 82 {*movsi_internal}
     (nil))
(insn 255 254 256 22 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7fddd74a03f0 *.LC13>)) "test1.c":413 81 {*movdi_internal}
     (nil))
(call_insn 256 255 298 22 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fddd76af600 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "test1.c":413 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       25 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 22, next block 23, flags: (RTL, MODIFIED)
;;  pred:       22 (FALLTHRU,DFS_BACK)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 298 256 299 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 299 298 257 25 (const_int 0 [0]) "test1.c":414 694 {nop}
     (nil))
;;  succ:       23 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 25, next block 24, flags: (RTL, MODIFIED)
;;  pred:       25 [100.0%]  (FALLTHRU)
;;              2 [100.0%] 
;;              5 [100.0%] 
;;              9 [100.0%] 
;;              13 [100.0%] 
;;              17 [100.0%] 
;;              18 [100.0%] 
;;              19 [100.0%] 
;;              20 [100.0%] 
;;              21 [100.0%] 
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 257 299 258 23 73 (nil) [9 uses])
(note 258 257 260 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 260 258 261 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -4 [0xfffffffffffffffc])) [1 flag+0 S4 A32])
            (const_int 1 [0x1]))) "test1.c":284 7 {*cmpsi_1}
     (nil))
(jump_insn 261 260 262 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 259)
            (pc))) "test1.c":284 627 {*jcc_1}
     (nil)
 -> 259)
;;  succ:       3
;;              24 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 1, flags: (RTL, MODIFIED)
;;  pred:       23 (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 98 99
(note 262 261 263 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 263 262 270 24 (set (reg:SI 0 ax [orig:98 _23 ] [98])
        (const_int 0 [0])) "test1.c":419 82 {*movsi_internal}
     (nil))
(insn 270 263 271 24 (set (reg/i:SI 0 ax)
        (reg:SI 0 ax [orig:99 <retval> ] [99])) "test1.c":420 82 {*movsi_internal}
     (nil))
(insn 271 270 300 24 (use (reg/i:SI 0 ax)) "test1.c":420 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 300 271 0 NOTE_INSN_DELETED)
