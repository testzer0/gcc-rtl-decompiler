
;; Function hashComputeByHashFunc (hashComputeByHashFunc, funcdef_no=5, decl_uid=3222, cgraph_uid=5, symbol_order=8)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 6 n_edges 6 count 6 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r92,l0) best AREG, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a2(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a3(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a4(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:28 NO_REX_SSE_REGS:28 SSE_REGS:28 MMX_REGS:38 INT_SSE_REGS:30 ALL_REGS:520 MEM:12
  a5(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:13 NO_REX_SSE_REGS:13 SSE_REGS:13 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a6(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a7(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a8(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a9(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:28 NO_REX_SSE_REGS:28 SSE_REGS:28 MMX_REGS:38 INT_SSE_REGS:30 ALL_REGS:520 MEM:10
  a10(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:32 NO_REX_SSE_REGS:32 SSE_REGS:32 MMX_REGS:42 INT_SSE_REGS:34 ALL_REGS:616 MEM:8
  a11(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6

   Insn 38(l0): point = 0
   Insn 37(l0): point = 2
   Insn 33(l0): point = 4
   Insn 30(l0): point = 6
   Insn 17(l0): point = 9
   Insn 16(l0): point = 11
   Insn 15(l0): point = 13
   Insn 14(l0): point = 15
   Insn 13(l0): point = 17
   Insn 12(l0): point = 19
   Insn 11(l0): point = 21
   Insn 10(l0): point = 23
   Insn 28(l0): point = 26
   Insn 27(l0): point = 28
   Insn 25(l0): point = 30
   Insn 24(l0): point = 32
   Insn 23(l0): point = 34
   Insn 22(l0): point = 36
   Insn 21(l0): point = 38
   Insn 20(l0): point = 40
   Insn 40(l0): point = 43
   Insn 6(l0): point = 45
   Insn 2(l0): point = 47
 a0(r92): [3..4]
 a1(r91): [5..6]
 a2(r98): [31..32]
 a3(r90): [33..34]
 a4(r89): [35..40]
 a5(r97): [37..38]
 a6(r96): [10..11]
 a7(r88): [12..13]
 a8(r87): [12..15]
 a9(r93): [16..23]
 a10(r94): [20..21] [16..17]
 a11(r95): [18..19]
Compressing live ranges: from 50 to 20 - 40%
Ranges after the compression:
 a0(r92): [0..1]
 a1(r91): [2..3]
 a2(r98): [14..15]
 a3(r90): [16..17]
 a4(r89): [18..19]
 a5(r97): [18..19]
 a6(r96): [4..5]
 a7(r88): [6..7]
 a8(r87): [6..7]
 a9(r93): [8..13]
 a10(r94): [12..13] [8..9]
 a11(r95): [10..11]
  regions=1, blocks=6, points=20
    allocnos=12 (big 0), copies=0, conflicts=0, ranges=13
Disposition:
    8:r87  l0     1    7:r88  l0     0    4:r89  l0     0    3:r90  l0     0
    1:r91  l0     0    0:r92  l0     0    9:r93  l0     1   10:r94  l0     0
   11:r95  l0     0    6:r96  l0     0    5:r97  l0     1    2:r98  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


hashComputeByHashFunc

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 5 [di] 6 [bp] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,5u} r7={1d,5u} r16={1d,4u} r17={5d,1u} r20={1d,15u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} r89={1d,2u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,2u,2e} r94={2d,2u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} 
;;    total ref usage 88{38d,48u,2e} in 23{23 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [3 key+0 S8 A64])
        (reg:DI 5 di [ key ])) "test1.c":30 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ key ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 40 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 hash+0 S4 A32])
        (const_int 1 [0x1])) "test1.c":31 82 {*movsi_internal}
     (nil))
(jump_insn 40 6 41 2 (set (pc)
        (label_ref 18)) "test1.c":33 659 {jump}
     (nil)
 -> 18)
;;  succ:       4 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 41 40 26)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       4
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 88 93 94 95 96
(code_label 26 41 9 3 3 (nil) [1 uses])
(note 9 26 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg:SI 93)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 hash+0 S4 A32])) "test1.c":35 82 {*movsi_internal}
     (nil))
(insn 11 10 12 3 (set (reg:SI 94)
        (reg:SI 93)) "test1.c":35 82 {*movsi_internal}
     (nil))
(insn 12 11 13 3 (parallel [
            (set (reg:SI 95)
                (ashift:SI (reg:SI 94)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":35 521 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 94)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 13 12 14 3 (set (reg:SI 94)
        (reg:SI 95)) "test1.c":35 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 95)
        (expr_list:REG_EQUAL (mult:SI (reg:SI 93)
                (const_int 32 [0x20]))
            (nil))))
(insn 14 13 15 3 (parallel [
            (set (reg:SI 87 [ _1 ])
                (plus:SI (reg:SI 94)
                    (reg:SI 93)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":35 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 94)
        (expr_list:REG_DEAD (reg:SI 93)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (mult:SI (reg:SI 93)
                        (const_int 33 [0x21]))
                    (nil))))))
(insn 15 14 16 3 (set (reg:SI 88 [ temp.0_2 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 temp+0 S4 A32])) "test1.c":35 82 {*movsi_internal}
     (nil))
(insn 16 15 17 3 (parallel [
            (set (reg:SI 96)
                (plus:SI (reg:SI 87 [ _1 ])
                    (reg:SI 88 [ temp.0_2 ])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":35 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 88 [ temp.0_2 ])
        (expr_list:REG_DEAD (reg:SI 87 [ _1 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 17 16 18 3 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 hash+0 S4 A32])
        (reg:SI 96)) "test1.c":35 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 96)
        (nil)))
;;  succ:       4 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 89 90 97 98
(code_label 18 17 19 4 2 (nil) [1 uses])
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 4 (set (reg/f:DI 89 [ key.1_3 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [3 key+0 S8 A64])) "test1.c":33 81 {*movdi_internal}
     (nil))
(insn 21 20 22 4 (parallel [
            (set (reg:DI 97)
                (plus:DI (reg/f:DI 89 [ key.1_3 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":33 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 22 21 23 4 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [3 key+0 S8 A64])
        (reg:DI 97)) "test1.c":33 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 97)
        (nil)))
(insn 23 22 24 4 (set (reg:QI 90 [ _4 ])
        (mem:QI (reg/f:DI 89 [ key.1_3 ]) [0 *key.1_3+0 S1 A8])) "test1.c":33 84 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ key.1_3 ])
        (nil)))
(insn 24 23 25 4 (set (reg:SI 98)
        (sign_extend:SI (reg:QI 90 [ _4 ]))) "test1.c":33 151 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 90 [ _4 ])
        (nil)))
(insn 25 24 27 4 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 temp+0 S4 A32])
        (reg:SI 98)) "test1.c":33 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 98)
        (nil)))
(insn 27 25 28 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 temp+0 S4 A32])
            (const_int 0 [0]))) "test1.c":33 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 28 27 29 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) "test1.c":33 627 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 26)
;;  succ:       3
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (RTL)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 91 92
(note 29 28 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 33 5 (set (reg:SI 91 [ _12 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 hash+0 S4 A32])) "test1.c":37 82 {*movsi_internal}
     (nil))
(insn 33 30 37 5 (set (reg:SI 92 [ <retval> ])
        (reg:SI 91 [ _12 ])) "test1.c":37 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 91 [ _12 ])
        (nil)))
(insn 37 33 38 5 (set (reg/i:SI 0 ax)
        (reg:SI 92 [ <retval> ])) "test1.c":38 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 92 [ <retval> ])
        (nil)))
(insn 38 37 0 5 (use (reg/i:SI 0 ax)) "test1.c":38 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function hashTableInsertFunc (hashTableInsertFunc, funcdef_no=6, decl_uid=3232, cgraph_uid=6, symbol_order=9)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 7 n_edges 8 count 7 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3 5
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 3 6 }
;; 6 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 9.
verify found no changes in insn with uid = 16.
verify found no changes in insn with uid = 19.
verify found no changes in insn with uid = 23.
verify found no changes in insn with uid = 33.
verify found no changes in insn with uid = 39.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r160: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r160,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r159,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r154,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r153,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a48 (r119,l0) best DREG, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a57 (r109,l0) best DREG, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a60 (r107,l0) best DIREG, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a64 (r104,l0) best SIREG, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a68 (r101,l0) best AREG, allocno GENERAL_REGS
    r100: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a71 (r100,l0) best DIREG, allocno GENERAL_REGS
    r99: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a72 (r99,l0) best DIREG, allocno GENERAL_REGS
    r98: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a73 (r98,l0) best AREG, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a54 (r91,l0) best AREG, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a63 (r90,l0) best DIREG, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a69 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a70 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:24 INT_SSE_REGS:20 ALL_REGS:312 MEM:8
  a1(r159,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:416 MEM:7
  a2(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a3(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a4(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a5(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a6(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:24 INT_SSE_REGS:20 ALL_REGS:312 MEM:8
  a7(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:416 MEM:7
  a8(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a9(r154,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a10(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:24 INT_SSE_REGS:20 ALL_REGS:312 MEM:8
  a11(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:416 MEM:7
  a12(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a13(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a14(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a15(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a16(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a17(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a18(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a19(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a20(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:24 INT_SSE_REGS:20 ALL_REGS:312 MEM:8
  a21(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:416 MEM:7
  a22(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a23(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a24(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a25(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a26(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a27(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a28(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a29(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:24 INT_SSE_REGS:20 ALL_REGS:312 MEM:8
  a30(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:416 MEM:7
  a31(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a32(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a33(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a34(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a35(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a36(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a37(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:24 INT_SSE_REGS:20 ALL_REGS:312 MEM:8
  a38(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:416 MEM:7
  a39(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a40(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a41(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a42(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a43(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a44(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a45(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a46(r117,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 CLOBBERED_REGS:2 Q_REGS:2 NON_Q_REGS:2 TLS_GOTBASE_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:30 NO_REX_SSE_REGS:30 SSE_REGS:30 MMX_REGS:40 INT_SSE_REGS:32 ALL_REGS:522 MEM:12
  a47(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a48(r119,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 CLOBBERED_REGS:2 Q_REGS:2 NON_Q_REGS:2 TLS_GOTBASE_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a49(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a50(r118,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 CLOBBERED_REGS:2 Q_REGS:2 NON_Q_REGS:2 TLS_GOTBASE_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:23 NO_REX_SSE_REGS:23 SSE_REGS:23 MMX_REGS:28 INT_SSE_REGS:24 ALL_REGS:418 MEM:8
  a51(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a52(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a53(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a54(r91,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 CLOBBERED_REGS:2 Q_REGS:2 NON_Q_REGS:2 TLS_GOTBASE_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:26 NO_REX_SSE_REGS:26 SSE_REGS:26 MMX_REGS:36 INT_SSE_REGS:28 ALL_REGS:518 MEM:9
  a55(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a56(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a57(r109,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 CLOBBERED_REGS:2 Q_REGS:2 NON_Q_REGS:2 TLS_GOTBASE_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a58(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a59(r108,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 CLOBBERED_REGS:2 Q_REGS:2 NON_Q_REGS:2 TLS_GOTBASE_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:23 NO_REX_SSE_REGS:23 SSE_REGS:23 MMX_REGS:28 INT_SSE_REGS:24 ALL_REGS:418 MEM:8
  a60(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a61(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a62(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a63(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a64(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a65(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a66(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a67(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a68(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a69(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a70(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a71(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a72(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a73(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5

   Insn 123(l0): point = 0
   Insn 120(l0): point = 2
   Insn 119(l0): point = 4
   Insn 118(l0): point = 6
   Insn 117(l0): point = 8
   Insn 116(l0): point = 10
   Insn 115(l0): point = 12
   Insn 114(l0): point = 14
   Insn 113(l0): point = 16
   Insn 112(l0): point = 18
   Insn 111(l0): point = 20
   Insn 110(l0): point = 22
   Insn 109(l0): point = 24
   Insn 108(l0): point = 26
   Insn 107(l0): point = 28
   Insn 106(l0): point = 30
   Insn 105(l0): point = 32
   Insn 104(l0): point = 34
   Insn 103(l0): point = 36
   Insn 102(l0): point = 38
   Insn 101(l0): point = 40
   Insn 100(l0): point = 42
   Insn 99(l0): point = 44
   Insn 98(l0): point = 46
   Insn 97(l0): point = 48
   Insn 96(l0): point = 50
   Insn 95(l0): point = 52
   Insn 94(l0): point = 54
   Insn 93(l0): point = 56
   Insn 92(l0): point = 58
   Insn 91(l0): point = 60
   Insn 63(l0): point = 63
   Insn 62(l0): point = 65
   Insn 61(l0): point = 67
   Insn 60(l0): point = 69
   Insn 59(l0): point = 71
   Insn 58(l0): point = 73
   Insn 57(l0): point = 75
   Insn 56(l0): point = 77
   Insn 55(l0): point = 79
   Insn 88(l0): point = 82
   Insn 87(l0): point = 84
   Insn 85(l0): point = 86
   Insn 84(l0): point = 88
   Insn 83(l0): point = 90
   Insn 82(l0): point = 92
   Insn 81(l0): point = 94
   Insn 80(l0): point = 96
   Insn 79(l0): point = 98
   Insn 78(l0): point = 100
   Insn 77(l0): point = 102
   Insn 75(l0): point = 105
   Insn 74(l0): point = 107
   Insn 73(l0): point = 109
   Insn 72(l0): point = 111
   Insn 71(l0): point = 113
   Insn 70(l0): point = 115
   Insn 69(l0): point = 117
   Insn 68(l0): point = 119
   Insn 67(l0): point = 121
   Insn 66(l0): point = 123
   Insn 124(l0): point = 126
   Insn 51(l0): point = 128
   Insn 50(l0): point = 130
   Insn 49(l0): point = 132
   Insn 48(l0): point = 134
   Insn 47(l0): point = 136
   Insn 46(l0): point = 138
   Insn 45(l0): point = 140
   Insn 44(l0): point = 142
   Insn 43(l0): point = 144
   Insn 42(l0): point = 146
   Insn 41(l0): point = 148
   Insn 40(l0): point = 150
   Insn 39(l0): point = 152
   Insn 38(l0): point = 154
   Insn 37(l0): point = 156
   Insn 36(l0): point = 158
   Insn 35(l0): point = 160
   Insn 34(l0): point = 162
   Insn 33(l0): point = 164
   Insn 32(l0): point = 166
   Insn 31(l0): point = 168
   Insn 30(l0): point = 170
   Insn 29(l0): point = 172
   Insn 28(l0): point = 174
   Insn 27(l0): point = 176
   Insn 26(l0): point = 178
   Insn 25(l0): point = 180
   Insn 24(l0): point = 182
   Insn 23(l0): point = 184
   Insn 22(l0): point = 186
   Insn 21(l0): point = 188
   Insn 20(l0): point = 190
   Insn 19(l0): point = 192
   Insn 18(l0): point = 194
   Insn 17(l0): point = 196
   Insn 16(l0): point = 198
   Insn 15(l0): point = 200
   Insn 14(l0): point = 202
   Insn 13(l0): point = 204
   Insn 12(l0): point = 206
   Insn 11(l0): point = 208
   Insn 10(l0): point = 210
   Insn 9(l0): point = 212
   Insn 8(l0): point = 214
   Insn 4(l0): point = 216
   Insn 3(l0): point = 218
   Insn 2(l0): point = 220
 a0(r160): [3..4]
 a1(r159): [3..6]
 a2(r97): [3..12]
 a3(r157): [7..8]
 a4(r158): [9..10]
 a5(r96): [13..14]
 a6(r156): [15..16]
 a7(r155): [15..18]
 a8(r153): [19..20]
 a9(r154): [21..22]
 a10(r151): [25..28]
 a11(r150): [25..30]
 a12(r152): [25..26]
 a13(r149): [31..32]
 a14(r145): [33..40]
 a15(r148): [33..34]
 a16(r146): [35..36]
 a17(r147): [37..38]
 a18(r144): [43..44]
 a19(r95): [43..46]
 a20(r143): [47..48]
 a21(r142): [47..50]
 a22(r141): [51..52]
 a23(r137): [53..60]
 a24(r140): [53..54]
 a25(r138): [55..56]
 a26(r139): [57..58]
 a27(r94): [85..86]
 a28(r93): [87..88]
 a29(r136): [89..90]
 a30(r135): [89..92]
 a31(r134): [93..94]
 a32(r130): [95..102]
 a33(r133): [95..96]
 a34(r131): [97..98]
 a35(r132): [99..100]
 a36(r92): [108..109]
 a37(r129): [110..111]
 a38(r128): [110..113]
 a39(r127): [114..115]
 a40(r123): [116..123]
 a41(r126): [116..117]
 a42(r124): [118..119]
 a43(r125): [120..121]
 a44(r122): [64..65]
 a45(r121): [66..67]
 a46(r117): [66..77]
 a47(r116): [68..69]
 a48(r119): [70..71]
 a49(r120): [72..73]
 a50(r118): [72..75]
 a51(r115): [129..130]
 a52(r114): [133..134]
 a53(r112): [135..136]
 a54(r91): [135..150]
 a55(r113): [137..138]
 a56(r111): [141..142]
 a57(r109): [143..144]
 a58(r110): [145..146]
 a59(r108): [145..148]
 a60(r107): [155..156]
 a61(r105): [159..162]
 a62(r106): [159..160]
 a63(r90): [167..172]
 a64(r104): [169..170]
 a65(r103): [173..174]
 a66(r102): [177..178]
 a67(r89): [177..180]
 a68(r101): [181..182]
 a69(r88): [187..188]
 a70(r87): [189..190]
 a71(r100): [195..196]
 a72(r99): [201..206]
 a73(r98): [209..210]
Compressing live ranges: from 223 to 108 - 48%
Ranges after the compression:
 a0(r160): [0..1]
 a1(r159): [0..1]
 a2(r97): [0..5]
 a3(r157): [2..3]
 a4(r158): [4..5]
 a5(r96): [6..7]
 a6(r156): [8..9]
 a7(r155): [8..9]
 a8(r153): [10..11]
 a9(r154): [12..13]
 a10(r151): [14..15]
 a11(r150): [14..15]
 a12(r152): [14..15]
 a13(r149): [16..17]
 a14(r145): [18..23]
 a15(r148): [18..19]
 a16(r146): [20..21]
 a17(r147): [22..23]
 a18(r144): [24..25]
 a19(r95): [24..25]
 a20(r143): [26..27]
 a21(r142): [26..27]
 a22(r141): [28..29]
 a23(r137): [30..35]
 a24(r140): [30..31]
 a25(r138): [32..33]
 a26(r139): [34..35]
 a27(r94): [46..47]
 a28(r93): [48..49]
 a29(r136): [50..51]
 a30(r135): [50..51]
 a31(r134): [52..53]
 a32(r130): [54..59]
 a33(r133): [54..55]
 a34(r131): [56..57]
 a35(r132): [58..59]
 a36(r92): [60..61]
 a37(r129): [62..63]
 a38(r128): [62..63]
 a39(r127): [64..65]
 a40(r123): [66..71]
 a41(r126): [66..67]
 a42(r124): [68..69]
 a43(r125): [70..71]
 a44(r122): [36..37]
 a45(r121): [38..39]
 a46(r117): [38..45]
 a47(r116): [40..41]
 a48(r119): [42..43]
 a49(r120): [44..45]
 a50(r118): [44..45]
 a51(r115): [72..73]
 a52(r114): [74..75]
 a53(r112): [76..77]
 a54(r91): [76..85]
 a55(r113): [78..79]
 a56(r111): [80..81]
 a57(r109): [82..83]
 a58(r110): [84..85]
 a59(r108): [84..85]
 a60(r107): [86..87]
 a61(r105): [88..89]
 a62(r106): [88..89]
 a63(r90): [90..91]
 a64(r104): [90..91]
 a65(r103): [92..93]
 a66(r102): [94..95]
 a67(r89): [94..95]
 a68(r101): [96..97]
 a69(r88): [98..99]
 a70(r87): [100..101]
 a71(r100): [102..103]
 a72(r99): [104..105]
 a73(r98): [106..107]
  pref0:a48(r119)<-hr1@1
  pref1:a57(r109)<-hr1@1
  regions=1, blocks=7, points=108
    allocnos=74 (big 0), copies=0, conflicts=0, ranges=74
Disposition:
   70:r87  l0     0   69:r88  l0     0   67:r89  l0     1   63:r90  l0     0
   54:r91  l0     2   36:r92  l0     0   28:r93  l0     0   27:r94  l0     0
   19:r95  l0     1    5:r96  l0     0    2:r97  l0     2   73:r98  l0     0
   72:r99  l0     0   71:r100 l0     0   68:r101 l0     0   66:r102 l0     0
   65:r103 l0     0   64:r104 l0     1   61:r105 l0     0   62:r106 l0     1
   60:r107 l0     0   59:r108 l0     0   57:r109 l0     1   58:r110 l0     1
   56:r111 l0     0   53:r112 l0     0   55:r113 l0     0   52:r114 l0     0
   51:r115 l0     0   47:r116 l0     0   46:r117 l0     2   50:r118 l0     0
   48:r119 l0     1   49:r120 l0     1   45:r121 l0     0   44:r122 l0     0
   40:r123 l0     0   42:r124 l0     1   43:r125 l0     1   41:r126 l0     1
   39:r127 l0     0   38:r128 l0     1   37:r129 l0     0   32:r130 l0     0
   34:r131 l0     1   35:r132 l0     1   33:r133 l0     1   31:r134 l0     0
   30:r135 l0     1   29:r136 l0     0   23:r137 l0     0   25:r138 l0     1
   26:r139 l0     1   24:r140 l0     1   22:r141 l0     0   21:r142 l0     1
   20:r143 l0     0   18:r144 l0     0   14:r145 l0     0   16:r146 l0     1
   17:r147 l0     1   15:r148 l0     1   13:r149 l0     0   11:r150 l0     2
   10:r151 l0     0   12:r152 l0     1    8:r153 l0     0    9:r154 l0     0
    7:r155 l0     1    6:r156 l0     0    3:r157 l0     0    4:r158 l0     0
    1:r159 l0     1    0:r160 l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


hashTableInsertFunc

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={7d,4u} r1={8d,2u} r2={7d} r4={9d,3u} r5={13d,7u} r6={1d,6u} r7={1d,12u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r16={1d,5u} r17={35d,2u} r18={6d} r19={6d} r20={1d,39u} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={7d} r38={7d} r39={6d} r40={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,2u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,2u,1e} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} 
;;    total ref usage 720{563d,156u,1e} in 109{103 regular + 6 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [3 key+0 S8 A64])
        (reg:DI 5 di [ key ])) "test1.c":42 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ key ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [1 value+0 S4 A32])
        (reg:SI 4 si [ value ])) "test1.c":42 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ value ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [1 index+0 S4 A32])
        (reg:SI 1 dx [ index ])) "test1.c":42 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ index ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:DI 5 di)
        (const_int 24 [0x18])) "test1.c":44 81 {*movdi_internal}
     (nil))
(call_insn 9 8 10 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7fa517d22300 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) "test1.c":44 676 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 10 9 11 2 (set (reg/f:DI 98)
        (reg:DI 0 ax)) "test1.c":44 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 98)
            (nil))))
(insn 11 10 12 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 NewNode+0 S8 A64])
        (reg/f:DI 98)) "test1.c":44 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 98)
        (nil)))
(insn 12 11 13 2 (set (reg:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 NewNode+0 S8 A64])) "test1.c":45 81 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 1 dx)
        (const_int 24 [0x18])) "test1.c":45 81 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:SI 4 si)
        (const_int 0 [0])) "test1.c":45 82 {*movsi_internal}
     (nil))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (reg:DI 99)) "test1.c":45 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 99)
        (nil)))
(call_insn 16 15 17 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x7fa517cf6f00 memset>) [0 __builtin_memset S1 A8])
            (const_int 0 [0]))) "test1.c":45 676 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 17 16 18 2 (set (reg:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [3 key+0 S8 A64])) "test1.c":46 81 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (set (reg:DI 5 di)
        (reg:DI 100)) "test1.c":46 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 100)
        (nil)))
(call_insn/i 19 18 20 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x7fa517cf9700 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) "test1.c":46 676 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 20 19 21 2 (set (reg:DI 87 [ _1 ])
        (reg:DI 0 ax)) "test1.c":46 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 21 20 22 2 (parallel [
            (set (reg:DI 88 [ _2 ])
                (plus:DI (reg:DI 87 [ _1 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":46 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 87 [ _1 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 22 21 23 2 (set (reg:DI 5 di)
        (reg:DI 88 [ _2 ])) "test1.c":46 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ _2 ])
        (nil)))
(call_insn 23 22 24 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7fa517d22300 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) "test1.c":46 676 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 24 23 25 2 (set (reg/f:DI 101)
        (reg:DI 0 ax)) "test1.c":46 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 101)
            (nil))))
(insn 25 24 26 2 (set (reg/f:DI 89 [ _3 ])
        (reg/f:DI 101)) "test1.c":46 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 101)
        (nil)))
(insn 26 25 27 2 (set (reg/f:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 NewNode+0 S8 A64])) "test1.c":46 81 {*movdi_internal}
     (nil))
(insn 27 26 28 2 (set (mem/f:DI (reg/f:DI 102) [3 NewNode_15->Key+0 S8 A64])
        (reg/f:DI 89 [ _3 ])) "test1.c":46 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 102)
        (expr_list:REG_DEAD (reg/f:DI 89 [ _3 ])
            (nil))))
(insn 28 27 29 2 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 NewNode+0 S8 A64])) "test1.c":47 81 {*movdi_internal}
     (nil))
(insn 29 28 30 2 (set (reg/f:DI 90 [ _4 ])
        (mem/f:DI (reg/f:DI 103) [3 NewNode_15->Key+0 S8 A64])) "test1.c":47 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 103)
        (nil)))
(insn 30 29 31 2 (set (reg:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [3 key+0 S8 A64])) "test1.c":47 81 {*movdi_internal}
     (nil))
(insn 31 30 32 2 (set (reg:DI 4 si)
        (reg:DI 104)) "test1.c":47 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 104)
        (nil)))
(insn 32 31 33 2 (set (reg:DI 5 di)
        (reg/f:DI 90 [ _4 ])) "test1.c":47 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ _4 ])
        (nil)))
(call_insn 33 32 34 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x7fa517cf7f00 strcpy>) [0 __builtin_strcpy S1 A8])
            (const_int 0 [0]))) "test1.c":47 676 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 34 33 35 2 (set (reg/f:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 NewNode+0 S8 A64])) "test1.c":48 81 {*movdi_internal}
     (nil))
(insn 35 34 36 2 (set (reg:SI 106)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [1 value+0 S4 A32])) "test1.c":48 82 {*movsi_internal}
     (nil))
(insn 36 35 37 2 (set (mem:SI (plus:DI (reg/f:DI 105)
                (const_int 8 [0x8])) [1 NewNode_15->Value+0 S4 A64])
        (reg:SI 106)) "test1.c":48 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 106)
        (expr_list:REG_DEAD (reg/f:DI 105)
            (nil))))
(insn 37 36 38 2 (set (reg:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [3 key+0 S8 A64])) "test1.c":50 81 {*movdi_internal}
     (nil))
(insn 38 37 39 2 (set (reg:DI 5 di)
        (reg:DI 107)) "test1.c":50 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 107)
        (nil)))
(call_insn 39 38 40 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("hashComputeByHashFunc") [flags 0x3]  <function_decl 0x7fa517a72a00 hashComputeByHashFunc>) [0 hashComputeByHashFunc S1 A8])
            (const_int 0 [0]))) "test1.c":50 676 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 40 39 41 2 (set (reg:SI 91 [ _5 ])
        (reg:SI 0 ax)) "test1.c":50 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 41 40 42 2 (parallel [
            (set (reg:SI 108)
                (lshiftrt:SI (reg:SI 91 [ _5 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":50 554 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 42 41 43 2 (set (reg:SI 110)
        (const_int 175921861 [0xa7c5ac5])) "test1.c":50 82 {*movsi_internal}
     (nil))
(insn 43 42 44 2 (parallel [
            (set (reg:SI 109)
                (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg:SI 108))
                            (zero_extend:DI (reg:SI 110)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":50 366 {*umulsi3_highpart_1}
     (expr_list:REG_DEAD (reg:SI 110)
        (expr_list:REG_DEAD (reg:SI 108)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 44 43 45 2 (parallel [
            (set (reg:SI 111)
                (lshiftrt:SI (reg:SI 109)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":50 554 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 109)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 45 44 46 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [1 pos+0 S4 A32])
        (reg:SI 111)) "test1.c":50 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 111)
        (nil)))
(insn 46 45 47 2 (set (reg:SI 113)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [1 pos+0 S4 A32])) "test1.c":50 82 {*movsi_internal}
     (nil))
(insn 47 46 48 2 (parallel [
            (set (reg:SI 112)
                (mult:SI (reg:SI 113)
                    (const_int 100000 [0x186a0])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":50 338 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 113)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 48 47 49 2 (parallel [
            (set (reg:SI 114)
                (minus:SI (reg:SI 91 [ _5 ])
                    (reg:SI 112)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":50 273 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 112)
        (expr_list:REG_DEAD (reg:SI 91 [ _5 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 49 48 50 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [1 pos+0 S4 A32])
        (reg:SI 114)) "test1.c":50 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 114)
        (nil)))
(insn 50 49 51 2 (set (reg:SI 115)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [1 pos+0 S4 A32])) "test1.c":51 82 {*movsi_internal}
     (nil))
(insn 51 50 124 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 poscheck+0 S4 A32])
        (reg:SI 115)) "test1.c":51 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 115)
        (nil)))
(jump_insn 124 51 125 2 (set (pc)
        (label_ref 64)) "test1.c":53 659 {jump}
     (nil)
 -> 64)
;;  succ:       4 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 125 124 86)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       5
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 116 117 118 119 120 121 122
(code_label 86 125 54 3 8 (nil) [1 uses])
(note 54 86 55 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 3 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [1 poscheck+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 poscheck+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":55 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 56 55 57 3 (set (reg:SI 117)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 poscheck+0 S4 A32])) "test1.c":56 82 {*movsi_internal}
     (nil))
(insn 57 56 58 3 (parallel [
            (set (reg:SI 118)
                (lshiftrt:SI (reg:SI 117)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":56 554 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 58 57 59 3 (set (reg:SI 120)
        (const_int 175921861 [0xa7c5ac5])) "test1.c":56 82 {*movsi_internal}
     (nil))
(insn 59 58 60 3 (parallel [
            (set (reg:SI 119)
                (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg:SI 118))
                            (zero_extend:DI (reg:SI 120)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":56 366 {*umulsi3_highpart_1}
     (expr_list:REG_DEAD (reg:SI 120)
        (expr_list:REG_DEAD (reg:SI 118)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 60 59 61 3 (parallel [
            (set (reg:SI 116)
                (lshiftrt:SI (reg:SI 119)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":56 554 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 119)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (udiv:SI (reg:SI 117)
                    (const_int 100000 [0x186a0]))
                (nil)))))
(insn 61 60 62 3 (parallel [
            (set (reg:SI 121)
                (mult:SI (reg:SI 116)
                    (const_int 100000 [0x186a0])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":56 338 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 116)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 62 61 63 3 (parallel [
            (set (reg:SI 122)
                (minus:SI (reg:SI 117)
                    (reg:SI 121)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":56 273 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 121)
        (expr_list:REG_DEAD (reg:SI 117)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 63 62 64 3 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 poscheck+0 S4 A32])
        (reg:SI 122)) "test1.c":56 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 122)
        (nil)))
;;  succ:       4 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 92 123 124 125 126 127 128 129
(code_label 64 63 65 4 6 (nil) [1 uses])
(note 65 64 66 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 4 (set (reg:DI 123)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 poscheck+0 S4 A32]))) "test1.c":53 131 {*zero_extendsidi2}
     (nil))
(insn 67 66 68 4 (set (reg:SI 125)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [1 index+0 S4 A32])) "test1.c":53 82 {*movsi_internal}
     (nil))
(insn 68 67 69 4 (set (reg:DI 124)
        (sign_extend:DI (reg:SI 125))) "test1.c":53 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 125)
        (nil)))
(insn 69 68 70 4 (parallel [
            (set (reg:DI 126)
                (mult:DI (reg:DI 124)
                    (const_int 100000 [0x186a0])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":53 339 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 124)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 70 69 71 4 (parallel [
            (set (reg:DI 127)
                (plus:DI (reg:DI 126)
                    (reg:DI 123)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":53 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 126)
        (expr_list:REG_DEAD (reg:DI 123)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 71 70 72 4 (parallel [
            (set (reg:DI 128)
                (ashift:DI (reg:DI 127)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":53 522 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 127)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 72 71 73 4 (set (reg:DI 129)
        (symbol_ref:DI ("hashTable") [flags 0x2]  <var_decl 0x7fa517a76000 hashTable>)) "test1.c":53 81 {*movdi_internal}
     (nil))
(insn 73 72 74 4 (set (reg/f:DI 92 [ _6 ])
        (mem/f:DI (plus:DI (reg:DI 128)
                (reg:DI 129)) [2 hashTable S8 A64])) "test1.c":53 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 129)
        (expr_list:REG_DEAD (reg:DI 128)
            (nil))))
(insn 74 73 75 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 92 [ _6 ])
            (const_int 0 [0]))) "test1.c":53 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 92 [ _6 ])
        (nil)))
(jump_insn 75 74 76 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 89)
            (pc))) "test1.c":53 627 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 89)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 93 94 130 131 132 133 134 135 136
(note 76 75 77 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 5 (set (reg:DI 130)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 poscheck+0 S4 A32]))) "test1.c":53 131 {*zero_extendsidi2}
     (nil))
(insn 78 77 79 5 (set (reg:SI 132)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [1 index+0 S4 A32])) "test1.c":53 82 {*movsi_internal}
     (nil))
(insn 79 78 80 5 (set (reg:DI 131)
        (sign_extend:DI (reg:SI 132))) "test1.c":53 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 132)
        (nil)))
(insn 80 79 81 5 (parallel [
            (set (reg:DI 133)
                (mult:DI (reg:DI 131)
                    (const_int 100000 [0x186a0])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":53 339 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 131)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 81 80 82 5 (parallel [
            (set (reg:DI 134)
                (plus:DI (reg:DI 133)
                    (reg:DI 130)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":53 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 133)
        (expr_list:REG_DEAD (reg:DI 130)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 82 81 83 5 (parallel [
            (set (reg:DI 135)
                (ashift:DI (reg:DI 134)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":53 522 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 134)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 83 82 84 5 (set (reg:DI 136)
        (symbol_ref:DI ("hashTable") [flags 0x2]  <var_decl 0x7fa517a76000 hashTable>)) "test1.c":53 81 {*movdi_internal}
     (nil))
(insn 84 83 85 5 (set (reg/f:DI 93 [ _7 ])
        (mem/f:DI (plus:DI (reg:DI 135)
                (reg:DI 136)) [2 hashTable S8 A64])) "test1.c":53 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 136)
        (expr_list:REG_DEAD (reg:DI 135)
            (nil))))
(insn 85 84 87 5 (set (reg:SI 94 [ _8 ])
        (mem:SI (plus:DI (reg/f:DI 93 [ _7 ])
                (const_int 8 [0x8])) [1 _7->Value+0 S4 A64])) "test1.c":53 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93 [ _7 ])
        (nil)))
(insn 87 85 88 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 94 [ _8 ])
            (const_int -1 [0xffffffffffffffff]))) "test1.c":53 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 94 [ _8 ])
        (nil)))
(jump_insn 88 87 89 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 86)
            (pc))) "test1.c":53 627 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 86)
;;  succ:       3
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 1, flags: (RTL)
;;  pred:       4
;;              5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 95 96 97 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160
(code_label 89 88 90 6 7 (nil) [1 uses])
(note 90 89 91 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 92 6 (set (reg:DI 137)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])) [1 pos+0 S4 A32]))) "test1.c":58 131 {*zero_extendsidi2}
     (nil))
(insn 92 91 93 6 (set (reg:SI 139)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [1 index+0 S4 A32])) "test1.c":58 82 {*movsi_internal}
     (nil))
(insn 93 92 94 6 (set (reg:DI 138)
        (sign_extend:DI (reg:SI 139))) "test1.c":58 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 139)
        (nil)))
(insn 94 93 95 6 (parallel [
            (set (reg:DI 140)
                (mult:DI (reg:DI 138)
                    (const_int 100000 [0x186a0])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":58 339 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 138)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 95 94 96 6 (parallel [
            (set (reg:DI 141)
                (plus:DI (reg:DI 140)
                    (reg:DI 137)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":58 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 140)
        (expr_list:REG_DEAD (reg:DI 137)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 96 95 97 6 (parallel [
            (set (reg:DI 142)
                (ashift:DI (reg:DI 141)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":58 522 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 141)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 97 96 98 6 (set (reg:DI 143)
        (symbol_ref:DI ("hashTable") [flags 0x2]  <var_decl 0x7fa517a76000 hashTable>)) "test1.c":58 81 {*movdi_internal}
     (nil))
(insn 98 97 99 6 (set (reg/f:DI 95 [ _9 ])
        (mem/f:DI (plus:DI (reg:DI 142)
                (reg:DI 143)) [2 hashTable S8 A64])) "test1.c":58 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 143)
        (expr_list:REG_DEAD (reg:DI 142)
            (nil))))
(insn 99 98 100 6 (set (reg/f:DI 144)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 NewNode+0 S8 A64])) "test1.c":58 81 {*movdi_internal}
     (nil))
(insn 100 99 101 6 (set (mem/f:DI (plus:DI (reg/f:DI 144)
                (const_int 16 [0x10])) [2 NewNode_15->pNext+0 S8 A64])
        (reg/f:DI 95 [ _9 ])) "test1.c":58 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 144)
        (expr_list:REG_DEAD (reg/f:DI 95 [ _9 ])
            (nil))))
(insn 101 100 102 6 (set (reg:DI 145)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])) [1 pos+0 S4 A32]))) "test1.c":59 131 {*zero_extendsidi2}
     (nil))
(insn 102 101 103 6 (set (reg:SI 147)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [1 index+0 S4 A32])) "test1.c":59 82 {*movsi_internal}
     (nil))
(insn 103 102 104 6 (set (reg:DI 146)
        (sign_extend:DI (reg:SI 147))) "test1.c":59 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 147)
        (nil)))
(insn 104 103 105 6 (parallel [
            (set (reg:DI 148)
                (mult:DI (reg:DI 146)
                    (const_int 100000 [0x186a0])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":59 339 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 146)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 105 104 106 6 (parallel [
            (set (reg:DI 149)
                (plus:DI (reg:DI 148)
                    (reg:DI 145)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":59 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 148)
        (expr_list:REG_DEAD (reg:DI 145)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 106 105 107 6 (parallel [
            (set (reg:DI 150)
                (ashift:DI (reg:DI 149)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":59 522 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 149)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 107 106 108 6 (set (reg:DI 151)
        (symbol_ref:DI ("hashTable") [flags 0x2]  <var_decl 0x7fa517a76000 hashTable>)) "test1.c":59 81 {*movdi_internal}
     (nil))
(insn 108 107 109 6 (set (reg/f:DI 152)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 NewNode+0 S8 A64])) "test1.c":59 81 {*movdi_internal}
     (nil))
(insn 109 108 110 6 (set (mem/f:DI (plus:DI (reg:DI 150)
                (reg:DI 151)) [2 hashTable S8 A64])
        (reg/f:DI 152)) "test1.c":59 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 152)
        (expr_list:REG_DEAD (reg:DI 151)
            (expr_list:REG_DEAD (reg:DI 150)
                (nil)))))
(insn 110 109 111 6 (set (reg:SI 154)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [1 index+0 S4 A32])) "test1.c":61 82 {*movsi_internal}
     (nil))
(insn 111 110 112 6 (set (reg:DI 153)
        (sign_extend:DI (reg:SI 154))) "test1.c":61 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 154)
        (nil)))
(insn 112 111 113 6 (parallel [
            (set (reg:DI 155)
                (ashift:DI (reg:DI 153)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":61 522 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 153)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 113 112 114 6 (set (reg:DI 156)
        (symbol_ref:DI ("hash_size") [flags 0x2]  <var_decl 0x7fa517daaf30 hash_size>)) "test1.c":61 81 {*movdi_internal}
     (nil))
(insn 114 113 115 6 (set (reg:SI 96 [ _10 ])
        (mem:SI (plus:DI (reg:DI 155)
                (reg:DI 156)) [1 hash_size S4 A32])) "test1.c":61 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 156)
        (expr_list:REG_DEAD (reg:DI 155)
            (nil))))
(insn 115 114 116 6 (parallel [
            (set (reg:SI 97 [ _11 ])
                (plus:SI (reg:SI 96 [ _10 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":61 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 96 [ _10 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 116 115 117 6 (set (reg:SI 158)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [1 index+0 S4 A32])) "test1.c":61 82 {*movsi_internal}
     (nil))
(insn 117 116 118 6 (set (reg:DI 157)
        (sign_extend:DI (reg:SI 158))) "test1.c":61 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 158)
        (nil)))
(insn 118 117 119 6 (parallel [
            (set (reg:DI 159)
                (ashift:DI (reg:DI 157)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":61 522 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 157)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 119 118 120 6 (set (reg:DI 160)
        (symbol_ref:DI ("hash_size") [flags 0x2]  <var_decl 0x7fa517daaf30 hash_size>)) "test1.c":61 81 {*movdi_internal}
     (nil))
(insn 120 119 123 6 (set (mem:SI (plus:DI (reg:DI 159)
                (reg:DI 160)) [1 hash_size S4 A32])
        (reg:SI 97 [ _11 ])) "test1.c":61 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 160)
        (expr_list:REG_DEAD (reg:DI 159)
            (expr_list:REG_DEAD (reg:SI 97 [ _11 ])
                (nil)))))
(insn 123 120 0 6 (const_int 0 [0]) "test1.c":62 694 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function hashTableLookupFunc (hashTableLookupFunc, funcdef_no=7, decl_uid=3242, cgraph_uid=7, symbol_order=10)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 10 n_edges 12 count 10 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;;
;; Loop 1
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6 4
;; 2 succs { 3 8 }
;; 3 succs { 7 }
;; 4 succs { 5 6 }
;; 5 succs { 9 }
;; 6 succs { 7 }
;; 7 succs { 4 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 9.
verify found no changes in insn with uid = 48.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r117,l0) best DIREG, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a29 (r95,l0) best DREG, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a32 (r93,l0) best DIREG, allocno GENERAL_REGS
    r92: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r92,l0) best AREG, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r90,l0) best AREG, allocno GENERAL_REGS
    r89: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r89,l0) best SIREG, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a26 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:33 INT_SSE_REGS:29 ALL_REGS:412 MEM:8
  a2(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a3(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a4(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a5(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a6(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a7(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a8(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a9(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:24 INT_SSE_REGS:20 ALL_REGS:312 MEM:8
  a10(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:416 MEM:7
  a11(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a12(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a13(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a14(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a15(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a16(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a17(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:24 INT_SSE_REGS:20 ALL_REGS:312 MEM:8
  a18(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:416 MEM:7
  a19(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a20(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a21(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a22(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a23(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a24(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a25(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a26(r87,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 CLOBBERED_REGS:2 Q_REGS:2 NON_Q_REGS:2 TLS_GOTBASE_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:26 NO_REX_SSE_REGS:26 SSE_REGS:26 MMX_REGS:36 INT_SSE_REGS:28 ALL_REGS:518 MEM:9
  a27(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a28(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a29(r95,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 CLOBBERED_REGS:2 Q_REGS:2 NON_Q_REGS:2 TLS_GOTBASE_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a30(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a31(r94,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 CLOBBERED_REGS:2 Q_REGS:2 NON_Q_REGS:2 TLS_GOTBASE_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:23 NO_REX_SSE_REGS:23 SSE_REGS:23 MMX_REGS:28 INT_SSE_REGS:24 ALL_REGS:418 MEM:8
  a32(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 76(l0): point = 0
   Insn 75(l0): point = 2
   Insn 71(l0): point = 4
   Insn 68(l0): point = 7
   Insn 80(l0): point = 10
   Insn 53(l0): point = 12
   Insn 51(l0): point = 15
   Insn 50(l0): point = 17
   Insn 49(l0): point = 19
   Insn 48(l0): point = 21
   Insn 47(l0): point = 23
   Insn 46(l0): point = 25
   Insn 45(l0): point = 27
   Insn 44(l0): point = 29
   Insn 43(l0): point = 31
   Insn 65(l0): point = 34
   Insn 64(l0): point = 36
   Insn 60(l0): point = 39
   Insn 59(l0): point = 41
   Insn 58(l0): point = 43
   Insn 78(l0): point = 46
   Insn 39(l0): point = 48
   Insn 38(l0): point = 50
   Insn 37(l0): point = 52
   Insn 36(l0): point = 54
   Insn 35(l0): point = 56
   Insn 34(l0): point = 58
   Insn 33(l0): point = 60
   Insn 32(l0): point = 62
   Insn 31(l0): point = 64
   Insn 29(l0): point = 67
   Insn 28(l0): point = 69
   Insn 27(l0): point = 71
   Insn 26(l0): point = 73
   Insn 25(l0): point = 75
   Insn 24(l0): point = 77
   Insn 23(l0): point = 79
   Insn 22(l0): point = 81
   Insn 21(l0): point = 83
   Insn 20(l0): point = 85
   Insn 19(l0): point = 87
   Insn 18(l0): point = 89
   Insn 17(l0): point = 91
   Insn 16(l0): point = 93
   Insn 15(l0): point = 95
   Insn 14(l0): point = 97
   Insn 13(l0): point = 99
   Insn 12(l0): point = 101
   Insn 11(l0): point = 103
   Insn 10(l0): point = 105
   Insn 9(l0): point = 107
   Insn 8(l0): point = 109
   Insn 7(l0): point = 111
   Insn 3(l0): point = 113
   Insn 2(l0): point = 115
 a0(r92): [3..4]
 a1(r91): [10..12] [5..7]
 a2(r119): [40..41]
 a3(r118): [42..43]
 a4(r90): [18..19]
 a5(r117): [24..27]
 a6(r89): [26..29]
 a7(r116): [30..31]
 a8(r115): [49..50]
 a9(r114): [51..52]
 a10(r113): [51..54]
 a11(r112): [55..56]
 a12(r108): [57..64]
 a13(r111): [57..58]
 a14(r109): [59..60]
 a15(r110): [61..62]
 a16(r88): [70..71]
 a17(r107): [72..73]
 a18(r106): [72..75]
 a19(r105): [76..77]
 a20(r101): [78..85]
 a21(r104): [78..79]
 a22(r102): [80..81]
 a23(r103): [82..83]
 a24(r100): [88..89]
 a25(r98): [90..91]
 a26(r87): [90..105]
 a27(r99): [92..93]
 a28(r97): [96..97]
 a29(r95): [98..99]
 a30(r96): [100..101]
 a31(r94): [100..103]
 a32(r93): [110..111]
Compressing live ranges: from 118 to 54 - 45%
Ranges after the compression:
 a0(r92): [0..1]
 a1(r91): [2..5]
 a2(r119): [12..13]
 a3(r118): [14..15]
 a4(r90): [6..7]
 a5(r117): [8..9]
 a6(r89): [8..9]
 a7(r116): [10..11]
 a8(r115): [16..17]
 a9(r114): [18..19]
 a10(r113): [18..19]
 a11(r112): [20..21]
 a12(r108): [22..27]
 a13(r111): [22..23]
 a14(r109): [24..25]
 a15(r110): [26..27]
 a16(r88): [28..29]
 a17(r107): [30..31]
 a18(r106): [30..31]
 a19(r105): [32..33]
 a20(r101): [34..39]
 a21(r104): [34..35]
 a22(r102): [36..37]
 a23(r103): [38..39]
 a24(r100): [40..41]
 a25(r98): [42..43]
 a26(r87): [42..51]
 a27(r99): [44..45]
 a28(r97): [46..47]
 a29(r95): [48..49]
 a30(r96): [50..51]
 a31(r94): [50..51]
 a32(r93): [52..53]
  pref0:a29(r95)<-hr1@1
  regions=1, blocks=10, points=54
    allocnos=33 (big 0), copies=0, conflicts=0, ranges=33
Disposition:
   26:r87  l0     2   16:r88  l0     0    6:r89  l0     1    4:r90  l0     0
    1:r91  l0     0    0:r92  l0     0   32:r93  l0     0   31:r94  l0     0
   29:r95  l0     1   30:r96  l0     1   28:r97  l0     0   25:r98  l0     0
   27:r99  l0     0   24:r100 l0     0   20:r101 l0     0   22:r102 l0     1
   23:r103 l0     1   21:r104 l0     1   19:r105 l0     0   18:r106 l0     1
   17:r107 l0     0   12:r108 l0     0   14:r109 l0     1   15:r110 l0     1
   13:r111 l0     1   11:r112 l0     0   10:r113 l0     1    9:r114 l0     0
    8:r115 l0     0    7:r116 l0     0    5:r117 l0     0    3:r118 l0     0
    2:r119 l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


hashTableLookupFunc

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={4d,4u} r1={3d} r2={3d} r4={4d,2u} r5={5d,3u} r6={1d,9u} r7={1d,11u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,8u} r17={16d,3u} r18={2d} r19={2d} r20={1d,26u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,2u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={2d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} 
;;    total ref usage 315{215d,100u,0e} in 55{53 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [3 key+0 S8 A64])
        (reg:DI 5 di [ key ])) "test1.c":65 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ key ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [1 index+0 S4 A32])
        (reg:SI 4 si [ index ])) "test1.c":65 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ index ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [3 key+0 S8 A64])) "test1.c":66 81 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (reg:DI 93)) "test1.c":66 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93)
        (nil)))
(call_insn 9 8 10 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("hashComputeByHashFunc") [flags 0x3]  <function_decl 0x7fa517a72a00 hashComputeByHashFunc>) [0 hashComputeByHashFunc S1 A8])
            (const_int 0 [0]))) "test1.c":66 676 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 10 9 11 2 (set (reg:SI 87 [ _1 ])
        (reg:SI 0 ax)) "test1.c":66 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 11 10 12 2 (parallel [
            (set (reg:SI 94)
                (lshiftrt:SI (reg:SI 87 [ _1 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":66 554 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 12 11 13 2 (set (reg:SI 96)
        (const_int 175921861 [0xa7c5ac5])) "test1.c":66 82 {*movsi_internal}
     (nil))
(insn 13 12 14 2 (parallel [
            (set (reg:SI 95)
                (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg:SI 94))
                            (zero_extend:DI (reg:SI 96)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":66 366 {*umulsi3_highpart_1}
     (expr_list:REG_DEAD (reg:SI 96)
        (expr_list:REG_DEAD (reg:SI 94)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 14 13 15 2 (parallel [
            (set (reg:SI 97)
                (lshiftrt:SI (reg:SI 95)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":66 554 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 95)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 15 14 16 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 pos+0 S4 A32])
        (reg:SI 97)) "test1.c":66 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 97)
        (nil)))
(insn 16 15 17 2 (set (reg:SI 99)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 pos+0 S4 A32])) "test1.c":66 82 {*movsi_internal}
     (nil))
(insn 17 16 18 2 (parallel [
            (set (reg:SI 98)
                (mult:SI (reg:SI 99)
                    (const_int 100000 [0x186a0])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":66 338 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 99)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 18 17 19 2 (parallel [
            (set (reg:SI 100)
                (minus:SI (reg:SI 87 [ _1 ])
                    (reg:SI 98)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":66 273 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 98)
        (expr_list:REG_DEAD (reg:SI 87 [ _1 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 19 18 20 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 pos+0 S4 A32])
        (reg:SI 100)) "test1.c":66 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 100)
        (nil)))
(insn 20 19 21 2 (set (reg:DI 101)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 pos+0 S4 A32]))) "test1.c":68 131 {*zero_extendsidi2}
     (nil))
(insn 21 20 22 2 (set (reg:SI 103)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [1 index+0 S4 A32])) "test1.c":68 82 {*movsi_internal}
     (nil))
(insn 22 21 23 2 (set (reg:DI 102)
        (sign_extend:DI (reg:SI 103))) "test1.c":68 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 103)
        (nil)))
(insn 23 22 24 2 (parallel [
            (set (reg:DI 104)
                (mult:DI (reg:DI 102)
                    (const_int 100000 [0x186a0])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":68 339 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 102)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 24 23 25 2 (parallel [
            (set (reg:DI 105)
                (plus:DI (reg:DI 104)
                    (reg:DI 101)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":68 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 104)
        (expr_list:REG_DEAD (reg:DI 101)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 25 24 26 2 (parallel [
            (set (reg:DI 106)
                (ashift:DI (reg:DI 105)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":68 522 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 105)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 26 25 27 2 (set (reg:DI 107)
        (symbol_ref:DI ("hashTable") [flags 0x2]  <var_decl 0x7fa517a76000 hashTable>)) "test1.c":68 81 {*movdi_internal}
     (nil))
(insn 27 26 28 2 (set (reg/f:DI 88 [ _2 ])
        (mem/f:DI (plus:DI (reg:DI 106)
                (reg:DI 107)) [2 hashTable S8 A64])) "test1.c":68 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 107)
        (expr_list:REG_DEAD (reg:DI 106)
            (nil))))
(insn 28 27 29 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 88 [ _2 ])
            (const_int 0 [0]))) "test1.c":68 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 88 [ _2 ])
        (nil)))
(jump_insn 29 28 30 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 66)
            (pc))) "test1.c":68 627 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 66)
;;  succ:       3 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 108 109 110 111 112 113 114 115
(note 30 29 31 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 3 (set (reg:DI 108)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 pos+0 S4 A32]))) "test1.c":70 131 {*zero_extendsidi2}
     (nil))
(insn 32 31 33 3 (set (reg:SI 110)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [1 index+0 S4 A32])) "test1.c":70 82 {*movsi_internal}
     (nil))
(insn 33 32 34 3 (set (reg:DI 109)
        (sign_extend:DI (reg:SI 110))) "test1.c":70 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 110)
        (nil)))
(insn 34 33 35 3 (parallel [
            (set (reg:DI 111)
                (mult:DI (reg:DI 109)
                    (const_int 100000 [0x186a0])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":70 339 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 109)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 35 34 36 3 (parallel [
            (set (reg:DI 112)
                (plus:DI (reg:DI 111)
                    (reg:DI 108)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":70 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 111)
        (expr_list:REG_DEAD (reg:DI 108)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 36 35 37 3 (parallel [
            (set (reg:DI 113)
                (ashift:DI (reg:DI 112)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":70 522 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 112)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 37 36 38 3 (set (reg:DI 114)
        (symbol_ref:DI ("hashTable") [flags 0x2]  <var_decl 0x7fa517a76000 hashTable>)) "test1.c":70 81 {*movdi_internal}
     (nil))
(insn 38 37 39 3 (set (reg/f:DI 115)
        (mem/f:DI (plus:DI (reg:DI 113)
                (reg:DI 114)) [2 hashTable S8 A64])) "test1.c":70 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 114)
        (expr_list:REG_DEAD (reg:DI 113)
            (nil))))
(insn 39 38 78 3 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [2 pHead+0 S8 A64])
        (reg/f:DI 115)) "test1.c":70 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 115)
        (nil)))
(jump_insn 78 39 79 3 (set (pc)
        (label_ref 61)) "test1.c":71 659 {jump}
     (nil)
 -> 61)
;;  succ:       7 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 79 78 63)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       7
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 89 90 116 117
(code_label 63 79 42 4 14 (nil) [1 uses])
(note 42 63 43 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 4 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [2 pHead+0 S8 A64])) "test1.c":73 81 {*movdi_internal}
     (nil))
(insn 44 43 45 4 (set (reg/f:DI 89 [ _3 ])
        (mem/f:DI (reg/f:DI 116) [3 pHead_5->Key+0 S8 A64])) "test1.c":73 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 116)
        (nil)))
(insn 45 44 46 4 (set (reg:DI 117)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [3 key+0 S8 A64])) "test1.c":73 81 {*movdi_internal}
     (nil))
(insn 46 45 47 4 (set (reg:DI 4 si)
        (reg/f:DI 89 [ _3 ])) "test1.c":73 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ _3 ])
        (nil)))
(insn 47 46 48 4 (set (reg:DI 5 di)
        (reg:DI 117)) "test1.c":73 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 117)
        (nil)))
(call_insn/i 48 47 49 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fa517cf7d00 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) "test1.c":73 676 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 49 48 50 4 (set (reg:SI 90 [ _4 ])
        (reg:SI 0 ax)) "test1.c":73 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 50 49 51 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 90 [ _4 ])
            (const_int 0 [0]))) "test1.c":73 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 90 [ _4 ])
        (nil)))
(jump_insn 51 50 52 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) "test1.c":73 627 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 56)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 91
(note 52 51 53 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 80 5 (set (reg/f:DI 91 [ _6 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [2 pHead+0 S8 A64])) "test1.c":75 81 {*movdi_internal}
     (nil))
(jump_insn 80 53 81 5 (set (pc)
        (label_ref 69)) "test1.c":75 659 {jump}
     (nil)
 -> 69)
;;  succ:       9 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91

(barrier 81 80 56)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 118 119
(code_label 56 81 57 6 12 (nil) [1 uses])
(note 57 56 58 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 6 (set (reg/f:DI 118)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [2 pHead+0 S8 A64])) "test1.c":77 81 {*movdi_internal}
     (nil))
(insn 59 58 60 6 (set (reg/f:DI 119)
        (mem/f:DI (plus:DI (reg/f:DI 118)
                (const_int 16 [0x10])) [2 pHead_5->pNext+0 S8 A64])) "test1.c":77 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 118)
        (nil)))
(insn 60 59 61 6 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [2 pHead+0 S8 A64])
        (reg/f:DI 119)) "test1.c":77 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 119)
        (nil)))
;;  succ:       7 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 (FALLTHRU,DFS_BACK)
;;              3 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 61 60 62 7 11 (nil) [1 uses])
(note 62 61 64 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 64 62 65 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [2 pHead+0 S8 A64])
            (const_int 0 [0]))) "test1.c":71 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 65 64 66 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 63)
            (pc))) "test1.c":71 627 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 63)
;;  succ:       4
;;              8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       2
;;              7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 91
(code_label 66 65 67 8 10 (nil) [1 uses])
(note 67 66 68 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 69 8 (set (reg/f:DI 91 [ _6 ])
        (const_int 0 [0])) "test1.c":80 81 {*movdi_internal}
     (nil))
;;  succ:       9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 1, flags: (RTL)
;;  pred:       8 (FALLTHRU)
;;              5 [100.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  def 	 0 [ax] 92
(code_label 69 68 70 9 13 (nil) [1 uses])
(note 70 69 71 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 75 9 (set (reg/f:DI 92 [ <retval> ])
        (reg/f:DI 91 [ _6 ])) 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ _6 ])
        (nil)))
(insn 75 71 76 9 (set (reg/i:DI 0 ax)
        (reg/f:DI 92 [ <retval> ])) "test1.c":81 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92 [ <retval> ])
        (nil)))
(insn 76 75 0 9 (use (reg/i:DI 0 ax)) "test1.c":81 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function hashTablePrintFunc (hashTablePrintFunc, funcdef_no=8, decl_uid=3250, cgraph_uid=8, symbol_order=11)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 10 n_edges 12 count 10 (    1)
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;;
;; Loop 1
;;  header 8, latch 7
;;  depth 1, outer 0
;;  nodes: 8 7 3 6 5 4
;;
;; Loop 2
;;  header 6, latch 5
;;  depth 2, outer 1
;;  nodes: 6 5
;; 2 succs { 8 }
;; 3 succs { 4 7 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 5 7 }
;; 7 succs { 8 }
;; 8 succs { 3 9 }
;; 9 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 8.
verify found no changes in insn with uid = 45.
verify found no changes in insn with uid = 50.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r89,l0) best SIREG, allocno GENERAL_REGS
    r88: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r88,l0) best DREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a1(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a2(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a4(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a5(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a6(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a7(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:24 INT_SSE_REGS:20 ALL_REGS:312 MEM:8
  a8(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:416 MEM:7
  a9(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a10(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a11(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a12(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a13(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a14(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a15(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a16(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:24 INT_SSE_REGS:20 ALL_REGS:312 MEM:8
  a17(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:416 MEM:7
  a18(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a19(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a20(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a21(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a22(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a23(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 67(l0): point = 0
   Insn 22(l0): point = 3
   Insn 21(l0): point = 5
   Insn 20(l0): point = 7
   Insn 19(l0): point = 9
   Insn 18(l0): point = 11
   Insn 17(l0): point = 13
   Insn 16(l0): point = 15
   Insn 15(l0): point = 17
   Insn 14(l0): point = 19
   Insn 13(l0): point = 21
   Insn 12(l0): point = 23
   Insn 63(l0): point = 26
   Insn 62(l0): point = 28
   Insn 58(l0): point = 31
   Insn 55(l0): point = 34
   Insn 54(l0): point = 36
   Insn 50(l0): point = 39
   Insn 49(l0): point = 41
   Insn 48(l0): point = 43
   Insn 47(l0): point = 45
   Insn 46(l0): point = 47
   Insn 45(l0): point = 49
   Insn 44(l0): point = 51
   Insn 43(l0): point = 53
   Insn 42(l0): point = 55
   Insn 41(l0): point = 57
   Insn 40(l0): point = 59
   Insn 39(l0): point = 61
   Insn 38(l0): point = 63
   Insn 37(l0): point = 65
   Insn 70(l0): point = 68
   Insn 33(l0): point = 70
   Insn 32(l0): point = 72
   Insn 31(l0): point = 74
   Insn 30(l0): point = 76
   Insn 29(l0): point = 78
   Insn 28(l0): point = 80
   Insn 27(l0): point = 82
   Insn 26(l0): point = 84
   Insn 25(l0): point = 86
   Insn 24(l0): point = 88
   Insn 68(l0): point = 91
   Insn 8(l0): point = 93
   Insn 7(l0): point = 95
   Insn 6(l0): point = 97
   Insn 2(l0): point = 99
 a0(r110): [44..45]
 a1(r109): [46..47]
 a2(r89): [56..59]
 a3(r88): [58..63]
 a4(r108): [60..61]
 a5(r107): [64..65]
 a6(r106): [71..72]
 a7(r105): [73..74]
 a8(r104): [73..76]
 a9(r103): [77..78]
 a10(r98): [79..86]
 a11(r102): [79..80]
 a12(r100): [81..82]
 a13(r101): [83..84]
 a14(r99): [87..88]
 a15(r87): [6..7]
 a16(r97): [8..9]
 a17(r96): [8..11]
 a18(r95): [12..13]
 a19(r90): [14..21]
 a20(r94): [14..15]
 a21(r92): [16..17]
 a22(r93): [18..19]
 a23(r91): [22..23]
Compressing live ranges: from 102 to 38 - 37%
Ranges after the compression:
 a0(r110): [14..15]
 a1(r109): [16..17]
 a2(r89): [18..19]
 a3(r88): [18..21]
 a4(r108): [20..21]
 a5(r107): [22..23]
 a6(r106): [24..25]
 a7(r105): [26..27]
 a8(r104): [26..27]
 a9(r103): [28..29]
 a10(r98): [30..35]
 a11(r102): [30..31]
 a12(r100): [32..33]
 a13(r101): [34..35]
 a14(r99): [36..37]
 a15(r87): [0..1]
 a16(r97): [2..3]
 a17(r96): [2..3]
 a18(r95): [4..5]
 a19(r90): [6..11]
 a20(r94): [6..7]
 a21(r92): [8..9]
 a22(r93): [10..11]
 a23(r91): [12..13]
  regions=1, blocks=10, points=38
    allocnos=24 (big 0), copies=0, conflicts=0, ranges=24
Disposition:
   15:r87  l0     0    3:r88  l0     1    2:r89  l0     0   19:r90  l0     0
   23:r91  l0     0   21:r92  l0     1   22:r93  l0     1   20:r94  l0     1
   18:r95  l0     0   17:r96  l0     1   16:r97  l0     0   10:r98  l0     0
   14:r99  l0     0   12:r100 l0     1   13:r101 l0     1   11:r102 l0     1
    9:r103 l0     0    8:r104 l0     1    7:r105 l0     0    6:r106 l0     0
    5:r107 l0     0    4:r108 l0     0    1:r109 l0     0    0:r110 l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


hashTablePrintFunc

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={5d,1u} r1={5d,1u} r2={4d} r4={5d,1u} r5={7d,4u} r6={1d,9u} r7={1d,12u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,8u} r17={13d,3u} r18={3d} r19={3d} r20={1d,24u} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} 
;;    total ref usage 362{275d,87u,0e} in 47{44 regular + 3 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [1 index+0 S4 A32])
        (reg:SI 5 di [ index ])) "test1.c":84 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 di [ index ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 0 [0])) "test1.c":85 82 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fa517acfab0 *.LC0>)) "test1.c":87 81 {*movdi_internal}
     (nil))
(call_insn 8 7 68 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa517d00600 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "test1.c":87 676 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 68 8 69 2 (set (pc)
        (label_ref 59)) "test1.c":88 659 {jump}
     (nil)
 -> 59)
;;  succ:       8 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 69 68 61)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       8
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 90 91 92 93 94 95 96 97
(code_label 61 69 11 3 20 (nil) [1 uses])
(note 11 61 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 3 (set (reg:SI 91)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "test1.c":90 82 {*movsi_internal}
     (nil))
(insn 13 12 14 3 (set (reg:DI 90)
        (sign_extend:DI (reg:SI 91))) "test1.c":90 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 91)
        (nil)))
(insn 14 13 15 3 (set (reg:SI 93)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [1 index+0 S4 A32])) "test1.c":90 82 {*movsi_internal}
     (nil))
(insn 15 14 16 3 (set (reg:DI 92)
        (sign_extend:DI (reg:SI 93))) "test1.c":90 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 93)
        (nil)))
(insn 16 15 17 3 (parallel [
            (set (reg:DI 94)
                (mult:DI (reg:DI 92)
                    (const_int 100000 [0x186a0])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":90 339 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 92)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 17 16 18 3 (parallel [
            (set (reg:DI 95)
                (plus:DI (reg:DI 94)
                    (reg:DI 90)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":90 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 94)
        (expr_list:REG_DEAD (reg:DI 90)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 18 17 19 3 (parallel [
            (set (reg:DI 96)
                (ashift:DI (reg:DI 95)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":90 522 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 95)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 19 18 20 3 (set (reg:DI 97)
        (symbol_ref:DI ("hashTable") [flags 0x2]  <var_decl 0x7fa517a76000 hashTable>)) "test1.c":90 81 {*movdi_internal}
     (nil))
(insn 20 19 21 3 (set (reg/f:DI 87 [ _1 ])
        (mem/f:DI (plus:DI (reg:DI 96)
                (reg:DI 97)) [2 hashTable S8 A64])) "test1.c":90 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 97)
        (expr_list:REG_DEAD (reg:DI 96)
            (nil))))
(insn 21 20 22 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 87 [ _1 ])
            (const_int 0 [0]))) "test1.c":90 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _1 ])
        (nil)))
(jump_insn 22 21 23 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) "test1.c":90 627 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 56)
;;  succ:       4 (FALLTHRU)
;;              7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 98 99 100 101 102 103 104 105 106
(note 23 22 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 4 (set (reg:SI 99)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "test1.c":92 82 {*movsi_internal}
     (nil))
(insn 25 24 26 4 (set (reg:DI 98)
        (sign_extend:DI (reg:SI 99))) "test1.c":92 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 99)
        (nil)))
(insn 26 25 27 4 (set (reg:SI 101)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [1 index+0 S4 A32])) "test1.c":92 82 {*movsi_internal}
     (nil))
(insn 27 26 28 4 (set (reg:DI 100)
        (sign_extend:DI (reg:SI 101))) "test1.c":92 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 101)
        (nil)))
(insn 28 27 29 4 (parallel [
            (set (reg:DI 102)
                (mult:DI (reg:DI 100)
                    (const_int 100000 [0x186a0])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":92 339 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 100)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 29 28 30 4 (parallel [
            (set (reg:DI 103)
                (plus:DI (reg:DI 102)
                    (reg:DI 98)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":92 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 102)
        (expr_list:REG_DEAD (reg:DI 98)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 30 29 31 4 (parallel [
            (set (reg:DI 104)
                (ashift:DI (reg:DI 103)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":92 522 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 103)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 31 30 32 4 (set (reg:DI 105)
        (symbol_ref:DI ("hashTable") [flags 0x2]  <var_decl 0x7fa517a76000 hashTable>)) "test1.c":92 81 {*movdi_internal}
     (nil))
(insn 32 31 33 4 (set (reg/f:DI 106)
        (mem/f:DI (plus:DI (reg:DI 104)
                (reg:DI 105)) [2 hashTable S8 A64])) "test1.c":92 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 105)
        (expr_list:REG_DEAD (reg:DI 104)
            (nil))))
(insn 33 32 70 4 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 pHead+0 S8 A64])
        (reg/f:DI 106)) "test1.c":92 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 106)
        (nil)))
(jump_insn 70 33 71 4 (set (pc)
        (label_ref 51)) "test1.c":93 659 {jump}
     (nil)
 -> 51)
;;  succ:       6 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 71 70 53)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       6
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 89 107 108 109 110
(code_label 53 71 36 5 19 (nil) [1 uses])
(note 36 53 37 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 5 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 pHead+0 S8 A64])) "test1.c":95 81 {*movdi_internal}
     (nil))
(insn 38 37 39 5 (set (reg:SI 88 [ _2 ])
        (mem:SI (plus:DI (reg/f:DI 107)
                (const_int 8 [0x8])) [1 pHead_5->Value+0 S4 A64])) "test1.c":95 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 107)
        (nil)))
(insn 39 38 40 5 (set (reg/f:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 pHead+0 S8 A64])) "test1.c":95 81 {*movdi_internal}
     (nil))
(insn 40 39 41 5 (set (reg/f:DI 89 [ _3 ])
        (mem/f:DI (reg/f:DI 108) [3 pHead_5->Key+0 S8 A64])) "test1.c":95 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 108)
        (nil)))
(insn 41 40 42 5 (set (reg:SI 1 dx)
        (reg:SI 88 [ _2 ])) "test1.c":95 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 88 [ _2 ])
        (nil)))
(insn 42 41 43 5 (set (reg:DI 4 si)
        (reg/f:DI 89 [ _3 ])) "test1.c":95 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ _3 ])
        (nil)))
(insn 43 42 44 5 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fa517acfb40 *.LC1>)) "test1.c":95 81 {*movdi_internal}
     (nil))
(insn 44 43 45 5 (set (reg:QI 0 ax)
        (const_int 0 [0])) "test1.c":95 84 {*movqi_internal}
     (nil))
(call_insn 45 44 46 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fa517cfff00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "test1.c":95 676 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 46 45 47 5 (set (reg/f:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 pHead+0 S8 A64])) "test1.c":96 81 {*movdi_internal}
     (nil))
(insn 47 46 48 5 (set (reg/f:DI 110)
        (mem/f:DI (plus:DI (reg/f:DI 109)
                (const_int 16 [0x10])) [2 pHead_5->pNext+0 S8 A64])) "test1.c":96 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 109)
        (nil)))
(insn 48 47 49 5 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 pHead+0 S8 A64])
        (reg/f:DI 110)) "test1.c":96 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 110)
        (nil)))
(insn 49 48 50 5 (set (reg:SI 5 di)
        (const_int 10 [0xa])) "test1.c":97 82 {*movsi_internal}
     (nil))
(call_insn 50 49 51 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7fa517d00200 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) "test1.c":97 676 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:       6 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 (FALLTHRU,DFS_BACK)
;;              4 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 51 50 52 6 18 (nil) [1 uses])
(note 52 51 54 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 54 52 55 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [2 pHead+0 S8 A64])
            (const_int 0 [0]))) "test1.c":93 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 55 54 56 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 53)
            (pc))) "test1.c":93 627 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 53)
;;  succ:       5
;;              7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       3
;;              6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 56 55 57 7 17 (nil) [1 uses])
(note 57 56 58 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":100 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       8 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       7 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 59 58 60 8 16 (nil) [1 uses])
(note 60 59 62 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 62 60 63 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
            (const_int 99999 [0x1869f]))) "test1.c":88 7 {*cmpsi_1}
     (nil))
(jump_insn 63 62 64 8 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 61)
            (pc))) "test1.c":88 627 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 61)
;;  succ:       3
;;              9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 1, flags: (RTL)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 64 63 67 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 67 64 0 9 (const_int 0 [0]) "test1.c":102 694 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function rmPunct2LowerFunc (rmPunct2LowerFunc, funcdef_no=9, decl_uid=3261, cgraph_uid=9, symbol_order=12)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 13 n_edges 17 count 13 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12
;;
;; Loop 1
;;  header 11, multiple latches: 10 5 7 9
;;  depth 1, outer 0
;;  nodes: 11 10 5 7 9 8 6 4 3
;; 2 succs { 11 }
;; 3 succs { 5 4 }
;; 4 succs { 5 6 }
;; 5 succs { 11 }
;; 6 succs { 7 8 }
;; 7 succs { 11 }
;; 8 succs { 9 10 }
;; 9 succs { 11 }
;; 10 succs { 11 }
;; 11 succs { 3 12 }
;; 12 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 13.
verify found no changes in insn with uid = 28.
verify found no changes in insn with uid = 49.
verify found no changes in insn with uid = 69.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r120,l0) best AREG, allocno GENERAL_REGS
    r119: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r119,l0) best DIREG, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a27 (r107,l0) best AREG, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a38 (r97,l0) best AREG, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a49 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a1(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:8
  a2(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a3(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:28 NO_REX_SSE_REGS:28 SSE_REGS:28 MMX_REGS:38 INT_SSE_REGS:30 ALL_REGS:520 MEM:12
  a4(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:8
  a5(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:28 NO_REX_SSE_REGS:28 SSE_REGS:28 MMX_REGS:38 INT_SSE_REGS:30 ALL_REGS:520 MEM:12
  a6(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:13 NO_REX_SSE_REGS:13 SSE_REGS:13 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a7(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:13 NO_REX_SSE_REGS:13 SSE_REGS:13 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a8(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a9(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:28 NO_REX_SSE_REGS:28 SSE_REGS:28 MMX_REGS:38 INT_SSE_REGS:30 ALL_REGS:520 MEM:12
  a10(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:5
  a11(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:4
  a12(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:13 NO_REX_SSE_REGS:13 SSE_REGS:13 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a13(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a14(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:4
  a15(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a16(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a17(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a18(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a19(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a20(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a21(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a22(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a23(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a24(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:4
  a25(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a26(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a27(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a28(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a29(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a30(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a31(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a32(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a33(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a34(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a35(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:4
  a36(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a37(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a38(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a39(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a40(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a41(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a42(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a43(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a44(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a45(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a46(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:4
  a47(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a48(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a49(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a50(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a51(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8

   Insn 111(l0): point = 0
   Insn 108(l0): point = 2
   Insn 107(l0): point = 4
   Insn 26(l0): point = 7
   Insn 25(l0): point = 9
   Insn 24(l0): point = 11
   Insn 23(l0): point = 13
   Insn 22(l0): point = 15
   Insn 21(l0): point = 17
   Insn 20(l0): point = 19
   Insn 19(l0): point = 21
   Insn 18(l0): point = 23
   Insn 17(l0): point = 25
   Insn 16(l0): point = 27
   Insn 15(l0): point = 29
   Insn 14(l0): point = 31
   Insn 13(l0): point = 33
   Insn 105(l0): point = 36
   Insn 104(l0): point = 38
   Insn 102(l0): point = 40
   Insn 101(l0): point = 42
   Insn 98(l0): point = 45
   Insn 97(l0): point = 47
   Insn 96(l0): point = 49
   Insn 95(l0): point = 51
   Insn 94(l0): point = 53
   Insn 93(l0): point = 55
   Insn 92(l0): point = 57
   Insn 91(l0): point = 59
   Insn 114(l0): point = 62
   Insn 44(l0): point = 64
   Insn 116(l0): point = 67
   Insn 76(l0): point = 69
   Insn 75(l0): point = 71
   Insn 74(l0): point = 73
   Insn 73(l0): point = 75
   Insn 72(l0): point = 77
   Insn 71(l0): point = 79
   Insn 70(l0): point = 81
   Insn 69(l0): point = 83
   Insn 68(l0): point = 85
   Insn 67(l0): point = 87
   Insn 66(l0): point = 89
   Insn 65(l0): point = 91
   Insn 64(l0): point = 93
   Insn 118(l0): point = 96
   Insn 86(l0): point = 98
   Insn 85(l0): point = 100
   Insn 83(l0): point = 103
   Insn 82(l0): point = 105
   Insn 81(l0): point = 107
   Insn 62(l0): point = 110
   Insn 61(l0): point = 112
   Insn 60(l0): point = 114
   Insn 59(l0): point = 116
   Insn 58(l0): point = 118
   Insn 57(l0): point = 120
   Insn 56(l0): point = 122
   Insn 55(l0): point = 124
   Insn 54(l0): point = 126
   Insn 53(l0): point = 128
   Insn 52(l0): point = 130
   Insn 51(l0): point = 132
   Insn 50(l0): point = 134
   Insn 49(l0): point = 136
   Insn 41(l0): point = 139
   Insn 40(l0): point = 141
   Insn 39(l0): point = 143
   Insn 38(l0): point = 145
   Insn 37(l0): point = 147
   Insn 36(l0): point = 149
   Insn 35(l0): point = 151
   Insn 34(l0): point = 153
   Insn 33(l0): point = 155
   Insn 32(l0): point = 157
   Insn 31(l0): point = 159
   Insn 30(l0): point = 161
   Insn 29(l0): point = 163
   Insn 28(l0): point = 165
   Insn 112(l0): point = 168
   Insn 9(l0): point = 170
   Insn 8(l0): point = 172
   Insn 7(l0): point = 174
   Insn 6(l0): point = 176
   Insn 2(l0): point = 178
 a0(r138): [3..4]
 a1(r126): [39..40]
 a2(r137): [41..42]
 a3(r124): [46..53]
 a4(r125): [46..47]
 a5(r123): [48..59]
 a6(r136): [50..51]
 a7(r135): [56..57]
 a8(r134): [106..107]
 a9(r121): [72..79]
 a10(r122): [72..73]
 a11(r120): [74..81]
 a12(r133): [76..77]
 a13(r119): [86..87]
 a14(r118): [88..89]
 a15(r117): [90..91]
 a16(r132): [92..93]
 a17(r116): [113..114]
 a18(r115): [115..116]
 a19(r114): [117..118]
 a20(r113): [119..120]
 a21(r112): [121..122]
 a22(r108): [121..132]
 a23(r111): [123..124]
 a24(r110): [125..126]
 a25(r109): [127..128]
 a26(r131): [129..130]
 a27(r107): [133..134]
 a28(r106): [142..143]
 a29(r105): [144..145]
 a30(r104): [146..147]
 a31(r103): [148..149]
 a32(r102): [150..151]
 a33(r98): [150..161]
 a34(r101): [152..153]
 a35(r100): [154..155]
 a36(r99): [156..157]
 a37(r130): [158..159]
 a38(r97): [162..163]
 a39(r96): [10..11]
 a40(r95): [12..13]
 a41(r94): [14..15]
 a42(r93): [16..17]
 a43(r92): [18..19]
 a44(r88): [18..29]
 a45(r91): [20..21]
 a46(r90): [22..23]
 a47(r89): [24..25]
 a48(r129): [26..27]
 a49(r87): [30..31]
 a50(r128): [171..172]
 a51(r127): [175..176]
Compressing live ranges: from 181 to 90 - 49%
Ranges after the compression:
 a0(r138): [0..1]
 a1(r126): [22..23]
 a2(r137): [24..25]
 a3(r124): [26..29]
 a4(r125): [26..27]
 a5(r123): [28..31]
 a6(r136): [28..29]
 a7(r135): [30..31]
 a8(r134): [44..45]
 a9(r121): [32..35]
 a10(r122): [32..33]
 a11(r120): [34..35]
 a12(r133): [34..35]
 a13(r119): [36..37]
 a14(r118): [38..39]
 a15(r117): [40..41]
 a16(r132): [42..43]
 a17(r116): [46..47]
 a18(r115): [48..49]
 a19(r114): [50..51]
 a20(r113): [52..53]
 a21(r112): [54..55]
 a22(r108): [54..63]
 a23(r111): [56..57]
 a24(r110): [58..59]
 a25(r109): [60..61]
 a26(r131): [62..63]
 a27(r107): [64..65]
 a28(r106): [66..67]
 a29(r105): [68..69]
 a30(r104): [70..71]
 a31(r103): [72..73]
 a32(r102): [74..75]
 a33(r98): [74..83]
 a34(r101): [76..77]
 a35(r100): [78..79]
 a36(r99): [80..81]
 a37(r130): [82..83]
 a38(r97): [84..85]
 a39(r96): [2..3]
 a40(r95): [4..5]
 a41(r94): [6..7]
 a42(r93): [8..9]
 a43(r92): [10..11]
 a44(r88): [10..19]
 a45(r91): [12..13]
 a46(r90): [14..15]
 a47(r89): [16..17]
 a48(r129): [18..19]
 a49(r87): [20..21]
 a50(r128): [86..87]
 a51(r127): [88..89]
  regions=1, blocks=13, points=90
    allocnos=52 (big 0), copies=0, conflicts=0, ranges=52
Disposition:
   49:r87  l0     0   44:r88  l0     1   47:r89  l0     0   46:r90  l0     0
   45:r91  l0     0   43:r92  l0     0   42:r93  l0     0   41:r94  l0     0
   40:r95  l0     0   39:r96  l0     0   38:r97  l0     0   33:r98  l0     1
   36:r99  l0     0   35:r100 l0     0   34:r101 l0     0   32:r102 l0     0
   31:r103 l0     0   30:r104 l0     0   29:r105 l0     0   28:r106 l0     0
   27:r107 l0     0   22:r108 l0     1   25:r109 l0     0   24:r110 l0     0
   23:r111 l0     0   21:r112 l0     0   20:r113 l0     0   19:r114 l0     0
   18:r115 l0     0   17:r116 l0     0   15:r117 l0     0   14:r118 l0     0
   13:r119 l0     0   11:r120 l0     2    9:r121 l0     0   10:r122 l0     1
    5:r123 l0     1    3:r124 l0     0    4:r125 l0     1    1:r126 l0     0
   51:r127 l0     0   50:r128 l0     0   48:r129 l0     0   37:r130 l0     0
   26:r131 l0     0   16:r132 l0     0   12:r133 l0     1    8:r134 l0     0
    7:r135 l0     0    6:r136 l0     2    2:r137 l0     0    0:r138 l0     0
+++Costs: overall -5, reg -5, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


rmPunct2LowerFunc

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={5d,4u} r1={5d} r2={5d} r4={5d} r5={6d,2u} r6={1d,12u} r7={1d,16u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,11u} r17={25d,5u} r18={4d} r19={4d} r20={1d,39u} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,2u} r122={1d,1u} r123={1d,2u} r124={1d,2u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} 
;;    total ref usage 525{381d,144u,0e} in 85{81 regular + 4 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 127 128
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [3 p+0 S8 A64])
        (reg:DI 5 di [ p ])) "test1.c":106 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ p ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 127)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [3 p+0 S8 A64])) "test1.c":107 81 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [3 src+0 S8 A64])
        (reg/f:DI 127)) "test1.c":107 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 127)
        (nil)))
(insn 8 7 9 2 (set (reg/f:DI 128)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [3 p+0 S8 A64])) "test1.c":107 81 {*movdi_internal}
     (nil))
(insn 9 8 112 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [3 dst+0 S8 A64])
        (reg/f:DI 128)) "test1.c":107 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 128)
        (nil)))
(jump_insn 112 9 113 2 (set (pc)
        (label_ref 99)) "test1.c":108 659 {jump}
     (nil)
 -> 99)
;;  succ:       11 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 113 112 103)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       11
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92 93 94 95 96 129
(code_label 103 113 12 3 27 (nil) [1 uses])
(note 12 103 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn/u 13 12 14 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__ctype_b_loc") [flags 0x41]  <function_decl 0x7fa517e09400 __ctype_b_loc>) [0 __ctype_b_loc S1 A8])
            (const_int 0 [0]))) "test1.c":110 676 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 14 13 15 3 (set (reg/f:DI 87 [ _1 ])
        (reg:DI 0 ax)) "test1.c":110 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 15 14 16 3 (set (reg/f:DI 88 [ _2 ])
        (mem/f:DI (reg/f:DI 87 [ _1 ]) [5 *_1+0 S8 A64])) "test1.c":110 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _1 ])
        (nil)))
(insn 16 15 17 3 (set (reg/f:DI 129)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [3 src+0 S8 A64])) "test1.c":110 81 {*movdi_internal}
     (nil))
(insn 17 16 18 3 (set (reg:QI 89 [ _3 ])
        (mem:QI (reg/f:DI 129) [0 *src_41+0 S1 A8])) "test1.c":110 84 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 129)
        (nil)))
(insn 18 17 19 3 (set (reg:QI 90 [ _4 ])
        (reg:QI 89 [ _3 ])) "test1.c":110 84 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 89 [ _3 ])
        (nil)))
(insn 19 18 20 3 (set (reg:DI 91 [ _5 ])
        (zero_extend:DI (reg:QI 90 [ _4 ]))) "test1.c":110 132 {zero_extendqidi2}
     (expr_list:REG_DEAD (reg:QI 90 [ _4 ])
        (nil)))
(insn 20 19 21 3 (parallel [
            (set (reg:DI 92 [ _6 ])
                (ashift:DI (reg:DI 91 [ _5 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":110 522 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 91 [ _5 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 21 20 22 3 (parallel [
            (set (reg/f:DI 93 [ _7 ])
                (plus:DI (reg/f:DI 88 [ _2 ])
                    (reg:DI 92 [ _6 ])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":110 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 92 [ _6 ])
        (expr_list:REG_DEAD (reg/f:DI 88 [ _2 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 22 21 23 3 (set (reg:HI 94 [ _8 ])
        (mem:HI (reg/f:DI 93 [ _7 ]) [6 *_7+0 S2 A16])) "test1.c":110 83 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93 [ _7 ])
        (nil)))
(insn 23 22 24 3 (set (reg:SI 95 [ _9 ])
        (zero_extend:SI (reg:HI 94 [ _8 ]))) "test1.c":110 137 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 94 [ _8 ])
        (nil)))
(insn 24 23 25 3 (parallel [
            (set (reg:SI 96 [ _10 ])
                (and:SI (reg:SI 95 [ _9 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":110 401 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 95 [ _9 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 25 24 26 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 96 [ _10 ])
            (const_int 0 [0]))) "test1.c":110 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 96 [ _10 ])
        (nil)))
(jump_insn 26 25 27 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 42)
            (pc))) "test1.c":110 627 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 42)
;;  succ:       5
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 97 98 99 100 101 102 103 104 105 106 130
(note 27 26 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(call_insn/u 28 27 29 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__ctype_b_loc") [flags 0x41]  <function_decl 0x7fa517e09400 __ctype_b_loc>) [0 __ctype_b_loc S1 A8])
            (const_int 0 [0]))) "test1.c":110 676 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 29 28 30 4 (set (reg/f:DI 97 [ _11 ])
        (reg:DI 0 ax)) "test1.c":110 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 30 29 31 4 (set (reg/f:DI 98 [ _12 ])
        (mem/f:DI (reg/f:DI 97 [ _11 ]) [5 *_11+0 S8 A64])) "test1.c":110 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 97 [ _11 ])
        (nil)))
(insn 31 30 32 4 (set (reg/f:DI 130)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [3 src+0 S8 A64])) "test1.c":110 81 {*movdi_internal}
     (nil))
(insn 32 31 33 4 (set (reg:QI 99 [ _13 ])
        (mem:QI (reg/f:DI 130) [0 *src_41+0 S1 A8])) "test1.c":110 84 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 130)
        (nil)))
(insn 33 32 34 4 (set (reg:QI 100 [ _14 ])
        (reg:QI 99 [ _13 ])) "test1.c":110 84 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 99 [ _13 ])
        (nil)))
(insn 34 33 35 4 (set (reg:DI 101 [ _15 ])
        (zero_extend:DI (reg:QI 100 [ _14 ]))) "test1.c":110 132 {zero_extendqidi2}
     (expr_list:REG_DEAD (reg:QI 100 [ _14 ])
        (nil)))
(insn 35 34 36 4 (parallel [
            (set (reg:DI 102 [ _16 ])
                (ashift:DI (reg:DI 101 [ _15 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":110 522 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 101 [ _15 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 36 35 37 4 (parallel [
            (set (reg/f:DI 103 [ _17 ])
                (plus:DI (reg/f:DI 98 [ _12 ])
                    (reg:DI 102 [ _16 ])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":110 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 102 [ _16 ])
        (expr_list:REG_DEAD (reg/f:DI 98 [ _12 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 37 36 38 4 (set (reg:HI 104 [ _18 ])
        (mem:HI (reg/f:DI 103 [ _17 ]) [6 *_17+0 S2 A16])) "test1.c":110 83 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:DI 103 [ _17 ])
        (nil)))
(insn 38 37 39 4 (set (reg:SI 105 [ _19 ])
        (zero_extend:SI (reg:HI 104 [ _18 ]))) "test1.c":110 137 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 104 [ _18 ])
        (nil)))
(insn 39 38 40 4 (parallel [
            (set (reg:SI 106 [ _20 ])
                (and:SI (reg:SI 105 [ _19 ])
                    (const_int 2048 [0x800])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":110 401 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 105 [ _19 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 40 39 41 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 106 [ _20 ])
            (const_int 0 [0]))) "test1.c":110 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 106 [ _20 ])
        (nil)))
(jump_insn 41 40 42 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 47)
            (pc))) "test1.c":110 627 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 47)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       3
;;              4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 42 41 43 5 23 (nil) [1 uses])
(note 43 42 44 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 114 5 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [3 src+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [3 src+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":112 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 114 44 115 5 (set (pc)
        (label_ref 99)) "test1.c":112 659 {jump}
     (nil)
 -> 99)
;;  succ:       11 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 115 114 47)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 107 108 109 110 111 112 113 114 115 116 131
(code_label 47 115 48 6 24 (nil) [1 uses])
(note 48 47 49 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(call_insn/u 49 48 50 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__ctype_b_loc") [flags 0x41]  <function_decl 0x7fa517e09400 __ctype_b_loc>) [0 __ctype_b_loc S1 A8])
            (const_int 0 [0]))) "test1.c":114 676 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 50 49 51 6 (set (reg/f:DI 107 [ _21 ])
        (reg:DI 0 ax)) "test1.c":114 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 51 50 52 6 (set (reg/f:DI 108 [ _22 ])
        (mem/f:DI (reg/f:DI 107 [ _21 ]) [5 *_21+0 S8 A64])) "test1.c":114 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 107 [ _21 ])
        (nil)))
(insn 52 51 53 6 (set (reg/f:DI 131)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [3 src+0 S8 A64])) "test1.c":114 81 {*movdi_internal}
     (nil))
(insn 53 52 54 6 (set (reg:QI 109 [ _23 ])
        (mem:QI (reg/f:DI 131) [0 *src_41+0 S1 A8])) "test1.c":114 84 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 131)
        (nil)))
(insn 54 53 55 6 (set (reg:QI 110 [ _24 ])
        (reg:QI 109 [ _23 ])) "test1.c":114 84 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 109 [ _23 ])
        (nil)))
(insn 55 54 56 6 (set (reg:DI 111 [ _25 ])
        (zero_extend:DI (reg:QI 110 [ _24 ]))) "test1.c":114 132 {zero_extendqidi2}
     (expr_list:REG_DEAD (reg:QI 110 [ _24 ])
        (nil)))
(insn 56 55 57 6 (parallel [
            (set (reg:DI 112 [ _26 ])
                (ashift:DI (reg:DI 111 [ _25 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":114 522 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 111 [ _25 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 57 56 58 6 (parallel [
            (set (reg/f:DI 113 [ _27 ])
                (plus:DI (reg/f:DI 108 [ _22 ])
                    (reg:DI 112 [ _26 ])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":114 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 112 [ _26 ])
        (expr_list:REG_DEAD (reg/f:DI 108 [ _22 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 58 57 59 6 (set (reg:HI 114 [ _28 ])
        (mem:HI (reg/f:DI 113 [ _27 ]) [6 *_27+0 S2 A16])) "test1.c":114 83 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:DI 113 [ _27 ])
        (nil)))
(insn 59 58 60 6 (set (reg:SI 115 [ _29 ])
        (zero_extend:SI (reg:HI 114 [ _28 ]))) "test1.c":114 137 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 114 [ _28 ])
        (nil)))
(insn 60 59 61 6 (parallel [
            (set (reg:SI 116 [ _30 ])
                (and:SI (reg:SI 115 [ _29 ])
                    (const_int 256 [0x100])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":114 401 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 115 [ _29 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 61 60 62 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 116 [ _30 ])
            (const_int 0 [0]))) "test1.c":114 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 116 [ _30 ])
        (nil)))
(jump_insn 62 61 63 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 79)
            (pc))) "test1.c":114 627 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 79)
;;  succ:       7 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 117 118 119 120 121 122 132 133
(note 63 62 64 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 7 (set (reg/f:DI 132)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [3 src+0 S8 A64])) "test1.c":116 81 {*movdi_internal}
     (nil))
(insn 65 64 66 7 (set (reg:QI 117 [ _31 ])
        (mem:QI (reg/f:DI 132) [0 *src_41+0 S1 A8])) "test1.c":116 84 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 132)
        (nil)))
(insn 66 65 67 7 (set (reg:QI 118 [ _32 ])
        (reg:QI 117 [ _31 ])) "test1.c":116 84 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 117 [ _31 ])
        (nil)))
(insn 67 66 68 7 (set (reg:SI 119 [ _33 ])
        (zero_extend:SI (reg:QI 118 [ _32 ]))) "test1.c":116 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 118 [ _32 ])
        (nil)))
(insn 68 67 69 7 (set (reg:SI 5 di)
        (reg:SI 119 [ _33 ])) "test1.c":116 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 119 [ _33 ])
        (nil)))
(call_insn/i 69 68 70 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("tolower") [flags 0x41]  <function_decl 0x7fa517d08d00 tolower>) [0 __builtin_tolower S1 A8])
            (const_int 0 [0]))) "test1.c":116 676 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 70 69 71 7 (set (reg:SI 120 [ _34 ])
        (reg:SI 0 ax)) "test1.c":116 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 71 70 72 7 (set (reg/f:DI 121 [ dst.2_35 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [3 dst+0 S8 A64])) "test1.c":116 81 {*movdi_internal}
     (nil))
(insn 72 71 73 7 (parallel [
            (set (reg:DI 133)
                (plus:DI (reg/f:DI 121 [ dst.2_35 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":116 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 73 72 74 7 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [3 dst+0 S8 A64])
        (reg:DI 133)) "test1.c":116 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 133)
        (nil)))
(insn 74 73 75 7 (set (reg:QI 122 [ _36 ])
        (subreg:QI (reg:SI 120 [ _34 ]) 0)) "test1.c":116 84 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 120 [ _34 ])
        (nil)))
(insn 75 74 76 7 (set (mem:QI (reg/f:DI 121 [ dst.2_35 ]) [0 *dst.2_35+0 S1 A8])
        (reg:QI 122 [ _36 ])) "test1.c":116 84 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 122 [ _36 ])
        (expr_list:REG_DEAD (reg/f:DI 121 [ dst.2_35 ])
            (nil))))
(insn 76 75 116 7 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [3 src+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [3 src+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":117 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 116 76 117 7 (set (pc)
        (label_ref 99)) 659 {jump}
     (nil)
 -> 99)
;;  succ:       11 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 117 116 79)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       6
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 134
(code_label 79 117 80 8 25 (nil) [1 uses])
(note 80 79 81 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 8 (set (reg/f:DI 134)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [3 src+0 S8 A64])) "test1.c":119 81 {*movdi_internal}
     (nil))
(insn 82 81 83 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 134)
            (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [3 dst+0 S8 A64]))) "test1.c":119 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 134)
        (nil)))
(jump_insn 83 82 84 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 89)
            (pc))) "test1.c":119 627 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 89)
;;  succ:       9 (FALLTHRU)
;;              10
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 84 83 85 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 86 9 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [3 src+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [3 src+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":121 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 86 85 118 9 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -16 [0xfffffffffffffff0])) [3 dst+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [3 dst+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":122 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 118 86 119 9 (set (pc)
        (label_ref 99)) 659 {jump}
     (nil)
 -> 99)
;;  succ:       11 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 119 118 89)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       8
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 123 124 125 135 136
(code_label 89 119 90 10 26 (nil) [1 uses])
(note 90 89 91 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 92 10 (set (reg/f:DI 123 [ src.3_37 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [3 src+0 S8 A64])) "test1.c":126 81 {*movdi_internal}
     (nil))
(insn 92 91 93 10 (parallel [
            (set (reg:DI 135)
                (plus:DI (reg/f:DI 123 [ src.3_37 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":126 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 93 92 94 10 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [3 src+0 S8 A64])
        (reg:DI 135)) "test1.c":126 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 135)
        (nil)))
(insn 94 93 95 10 (set (reg/f:DI 124 [ dst.4_38 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [3 dst+0 S8 A64])) "test1.c":126 81 {*movdi_internal}
     (nil))
(insn 95 94 96 10 (parallel [
            (set (reg:DI 136)
                (plus:DI (reg/f:DI 124 [ dst.4_38 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":126 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 96 95 97 10 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [3 dst+0 S8 A64])
        (reg:DI 136)) "test1.c":126 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 136)
        (nil)))
(insn 97 96 98 10 (set (reg:QI 125 [ _39 ])
        (mem:QI (reg/f:DI 123 [ src.3_37 ]) [0 *src.3_37+0 S1 A8])) "test1.c":126 84 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 123 [ src.3_37 ])
        (nil)))
(insn 98 97 99 10 (set (mem:QI (reg/f:DI 124 [ dst.4_38 ]) [0 *dst.4_38+0 S1 A8])
        (reg:QI 125 [ _39 ])) "test1.c":126 84 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 125 [ _39 ])
        (expr_list:REG_DEAD (reg/f:DI 124 [ dst.4_38 ])
            (nil))))
;;  succ:       11 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       10 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;;              5 [100.0%] 
;;              7 [100.0%] 
;;              9 [100.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 126 137
(code_label 99 98 100 11 22 (nil) [4 uses])
(note 100 99 101 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 101 100 102 11 (set (reg/f:DI 137)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [3 src+0 S8 A64])) "test1.c":108 81 {*movdi_internal}
     (nil))
(insn 102 101 104 11 (set (reg:QI 126 [ _40 ])
        (mem:QI (reg/f:DI 137) [0 *src_41+0 S1 A8])) "test1.c":108 84 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 137)
        (nil)))
(insn 104 102 105 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 126 [ _40 ])
            (const_int 0 [0]))) "test1.c":108 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 126 [ _40 ])
        (nil)))
(jump_insn 105 104 106 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 103)
            (pc))) "test1.c":108 627 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 103)
;;  succ:       3
;;              12 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 1, flags: (RTL)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 138
(note 106 105 107 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 107 106 108 12 (set (reg/f:DI 138)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [3 dst+0 S8 A64])) "test1.c":129 81 {*movdi_internal}
     (nil))
(insn 108 107 111 12 (set (mem:QI (reg/f:DI 138) [0 *dst_42+0 S1 A8])
        (const_int 0 [0])) "test1.c":129 84 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 138)
        (nil)))
(insn 111 108 0 12 (const_int 0 [0]) "test1.c":130 694 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function readFunc (readFunc, funcdef_no=10, decl_uid=3270, cgraph_uid=10, symbol_order=13)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 9 n_edges 10 count 9 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5
;; 2 succs { 3 4 }
;; 3 succs { 8 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 5 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 18.
verify found no changes in insn with uid = 28.
verify found no changes in insn with uid = 37.
verify found no changes in insn with uid = 60.
verify found no changes in insn with uid = 68.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r112: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r112,l0) best DIREG, allocno GENERAL_REGS
    r111: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r111,l0) best DIREG, allocno GENERAL_REGS
    r110: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r110,l0) best DREG, allocno GENERAL_REGS
    r109: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r109,l0) best AREG, allocno GENERAL_REGS
    r108: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r108,l0) best CREG, allocno GENERAL_REGS
    r107: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r107,l0) best DIREG, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r105,l0) best CREG, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a18 (r99,l0) best SIREG, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a23 (r94,l0) best DIREG, allocno GENERAL_REGS
    r93: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a24 (r93,l0) best AREG, allocno GENERAL_REGS
    r92: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a25 (r92,l0) best DIREG, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a17 (r87,l0) best DIREG, allocno GENERAL_REGS

  a0(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a1(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a4(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a5(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a6(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:39 INT_SSE_REGS:31 ALL_REGS:624 MEM:9
  a7(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a8(r105,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 CLOBBERED_REGS:2 Q_REGS:2 NON_Q_REGS:2 TLS_GOTBASE_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a9(r107,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 SSE_FIRST_REG:29 NO_REX_SSE_REGS:29 SSE_REGS:29 MMX_REGS:34 INT_SSE_REGS:30 ALL_REGS:516 MEM:9
  a10(r109,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 CLOBBERED_REGS:2 Q_REGS:2 NON_Q_REGS:2 TLS_GOTBASE_REGS:2 GENERAL_REGS:2 MEM:5
  a11(r108,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 CLOBBERED_REGS:2 Q_REGS:2 NON_Q_REGS:2 TLS_GOTBASE_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a12(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a13(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a14(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a15(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a16(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a17(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a18(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a19(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a20(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a21(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a22(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a23(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a24(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a25(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 68(l0): point = 1
   Insn 67(l0): point = 3
   Insn 66(l0): point = 5
   Insn 51(l0): point = 8
   Insn 50(l0): point = 10
   Insn 48(l0): point = 12
   Insn 47(l0): point = 14
   Insn 46(l0): point = 16
   Insn 45(l0): point = 18
   Insn 44(l0): point = 20
   Insn 43(l0): point = 22
   Insn 49(l0): point = 24
   Insn 42(l0): point = 26
   Insn 41(l0): point = 28
   Insn 40(l0): point = 30
   Insn 39(l0): point = 32
   Insn 38(l0): point = 34
   Insn 37(l0): point = 36
   Insn 36(l0): point = 38
   Insn 35(l0): point = 40
   Insn 34(l0): point = 42
   Insn 33(l0): point = 44
   Insn 32(l0): point = 46
   Insn 31(l0): point = 48
   Insn 30(l0): point = 50
   Insn 29(l0): point = 52
   Insn 28(l0): point = 54
   Insn 27(l0): point = 56
   Insn 26(l0): point = 58
   Insn 64(l0): point = 61
   Insn 63(l0): point = 63
   Insn 61(l0): point = 65
   Insn 60(l0): point = 67
   Insn 59(l0): point = 69
   Insn 58(l0): point = 71
   Insn 57(l0): point = 73
   Insn 56(l0): point = 75
   Insn 55(l0): point = 77
   Insn 54(l0): point = 79
   Insn 75(l0): point = 82
   Insn 73(l0): point = 85
   Insn 18(l0): point = 87
   Insn 17(l0): point = 89
   Insn 16(l0): point = 91
   Insn 14(l0): point = 94
   Insn 13(l0): point = 96
   Insn 12(l0): point = 98
   Insn 11(l0): point = 100
   Insn 10(l0): point = 102
   Insn 9(l0): point = 104
   Insn 8(l0): point = 106
   Insn 7(l0): point = 108
   Insn 3(l0): point = 110
   Insn 2(l0): point = 112
 a0(r112): [4..5]
 a1(r89): [64..65]
 a2(r111): [72..77]
 a3(r110): [76..79]
 a4(r91): [9..10]
 a5(r90): [11..12]
 a6(r88): [11..26]
 a7(r106): [13..14]
 a8(r105): [15..16]
 a9(r107): [16..20]
 a10(r109): [17..18]
 a11(r108): [17..22]
 a12(r104): [21..24]
 a13(r103): [27..28]
 a14(r102): [27..30]
 a15(r100): [31..32]
 a16(r101): [33..34]
 a17(r87): [39..44]
 a18(r99): [41..42]
 a19(r98): [45..46]
 a20(r97): [45..48]
 a21(r95): [49..50]
 a22(r96): [51..52]
 a23(r94): [57..58]
 a24(r93): [99..100]
 a25(r92): [105..108]
Compressing live ranges: from 115 to 38 - 33%
Ranges after the compression:
 a0(r112): [0..1]
 a1(r89): [30..31]
 a2(r111): [32..33]
 a3(r110): [32..33]
 a4(r91): [2..3]
 a5(r90): [4..5]
 a6(r88): [4..13]
 a7(r106): [6..7]
 a8(r105): [8..9]
 a9(r107): [9..11]
 a10(r109): [10..11]
 a11(r108): [10..13]
 a12(r104): [12..13]
 a13(r103): [14..15]
 a14(r102): [14..15]
 a15(r100): [16..17]
 a16(r101): [18..19]
 a17(r87): [20..21]
 a18(r99): [20..21]
 a19(r98): [22..23]
 a20(r97): [22..23]
 a21(r95): [24..25]
 a22(r96): [26..27]
 a23(r94): [28..29]
 a24(r93): [34..35]
 a25(r92): [36..37]
  pref0:a10(r109)<-hr0@1
  pref1:a11(r108)<-hr2@1
  pref2:a9(r107)<-hr5@2
  pref3:a8(r105)<-hr2@1
  regions=1, blocks=9, points=38
    allocnos=26 (big 0), copies=0, conflicts=0, ranges=26
Disposition:
   17:r87  l0     1    6:r88  l0     1    1:r89  l0     0    5:r90  l0     0
    4:r91  l0     0   25:r92  l0     0   24:r93  l0     0   23:r94  l0     0
   21:r95  l0     0   22:r96  l0     0   20:r97  l0     1   19:r98  l0     0
   18:r99  l0     0   15:r100 l0     0   16:r101 l0     0   14:r102 l0     1
   13:r103 l0     0   12:r104 l0     0    8:r105 l0     0    7:r106 l0     0
    9:r107 l0     4   11:r108 l0     2   10:r109 l0     0    3:r110 l0     1
    2:r111 l0     0    0:r112 l0     0
+++Costs: overall -9, reg -9, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


readFunc

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={9d,4u} r1={8d,1u} r2={7d} r4={10d,4u} r5={13d,7u} r6={1d,8u} r7={1d,14u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r16={1d,7u} r17={18d,2u} r18={6d} r19={6d} r20={1d,20u} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={7d} r38={7d} r39={6d} r40={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r87={1d,1u} r88={1d,2u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={2d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} 
;;    total ref usage 596{502d,94u,0e} in 54{48 regular + 6 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 92 93
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -1016 [0xfffffffffffffc08])) [3 filename+0 S8 A64])
        (reg:DI 5 di [ filename ])) "test1.c":134 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ filename ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -1020 [0xfffffffffffffc04])) [1 index+0 S4 A32])
        (reg:SI 4 si [ index ])) "test1.c":134 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ index ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -1016 [0xfffffffffffffc08])) [3 filename+0 S8 A64])) "test1.c":135 81 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fa517adce10 *.LC2>)) "test1.c":135 81 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg:DI 92)) "test1.c":135 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92)
        (nil)))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7fa517dd2a00 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) "test1.c":135 676 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 11 10 12 2 (set (reg:DI 93)
        (reg:DI 0 ax)) "test1.c":135 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 12 11 13 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [7 fp+0 S8 A64])
        (reg:DI 93)) "test1.c":135 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93)
        (nil)))
(insn 13 12 14 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [7 fp+0 S8 A64])
            (const_int 0 [0]))) "test1.c":137 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) "test1.c":137 627 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 21)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7fa517adcea0 *.LC3>)) "test1.c":139 81 {*movdi_internal}
     (nil))
(insn 17 16 18 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) "test1.c":139 84 {*movqi_internal}
     (nil))
(call_insn 18 17 73 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fa517cfff00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "test1.c":139 676 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(jump_insn 73 18 74 3 (set (pc)
        (label_ref 71)) 659 {jump}
     (nil)
 -> 71)
;;  succ:       8 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 74 73 21)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 21 74 22 4 29 (nil) [1 uses])
(note 22 21 75 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(jump_insn 75 22 76 4 (set (pc)
        (label_ref 52)) "test1.c":143 659 {jump}
     (nil)
 -> 52)
;;  succ:       6 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 76 75 62)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       6
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 90 91 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109
(code_label 62 76 25 5 32 (nil) [1 uses])
(note 25 62 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 5 (parallel [
            (set (reg:DI 94)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1008 [0xfffffffffffffc10])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":145 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 27 26 28 5 (set (reg:DI 5 di)
        (reg:DI 94)) "test1.c":145 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 94)
        (nil)))
(call_insn 28 27 29 5 (call (mem:QI (symbol_ref:DI ("rmPunct2LowerFunc") [flags 0x3]  <function_decl 0x7fa517a7c200 rmPunct2LowerFunc>) [0 rmPunct2LowerFunc S1 A8])
        (const_int 0 [0])) "test1.c":145 665 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 29 28 30 5 (set (reg:SI 96)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -1020 [0xfffffffffffffc04])) [1 index+0 S4 A32])) "test1.c":146 82 {*movsi_internal}
     (nil))
(insn 30 29 31 5 (set (reg:DI 95)
        (sign_extend:DI (reg:SI 96))) "test1.c":146 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 96)
        (nil)))
(insn 31 30 32 5 (parallel [
            (set (reg:DI 97)
                (mult:DI (reg:DI 95)
                    (const_int 5000000 [0x4c4b40])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":146 339 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 95)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 32 31 33 5 (set (reg:DI 98)
        (symbol_ref:DI ("text") [flags 0x2]  <var_decl 0x7fa517daaea0 text>)) "test1.c":146 81 {*movdi_internal}
     (nil))
(insn 33 32 34 5 (parallel [
            (set (reg/f:DI 87 [ _1 ])
                (plus:DI (reg:DI 97)
                    (reg:DI 98)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":146 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 98)
        (expr_list:REG_DEAD (reg:DI 97)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 34 33 35 5 (parallel [
            (set (reg:DI 99)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1008 [0xfffffffffffffc10])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":146 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 35 34 36 5 (set (reg:DI 4 si)
        (reg:DI 99)) "test1.c":146 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 99)
        (nil)))
(insn 36 35 37 5 (set (reg:DI 5 di)
        (reg/f:DI 87 [ _1 ])) "test1.c":146 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _1 ])
        (nil)))
(call_insn 37 36 38 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcat") [flags 0x41]  <function_decl 0x7fa517cf7900 strcat>) [0 __builtin_strcat S1 A8])
            (const_int 0 [0]))) "test1.c":146 676 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 38 37 39 5 (set (reg:SI 101)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -1020 [0xfffffffffffffc04])) [1 index+0 S4 A32])) "test1.c":147 82 {*movsi_internal}
     (nil))
(insn 39 38 40 5 (set (reg:DI 100)
        (sign_extend:DI (reg:SI 101))) "test1.c":147 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 101)
        (nil)))
(insn 40 39 41 5 (parallel [
            (set (reg:DI 102)
                (mult:DI (reg:DI 100)
                    (const_int 5000000 [0x4c4b40])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":147 339 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 100)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 41 40 42 5 (set (reg:DI 103)
        (symbol_ref:DI ("text") [flags 0x2]  <var_decl 0x7fa517daaea0 text>)) "test1.c":147 81 {*movdi_internal}
     (nil))
(insn 42 41 49 5 (parallel [
            (set (reg/f:DI 88 [ _2 ])
                (plus:DI (reg:DI 102)
                    (reg:DI 103)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":147 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 103)
        (expr_list:REG_DEAD (reg:DI 102)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 49 42 43 5 (set (reg:DI 104)
        (reg/f:DI 88 [ _2 ])) "test1.c":147 81 {*movdi_internal}
     (nil))
(insn 43 49 44 5 (set (reg:DI 108)
        (const_int -1 [0xffffffffffffffff])) "test1.c":147 81 {*movdi_internal}
     (nil))
(insn 44 43 45 5 (set (reg:DI 107)
        (reg:DI 104)) "test1.c":147 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 104)
        (nil)))
(insn 45 44 46 5 (set (reg:QI 109)
        (const_int 0 [0])) "test1.c":147 84 {*movqi_internal}
     (nil))
(insn 46 45 47 5 (parallel [
            (set (reg:DI 105)
                (unspec:DI [
                        (mem:BLK (reg:DI 107) [0  A8])
                        (reg:QI 109)
                        (const_int 1 [0x1])
                        (reg:DI 108)
                    ] UNSPEC_SCAS))
            (clobber (reg:DI 107))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":147 968 {*strlenqi_1}
     (expr_list:REG_DEAD (reg:QI 109)
        (expr_list:REG_DEAD (reg:DI 108)
            (expr_list:REG_DEAD (reg:DI 107)
                (expr_list:REG_UNUSED (reg:DI 107)
                    (expr_list:REG_UNUSED (reg:CC 17 flags)
                        (nil)))))))
(insn 47 46 48 5 (set (reg:DI 106)
        (not:DI (reg:DI 105))) "test1.c":147 505 {*one_cmpldi2_1}
     (expr_list:REG_DEAD (reg:DI 105)
        (nil)))
(insn 48 47 50 5 (parallel [
            (set (reg:DI 90 [ _16 ])
                (plus:DI (reg:DI 106)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":147 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 106)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 50 48 51 5 (parallel [
            (set (reg/f:DI 91 [ _17 ])
                (plus:DI (reg/f:DI 88 [ _2 ])
                    (reg:DI 90 [ _16 ])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":147 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 90 [ _16 ])
        (expr_list:REG_DEAD (reg/f:DI 88 [ _2 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 51 50 52 5 (set (mem:HI (reg/f:DI 91 [ _17 ]) [0 MEM[(void *)_17]+0 S2 A8])
        (const_int 32 [0x20])) "test1.c":147 83 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ _17 ])
        (nil)))
;;  succ:       6 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 (FALLTHRU,DFS_BACK)
;;              4 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 89 110 111
(code_label 52 51 53 6 31 (nil) [1 uses])
(note 53 52 54 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 6 (parallel [
            (set (reg:DI 110)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1008 [0xfffffffffffffc10])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":143 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 55 54 56 6 (set (reg:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [7 fp+0 S8 A64])) "test1.c":143 81 {*movdi_internal}
     (nil))
(insn 56 55 57 6 (set (reg:DI 1 dx)
        (reg:DI 110)) "test1.c":143 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 110)
        (nil)))
(insn 57 56 58 6 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7fa517adcf30 *.LC4>)) "test1.c":143 81 {*movdi_internal}
     (nil))
(insn 58 57 59 6 (set (reg:DI 5 di)
        (reg:DI 111)) "test1.c":143 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 111)
        (nil)))
(insn 59 58 60 6 (set (reg:QI 0 ax)
        (const_int 0 [0])) "test1.c":143 84 {*movqi_internal}
     (nil))
(call_insn 60 59 61 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_fscanf") [flags 0x41]  <function_decl 0x7fa517cff900 fscanf>) [0 __builtin_fscanf S1 A8])
            (const_int 0 [0]))) "test1.c":143 676 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 61 60 63 6 (set (reg:SI 89 [ _3 ])
        (reg:SI 0 ax)) "test1.c":143 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 63 61 64 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ _3 ])
            (const_int 1 [0x1]))) "test1.c":143 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 89 [ _3 ])
        (nil)))
(jump_insn 64 63 65 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 62)
            (pc))) "test1.c":143 627 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 62)
;;  succ:       5
;;              7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 112
(note 65 64 66 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 7 (set (reg:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [7 fp+0 S8 A64])) "test1.c":149 81 {*movdi_internal}
     (nil))
(insn 67 66 68 7 (set (reg:DI 5 di)
        (reg:DI 112)) "test1.c":149 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 112)
        (nil)))
(call_insn 68 67 71 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7fa517dd2700 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) "test1.c":149 676 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 1, flags: (RTL)
;;  pred:       7 (FALLTHRU)
;;              3 [100.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 71 68 72 8 28 (nil) [1 uses])
(note 72 71 0 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function mapperFunc (mapperFunc, funcdef_no=11, decl_uid=3278, cgraph_uid=11, symbol_order=14)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 9 n_edges 10 count 9 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6 5 4 3
;; 2 succs { 7 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 3 8 }
;; 8 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 13.
verify found no changes in insn with uid = 23.
verify found no changes in insn with uid = 33.
verify found no changes in insn with uid = 42.
verify found no changes in insn with uid = 51.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r103: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r103,l0) best AREG, allocno GENERAL_REGS
    r102: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r102,l0) best DIREG, allocno GENERAL_REGS
    r101: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r101,l0) best SIREG, allocno GENERAL_REGS
    r100: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r100,l0) best DIREG, allocno GENERAL_REGS
    r99: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r99,l0) best DREG, allocno GENERAL_REGS
    r98: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r98,l0) best DIREG, allocno GENERAL_REGS
    r97: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r97,l0) best SIREG, allocno GENERAL_REGS
    r96: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r96,l0) best AREG, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r87,l0) best DIREG, allocno GENERAL_REGS

  a0(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a1(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:34 INT_SSE_REGS:26 ALL_REGS:516 MEM:9
  a2(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a3(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a4(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a5(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a6(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a7(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a8(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a9(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a10(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a11(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a12(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a13(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a14(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a15(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a16(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 62(l0): point = 0
   Insn 26(l0): point = 3
   Insn 25(l0): point = 5
   Insn 24(l0): point = 7
   Insn 23(l0): point = 9
   Insn 22(l0): point = 11
   Insn 21(l0): point = 13
   Insn 20(l0): point = 15
   Insn 19(l0): point = 17
   Insn 58(l0): point = 20
   Insn 57(l0): point = 22
   Insn 53(l0): point = 25
   Insn 52(l0): point = 27
   Insn 51(l0): point = 29
   Insn 50(l0): point = 31
   Insn 49(l0): point = 33
   Insn 46(l0): point = 36
   Insn 45(l0): point = 38
   Insn 44(l0): point = 40
   Insn 43(l0): point = 42
   Insn 42(l0): point = 44
   Insn 41(l0): point = 46
   Insn 40(l0): point = 48
   Insn 39(l0): point = 50
   Insn 38(l0): point = 52
   Insn 65(l0): point = 55
   Insn 33(l0): point = 57
   Insn 32(l0): point = 59
   Insn 31(l0): point = 61
   Insn 30(l0): point = 63
   Insn 29(l0): point = 65
   Insn 28(l0): point = 67
   Insn 63(l0): point = 70
   Insn 15(l0): point = 72
   Insn 14(l0): point = 74
   Insn 13(l0): point = 76
   Insn 12(l0): point = 78
   Insn 11(l0): point = 80
   Insn 10(l0): point = 82
   Insn 9(l0): point = 84
   Insn 8(l0): point = 86
   Insn 7(l0): point = 88
   Insn 6(l0): point = 90
   Insn 2(l0): point = 92
 a0(r103): [26..27]
 a1(r89): [37..42]
 a2(r91): [37..38]
 a3(r90): [39..40]
 a4(r102): [47..50]
 a5(r101): [49..52]
 a6(r100): [60..65]
 a7(r99): [64..67]
 a8(r88): [6..7]
 a9(r98): [12..15]
 a10(r97): [14..17]
 a11(r96): [73..74]
 a12(r87): [79..82]
 a13(r95): [83..84]
 a14(r94): [83..86]
 a15(r92): [87..88]
 a16(r93): [89..90]
Compressing live ranges: from 95 to 24 - 25%
Ranges after the compression:
 a0(r103): [4..5]
 a1(r89): [6..9]
 a2(r91): [6..7]
 a3(r90): [8..9]
 a4(r102): [10..11]
 a5(r101): [10..11]
 a6(r100): [12..13]
 a7(r99): [12..13]
 a8(r88): [0..1]
 a9(r98): [2..3]
 a10(r97): [2..3]
 a11(r96): [14..15]
 a12(r87): [16..17]
 a13(r95): [18..19]
 a14(r94): [18..19]
 a15(r92): [20..21]
 a16(r93): [22..23]
  regions=1, blocks=9, points=24
    allocnos=17 (big 0), copies=0, conflicts=0, ranges=17
Disposition:
   12:r87  l0     0    8:r88  l0     0    1:r89  l0     0    3:r90  l0     1
    2:r91  l0     1   15:r92  l0     0   16:r93  l0     0   14:r94  l0     1
   13:r95  l0     0   11:r96  l0     0   10:r97  l0     1    9:r98  l0     0
    7:r99  l0     1    6:r100 l0     0    5:r101 l0     1    4:r102 l0     0
    0:r103 l0     0
+++Costs: overall -11, reg -11, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


mapperFunc

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={6d,4u} r1={7d,1u} r2={6d} r4={11d,5u} r5={11d,6u} r6={1d,8u} r7={1d,13u} r8={5d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r16={1d,7u} r17={10d,2u} r18={5d} r19={5d} r20={1d,19u} r21={6d} r22={6d} r23={6d} r24={6d} r25={6d} r26={6d} r27={6d} r28={6d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={6d} r38={6d} r39={5d} r40={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r77={5d} r78={5d} r79={5d} r80={5d} r87={1d,1u} r88={1d,1u} r89={1d,2u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} 
;;    total ref usage 495{412d,83u,0e} in 44{39 regular + 5 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 92 93 94 95 96
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [1 index+0 S4 A32])
        (reg:SI 5 di [ index ])) "test1.c":155 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 di [ index ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:SI 93)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [1 index+0 S4 A32])) "test1.c":157 82 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:DI 92)
        (sign_extend:DI (reg:SI 93))) "test1.c":157 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 93)
        (nil)))
(insn 8 7 9 2 (parallel [
            (set (reg:DI 94)
                (mult:DI (reg:DI 92)
                    (const_int 5000000 [0x4c4b40])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":157 339 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 92)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 9 8 10 2 (set (reg:DI 95)
        (symbol_ref:DI ("text") [flags 0x2]  <var_decl 0x7fa517daaea0 text>)) "test1.c":157 81 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (parallel [
            (set (reg/f:DI 87 [ _1 ])
                (plus:DI (reg:DI 94)
                    (reg:DI 95)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":157 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 95)
        (expr_list:REG_DEAD (reg:DI 94)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 11 10 12 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7fa517aea630 *.LC5>)) "test1.c":157 81 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ _1 ])) "test1.c":157 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _1 ])
        (nil)))
(call_insn 13 12 14 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7fa517dee000 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) "test1.c":157 676 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 14 13 15 2 (set (reg:DI 96)
        (reg:DI 0 ax)) "test1.c":157 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 15 14 63 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [3 nextWord+0 S8 A64])
        (reg:DI 96)) "test1.c":157 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 96)
        (nil)))
(jump_insn 63 15 64 2 (set (pc)
        (label_ref 54)) "test1.c":158 659 {jump}
     (nil)
 -> 54)
;;  succ:       7 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 64 63 56)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       7
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 97 98
(code_label 56 64 18 3 37 (nil) [1 uses])
(note 18 56 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 3 (set (reg:SI 97)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [1 index+0 S4 A32])) "test1.c":162 82 {*movsi_internal}
     (nil))
(insn 20 19 21 3 (set (reg:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [3 nextWord+0 S8 A64])) "test1.c":162 81 {*movdi_internal}
     (nil))
(insn 21 20 22 3 (set (reg:SI 4 si)
        (reg:SI 97)) "test1.c":162 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 97)
        (nil)))
(insn 22 21 23 3 (set (reg:DI 5 di)
        (reg:DI 98)) "test1.c":162 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 98)
        (nil)))
(call_insn 23 22 24 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("hashTableLookupFunc") [flags 0x3]  <function_decl 0x7fa517a72e00 hashTableLookupFunc>) [0 hashTableLookupFunc S1 A8])
            (const_int 0 [0]))) "test1.c":162 676 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 24 23 25 3 (set (reg/f:DI 88 [ _2 ])
        (reg:DI 0 ax)) "test1.c":162 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 25 24 26 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 88 [ _2 ])
            (const_int 0 [0]))) "test1.c":162 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 88 [ _2 ])
        (nil)))
(jump_insn 26 25 27 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) "test1.c":162 627 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 36)
;;  succ:       4 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 99 100
(note 27 26 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 4 (set (reg:SI 99)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [1 index+0 S4 A32])) "test1.c":164 82 {*movsi_internal}
     (nil))
(insn 29 28 30 4 (set (reg:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [3 nextWord+0 S8 A64])) "test1.c":164 81 {*movdi_internal}
     (nil))
(insn 30 29 31 4 (set (reg:SI 1 dx)
        (reg:SI 99)) "test1.c":164 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 99)
        (nil)))
(insn 31 30 32 4 (set (reg:SI 4 si)
        (const_int 1 [0x1])) "test1.c":164 82 {*movsi_internal}
     (nil))
(insn 32 31 33 4 (set (reg:DI 5 di)
        (reg:DI 100)) "test1.c":164 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 100)
        (nil)))
(call_insn 33 32 65 4 (call (mem:QI (symbol_ref:DI ("hashTableInsertFunc") [flags 0x3]  <function_decl 0x7fa517a72c00 hashTableInsertFunc>) [0 hashTableInsertFunc S1 A8])
        (const_int 0 [0])) "test1.c":164 665 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(jump_insn 65 33 66 4 (set (pc)
        (label_ref 47)) 659 {jump}
     (nil)
 -> 47)
;;  succ:       6 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 66 65 36)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 89 90 91 101 102
(code_label 36 66 37 5 35 (nil) [1 uses])
(note 37 36 38 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 5 (set (reg:SI 101)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [1 index+0 S4 A32])) "test1.c":168 82 {*movsi_internal}
     (nil))
(insn 39 38 40 5 (set (reg:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [3 nextWord+0 S8 A64])) "test1.c":168 81 {*movdi_internal}
     (nil))
(insn 40 39 41 5 (set (reg:SI 4 si)
        (reg:SI 101)) "test1.c":168 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 101)
        (nil)))
(insn 41 40 42 5 (set (reg:DI 5 di)
        (reg:DI 102)) "test1.c":168 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 102)
        (nil)))
(call_insn 42 41 43 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("hashTableLookupFunc") [flags 0x3]  <function_decl 0x7fa517a72e00 hashTableLookupFunc>) [0 hashTableLookupFunc S1 A8])
            (const_int 0 [0]))) "test1.c":168 676 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 43 42 44 5 (set (reg/f:DI 89 [ _3 ])
        (reg:DI 0 ax)) "test1.c":168 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 44 43 45 5 (set (reg:SI 90 [ _4 ])
        (mem:SI (plus:DI (reg/f:DI 89 [ _3 ])
                (const_int 8 [0x8])) [1 _3->Value+0 S4 A64])) "test1.c":168 82 {*movsi_internal}
     (nil))
(insn 45 44 46 5 (parallel [
            (set (reg:SI 91 [ _5 ])
                (plus:SI (reg:SI 90 [ _4 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":168 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 90 [ _4 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 46 45 47 5 (set (mem:SI (plus:DI (reg/f:DI 89 [ _3 ])
                (const_int 8 [0x8])) [1 _3->Value+0 S4 A64])
        (reg:SI 91 [ _5 ])) "test1.c":168 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 91 [ _5 ])
        (expr_list:REG_DEAD (reg/f:DI 89 [ _3 ])
            (nil))))
;;  succ:       6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 (FALLTHRU)
;;              4 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 103
(code_label 47 46 48 6 36 (nil) [1 uses])
(note 48 47 49 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 6 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7fa517aea630 *.LC5>)) "test1.c":170 81 {*movdi_internal}
     (nil))
(insn 50 49 51 6 (set (reg:DI 5 di)
        (const_int 0 [0])) "test1.c":170 81 {*movdi_internal}
     (nil))
(call_insn 51 50 52 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7fa517dee000 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) "test1.c":170 676 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 52 51 53 6 (set (reg:DI 103)
        (reg:DI 0 ax)) "test1.c":170 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 53 52 54 6 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [3 nextWord+0 S8 A64])
        (reg:DI 103)) "test1.c":170 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 103)
        (nil)))
;;  succ:       7 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 54 53 55 7 34 (nil) [1 uses])
(note 55 54 57 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 57 55 58 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [3 nextWord+0 S8 A64])
            (const_int 0 [0]))) "test1.c":158 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 58 57 59 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) "test1.c":158 627 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 56)
;;  succ:       3
;;              8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 1, flags: (RTL)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 59 58 62 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 62 59 0 8 (const_int 0 [0]) "test1.c":173 694 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function reducerFunc (reducerFunc, funcdef_no=12, decl_uid=3285, cgraph_uid=12, symbol_order=15)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 16 n_edges 20 count 16 (    1)
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
;;
;; Loop 1
;;  header 14, latch 13
;;  depth 1, outer 0
;;  nodes: 14 13 12 11 3 4 10 9 5 8 7 6
;;
;; Loop 2
;;  header 12, latch 11
;;  depth 2, outer 1
;;  nodes: 12 11 4 10 9 5 8 7 6
;;
;; Loop 3
;;  header 10, latch 9
;;  depth 3, outer 2
;;  nodes: 10 9 8 7 6
;; 2 succs { 14 }
;; 3 succs { 12 }
;; 4 succs { 5 11 }
;; 5 succs { 10 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 6 11 }
;; 11 succs { 12 }
;; 12 succs { 4 13 }
;; 13 succs { 14 }
;; 14 succs { 3 15 }
;; 15 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 43.
verify found no changes in insn with uid = 55.
verify found no changes in insn with uid = 67.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r95,l0) best AREG, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r92,l0) best DIREG, allocno GENERAL_REGS
    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r91,l0) best DIREG, allocno GENERAL_REGS
    r90: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r90,l0) best SIREG, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a15 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a16 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a1(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a2(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a3(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:34 INT_SSE_REGS:26 ALL_REGS:516 MEM:9
  a4(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a5(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a6(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a7(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a8(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a9(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a10(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a11(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a12(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a13(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a14(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a15(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a16(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a17(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a18(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a19(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:24 INT_SSE_REGS:20 ALL_REGS:312 MEM:8
  a20(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:416 MEM:7
  a21(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a22(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a23(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a24(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a25(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a26(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a27(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a28(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:24 INT_SSE_REGS:20 ALL_REGS:312 MEM:8
  a29(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:416 MEM:7
  a30(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a31(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a32(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a33(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a34(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a35(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 102(l0): point = 0
   Insn 105(l0): point = 3
   Insn 10(l0): point = 5
   Insn 98(l0): point = 8
   Insn 97(l0): point = 10
   Insn 96(l0): point = 12
   Insn 92(l0): point = 15
   Insn 90(l0): point = 18
   Insn 89(l0): point = 20
   Insn 85(l0): point = 23
   Insn 24(l0): point = 26
   Insn 23(l0): point = 28
   Insn 22(l0): point = 30
   Insn 21(l0): point = 32
   Insn 20(l0): point = 34
   Insn 19(l0): point = 36
   Insn 18(l0): point = 38
   Insn 17(l0): point = 40
   Insn 16(l0): point = 42
   Insn 15(l0): point = 44
   Insn 14(l0): point = 46
   Insn 82(l0): point = 49
   Insn 81(l0): point = 51
   Insn 77(l0): point = 54
   Insn 76(l0): point = 56
   Insn 75(l0): point = 58
   Insn 72(l0): point = 61
   Insn 71(l0): point = 63
   Insn 70(l0): point = 65
   Insn 69(l0): point = 67
   Insn 68(l0): point = 69
   Insn 67(l0): point = 71
   Insn 66(l0): point = 73
   Insn 65(l0): point = 75
   Insn 64(l0): point = 77
   Insn 63(l0): point = 79
   Insn 62(l0): point = 81
   Insn 61(l0): point = 83
   Insn 60(l0): point = 85
   Insn 109(l0): point = 88
   Insn 55(l0): point = 90
   Insn 54(l0): point = 92
   Insn 53(l0): point = 94
   Insn 52(l0): point = 96
   Insn 51(l0): point = 98
   Insn 50(l0): point = 100
   Insn 49(l0): point = 102
   Insn 48(l0): point = 104
   Insn 46(l0): point = 107
   Insn 45(l0): point = 109
   Insn 44(l0): point = 111
   Insn 43(l0): point = 113
   Insn 42(l0): point = 115
   Insn 41(l0): point = 117
   Insn 40(l0): point = 119
   Insn 39(l0): point = 121
   Insn 107(l0): point = 124
   Insn 35(l0): point = 126
   Insn 34(l0): point = 128
   Insn 33(l0): point = 130
   Insn 32(l0): point = 132
   Insn 31(l0): point = 134
   Insn 30(l0): point = 136
   Insn 29(l0): point = 138
   Insn 28(l0): point = 140
   Insn 27(l0): point = 142
   Insn 26(l0): point = 144
   Insn 103(l0): point = 147
   Insn 6(l0): point = 149
   Insn 2(l0): point = 151
 a0(r122): [11..12]
 a1(r121): [55..56]
 a2(r120): [57..58]
 a3(r95): [62..69]
 a4(r94): [62..63]
 a5(r119): [64..65]
 a6(r93): [64..67]
 a7(r92): [74..77]
 a8(r118): [78..79]
 a9(r117): [82..83]
 a10(r116): [84..85]
 a11(r91): [93..98]
 a12(r90): [95..102]
 a13(r115): [99..100]
 a14(r114): [103..104]
 a15(r89): [110..111]
 a16(r88): [116..119]
 a17(r113): [120..121]
 a18(r112): [127..128]
 a19(r111): [129..130]
 a20(r110): [129..132]
 a21(r109): [133..134]
 a22(r104): [135..142]
 a23(r108): [135..136]
 a24(r106): [137..138]
 a25(r107): [139..140]
 a26(r105): [143..144]
 a27(r87): [29..30]
 a28(r103): [31..32]
 a29(r102): [31..34]
 a30(r101): [35..36]
 a31(r96): [37..44]
 a32(r100): [37..38]
 a33(r98): [39..40]
 a34(r99): [41..42]
 a35(r97): [45..46]
Compressing live ranges: from 154 to 58 - 37%
Ranges after the compression:
 a0(r122): [0..1]
 a1(r121): [16..17]
 a2(r120): [18..19]
 a3(r95): [20..23]
 a4(r94): [20..21]
 a5(r119): [22..23]
 a6(r93): [22..23]
 a7(r92): [24..25]
 a8(r118): [26..27]
 a9(r117): [28..29]
 a10(r116): [30..31]
 a11(r91): [32..33]
 a12(r90): [32..35]
 a13(r115): [34..35]
 a14(r114): [36..37]
 a15(r89): [38..39]
 a16(r88): [40..41]
 a17(r113): [42..43]
 a18(r112): [44..45]
 a19(r111): [46..47]
 a20(r110): [46..47]
 a21(r109): [48..49]
 a22(r104): [50..55]
 a23(r108): [50..51]
 a24(r106): [52..53]
 a25(r107): [54..55]
 a26(r105): [56..57]
 a27(r87): [2..3]
 a28(r103): [4..5]
 a29(r102): [4..5]
 a30(r101): [6..7]
 a31(r96): [8..13]
 a32(r100): [8..9]
 a33(r98): [10..11]
 a34(r99): [12..13]
 a35(r97): [14..15]
  regions=1, blocks=16, points=58
    allocnos=36 (big 0), copies=0, conflicts=0, ranges=36
Disposition:
   27:r87  l0     0   16:r88  l0     0   15:r89  l0     0   12:r90  l0     2
   11:r91  l0     0    7:r92  l0     0    6:r93  l0     2    4:r94  l0     1
    3:r95  l0     0   31:r96  l0     0   35:r97  l0     0   33:r98  l0     1
   34:r99  l0     1   32:r100 l0     1   30:r101 l0     0   29:r102 l0     1
   28:r103 l0     0   22:r104 l0     0   26:r105 l0     0   24:r106 l0     1
   25:r107 l0     1   23:r108 l0     1   21:r109 l0     0   20:r110 l0     1
   19:r111 l0     0   18:r112 l0     0   17:r113 l0     0   14:r114 l0     0
   13:r115 l0     0   10:r116 l0     0    9:r117 l0     0    8:r118 l0     0
    5:r119 l0     1    2:r120 l0     0    1:r121 l0     0    0:r122 l0     0
+++Costs: overall -6, reg -6, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


reducerFunc

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={4d,2u} r1={5d,1u} r2={4d} r4={7d,3u} r5={7d,4u} r6={1d,15u} r7={1d,18u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,14u} r17={17d,5u} r18={3d} r19={3d} r20={1d,40u,1e} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u,1e} r94={1d,1u} r95={1d,2u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} 
;;    total ref usage 433{292d,139u,2e} in 70{67 regular + 3 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [1 reduceCount+0 S4 A32])
        (reg:SI 5 di [ reduceCount ])) "test1.c":176 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 di [ reduceCount ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 103 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 0 [0])) "test1.c":179 82 {*movsi_internal}
     (nil))
(jump_insn 103 6 104 2 (set (pc)
        (label_ref 93)) "test1.c":179 659 {jump}
     (nil)
 -> 93)
;;  succ:       14 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 104 103 95)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       14
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 95 104 9 3 47 (nil) [1 uses])
(note 9 95 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 105 3 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
        (const_int 0 [0])) "test1.c":181 82 {*movsi_internal}
     (nil))
(jump_insn 105 10 106 3 (set (pc)
        (label_ref 86)) "test1.c":181 659 {jump}
     (nil)
 -> 86)
;;  succ:       12 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 106 105 88)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       12
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 96 97 98 99 100 101 102 103
(code_label 88 106 13 4 46 (nil) [1 uses])
(note 13 88 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 4 (set (reg:SI 97)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "test1.c":184 82 {*movsi_internal}
     (nil))
(insn 15 14 16 4 (set (reg:DI 96)
        (sign_extend:DI (reg:SI 97))) "test1.c":184 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 97)
        (nil)))
(insn 16 15 17 4 (set (reg:SI 99)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "test1.c":184 82 {*movsi_internal}
     (nil))
(insn 17 16 18 4 (set (reg:DI 98)
        (sign_extend:DI (reg:SI 99))) "test1.c":184 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 99)
        (nil)))
(insn 18 17 19 4 (parallel [
            (set (reg:DI 100)
                (mult:DI (reg:DI 98)
                    (const_int 100000 [0x186a0])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":184 339 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 98)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 19 18 20 4 (parallel [
            (set (reg:DI 101)
                (plus:DI (reg:DI 100)
                    (reg:DI 96)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":184 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 100)
        (expr_list:REG_DEAD (reg:DI 96)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 20 19 21 4 (parallel [
            (set (reg:DI 102)
                (ashift:DI (reg:DI 101)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":184 522 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 101)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 21 20 22 4 (set (reg:DI 103)
        (symbol_ref:DI ("hashTable") [flags 0x2]  <var_decl 0x7fa517a76000 hashTable>)) "test1.c":184 81 {*movdi_internal}
     (nil))
(insn 22 21 23 4 (set (reg/f:DI 87 [ _1 ])
        (mem/f:DI (plus:DI (reg:DI 102)
                (reg:DI 103)) [2 hashTable S8 A64])) "test1.c":184 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 103)
        (expr_list:REG_DEAD (reg:DI 102)
            (nil))))
(insn 23 22 24 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 87 [ _1 ])
            (const_int 0 [0]))) "test1.c":184 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _1 ])
        (nil)))
(jump_insn 24 23 25 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 83)
            (pc))) "test1.c":184 627 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 83)
;;  succ:       5 (FALLTHRU)
;;              11
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 104 105 106 107 108 109 110 111 112
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 5 (set (reg:SI 105)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "test1.c":186 82 {*movsi_internal}
     (nil))
(insn 27 26 28 5 (set (reg:DI 104)
        (sign_extend:DI (reg:SI 105))) "test1.c":186 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 105)
        (nil)))
(insn 28 27 29 5 (set (reg:SI 107)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "test1.c":186 82 {*movsi_internal}
     (nil))
(insn 29 28 30 5 (set (reg:DI 106)
        (sign_extend:DI (reg:SI 107))) "test1.c":186 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 107)
        (nil)))
(insn 30 29 31 5 (parallel [
            (set (reg:DI 108)
                (mult:DI (reg:DI 106)
                    (const_int 100000 [0x186a0])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":186 339 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 106)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 31 30 32 5 (parallel [
            (set (reg:DI 109)
                (plus:DI (reg:DI 108)
                    (reg:DI 104)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":186 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 108)
        (expr_list:REG_DEAD (reg:DI 104)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 32 31 33 5 (parallel [
            (set (reg:DI 110)
                (ashift:DI (reg:DI 109)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":186 522 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 109)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 33 32 34 5 (set (reg:DI 111)
        (symbol_ref:DI ("hashTable") [flags 0x2]  <var_decl 0x7fa517a76000 hashTable>)) "test1.c":186 81 {*movdi_internal}
     (nil))
(insn 34 33 35 5 (set (reg/f:DI 112)
        (mem/f:DI (plus:DI (reg:DI 110)
                (reg:DI 111)) [2 hashTable S8 A64])) "test1.c":186 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 111)
        (expr_list:REG_DEAD (reg:DI 110)
            (nil))))
(insn 35 34 107 5 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 pHead+0 S8 A64])
        (reg/f:DI 112)) "test1.c":186 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 112)
        (nil)))
(jump_insn 107 35 108 5 (set (pc)
        (label_ref 78)) "test1.c":187 659 {jump}
     (nil)
 -> 78)
;;  succ:       10 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 108 107 80)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       10
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 89 113
(code_label 80 108 38 6 45 (nil) [1 uses])
(note 38 80 39 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 6 (set (reg/f:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 pHead+0 S8 A64])) "test1.c":189 81 {*movdi_internal}
     (nil))
(insn 40 39 41 6 (set (reg/f:DI 88 [ _2 ])
        (mem/f:DI (reg/f:DI 113) [3 pHead_11->Key+0 S8 A64])) "test1.c":189 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 113)
        (nil)))
(insn 41 40 42 6 (set (reg:SI 4 si)
        (const_int 100 [0x64])) "test1.c":189 82 {*movsi_internal}
     (nil))
(insn 42 41 43 6 (set (reg:DI 5 di)
        (reg/f:DI 88 [ _2 ])) "test1.c":189 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ _2 ])
        (nil)))
(call_insn 43 42 44 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("hashTableLookupFunc") [flags 0x3]  <function_decl 0x7fa517a72e00 hashTableLookupFunc>) [0 hashTableLookupFunc S1 A8])
            (const_int 0 [0]))) "test1.c":189 676 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 44 43 45 6 (set (reg/f:DI 89 [ _3 ])
        (reg:DI 0 ax)) "test1.c":189 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 45 44 46 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 89 [ _3 ])
            (const_int 0 [0]))) "test1.c":189 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 89 [ _3 ])
        (nil)))
(jump_insn 46 45 47 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 58)
            (pc))) "test1.c":189 627 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 58)
;;  succ:       7 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 90 91 114 115
(note 47 46 48 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 7 (set (reg/f:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 pHead+0 S8 A64])) "test1.c":190 81 {*movdi_internal}
     (nil))
(insn 49 48 50 7 (set (reg:SI 90 [ _4 ])
        (mem:SI (plus:DI (reg/f:DI 114)
                (const_int 8 [0x8])) [1 pHead_11->Value+0 S4 A64])) "test1.c":190 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 114)
        (nil)))
(insn 50 49 51 7 (set (reg/f:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 pHead+0 S8 A64])) "test1.c":190 81 {*movdi_internal}
     (nil))
(insn 51 50 52 7 (set (reg/f:DI 91 [ _5 ])
        (mem/f:DI (reg/f:DI 115) [3 pHead_11->Key+0 S8 A64])) "test1.c":190 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 115)
        (nil)))
(insn 52 51 53 7 (set (reg:SI 1 dx)
        (const_int 100 [0x64])) "test1.c":190 82 {*movsi_internal}
     (nil))
(insn 53 52 54 7 (set (reg:SI 4 si)
        (reg:SI 90 [ _4 ])) "test1.c":190 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 90 [ _4 ])
        (nil)))
(insn 54 53 55 7 (set (reg:DI 5 di)
        (reg/f:DI 91 [ _5 ])) "test1.c":190 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ _5 ])
        (nil)))
(call_insn 55 54 109 7 (call (mem:QI (symbol_ref:DI ("hashTableInsertFunc") [flags 0x3]  <function_decl 0x7fa517a72c00 hashTableInsertFunc>) [0 hashTableInsertFunc S1 A8])
        (const_int 0 [0])) "test1.c":190 665 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(jump_insn 109 55 110 7 (set (pc)
        (label_ref 73)) 659 {jump}
     (nil)
 -> 73)
;;  succ:       9 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 110 109 58)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       6
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 92 93 94 95 116 117 118 119
(code_label 58 110 59 8 43 (nil) [1 uses])
(note 59 58 60 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 8 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 pHead+0 S8 A64])) "test1.c":193 81 {*movdi_internal}
     (nil))
(insn 61 60 62 8 (set (reg:SI 117)
        (mem:SI (plus:DI (reg/f:DI 116)
                (const_int 8 [0x8])) [1 pHead_11->Value+0 S4 A64])) "test1.c":193 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 116)
        (nil)))
(insn 62 61 63 8 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [1 val+0 S4 A32])
        (reg:SI 117)) "test1.c":193 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 117)
        (nil)))
(insn 63 62 64 8 (set (reg/f:DI 118)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 pHead+0 S8 A64])) "test1.c":194 81 {*movdi_internal}
     (nil))
(insn 64 63 65 8 (set (reg/f:DI 92 [ _6 ])
        (mem/f:DI (reg/f:DI 118) [3 pHead_11->Key+0 S8 A64])) "test1.c":194 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 118)
        (nil)))
(insn 65 64 66 8 (set (reg:SI 4 si)
        (const_int 100 [0x64])) "test1.c":194 82 {*movsi_internal}
     (nil))
(insn 66 65 67 8 (set (reg:DI 5 di)
        (reg/f:DI 92 [ _6 ])) "test1.c":194 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92 [ _6 ])
        (nil)))
(call_insn 67 66 68 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("hashTableLookupFunc") [flags 0x3]  <function_decl 0x7fa517a72e00 hashTableLookupFunc>) [0 hashTableLookupFunc S1 A8])
            (const_int 0 [0]))) "test1.c":194 676 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 68 67 69 8 (set (reg/f:DI 95 [ _26 ])
        (reg:DI 0 ax)) "test1.c":194 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 69 68 70 8 (set (reg:SI 93 [ _7 ])
        (mem:SI (plus:DI (reg/f:DI 95 [ _26 ])
                (const_int 8 [0x8])) [1 _26->Value+0 S4 A64])) "test1.c":194 82 {*movsi_internal}
     (nil))
(insn 70 69 71 8 (set (reg:SI 119)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [1 val+0 S4 A32])) "test1.c":194 82 {*movsi_internal}
     (nil))
(insn 71 70 72 8 (parallel [
            (set (reg:SI 94 [ _8 ])
                (plus:SI (reg:SI 93 [ _7 ])
                    (reg:SI 119)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":194 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 119)
        (expr_list:REG_DEAD (reg:SI 93 [ _7 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (reg:SI 93 [ _7 ])
                        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                                (const_int -20 [0xffffffffffffffec])) [1 val+0 S4 A32]))
                    (nil))))))
(insn 72 71 73 8 (set (mem:SI (plus:DI (reg/f:DI 95 [ _26 ])
                (const_int 8 [0x8])) [1 _26->Value+0 S4 A64])
        (reg:SI 94 [ _8 ])) "test1.c":194 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95 [ _26 ])
        (expr_list:REG_DEAD (reg:SI 94 [ _8 ])
            (nil))))
;;  succ:       9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       8 (FALLTHRU)
;;              7 [100.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 120 121
(code_label 73 72 74 9 44 (nil) [1 uses])
(note 74 73 75 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 9 (set (reg/f:DI 120)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 pHead+0 S8 A64])) "test1.c":196 81 {*movdi_internal}
     (nil))
(insn 76 75 77 9 (set (reg/f:DI 121)
        (mem/f:DI (plus:DI (reg/f:DI 120)
                (const_int 16 [0x10])) [2 pHead_11->pNext+0 S8 A64])) "test1.c":196 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 120)
        (nil)))
(insn 77 76 78 9 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 pHead+0 S8 A64])
        (reg/f:DI 121)) "test1.c":196 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 121)
        (nil)))
;;  succ:       10 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       9 (FALLTHRU,DFS_BACK)
;;              5 [100.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 78 77 79 10 42 (nil) [1 uses])
(note 79 78 81 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 81 79 82 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [2 pHead+0 S8 A64])
            (const_int 0 [0]))) "test1.c":187 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 82 81 83 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 80)
            (pc))) "test1.c":187 627 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 80)
;;  succ:       6
;;              11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       4
;;              10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 83 82 84 11 41 (nil) [1 uses])
(note 84 83 85 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 86 11 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":181 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       12 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       11 (FALLTHRU,DFS_BACK)
;;              3 [100.0%] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 86 85 87 12 40 (nil) [1 uses])
(note 87 86 89 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 89 87 90 12 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 99999 [0x1869f]))) "test1.c":181 7 {*cmpsi_1}
     (nil))
(jump_insn 90 89 91 12 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 88)
            (pc))) "test1.c":181 627 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 88)
;;  succ:       4
;;              13 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (RTL)
;;  pred:       12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 91 90 92 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 93 13 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":179 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       14 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (RTL)
;;  pred:       13 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 122
(code_label 93 92 94 14 39 (nil) [1 uses])
(note 94 93 96 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 96 94 97 14 (set (reg:SI 122)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "test1.c":179 82 {*movsi_internal}
     (nil))
(insn 97 96 98 14 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 122)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -36 [0xffffffffffffffdc])) [1 reduceCount+0 S4 A32]))) "test1.c":179 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 122)
        (nil)))
(jump_insn 98 97 99 14 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 95)
            (pc))) "test1.c":179 627 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 95)
;;  succ:       3
;;              15 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 1, flags: (RTL)
;;  pred:       14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 99 98 102 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 102 99 0 15 (const_int 0 [0]) "test1.c":201 694 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function writerFunc (writerFunc, funcdef_no=13, decl_uid=3301, cgraph_uid=13, symbol_order=16)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 10 n_edges 12 count 10 (    1)
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;;
;; Loop 1
;;  header 8, latch 7
;;  depth 1, outer 0
;;  nodes: 8 7 3 6 5 4
;;
;; Loop 2
;;  header 6, latch 5
;;  depth 2, outer 1
;;  nodes: 6 5
;; 2 succs { 8 }
;; 3 succs { 4 7 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 5 7 }
;; 7 succs { 8 }
;; 8 succs { 3 9 }
;; 9 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 11.
verify found no changes in insn with uid = 45.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r104,l0) best DIREG, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a19 (r90,l0) best CREG, allocno GENERAL_REGS
    r89: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r89,l0) best DREG, allocno GENERAL_REGS
    r88: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r88,l0) best CREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a1(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a2(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a4(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a5(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a6(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a7(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a8(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:24 INT_SSE_REGS:20 ALL_REGS:312 MEM:8
  a9(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:416 MEM:7
  a10(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a11(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a12(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a13(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a14(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:24 INT_SSE_REGS:20 ALL_REGS:312 MEM:8
  a15(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:416 MEM:7
  a16(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a17(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a18(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a19(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 65(l0): point = 0
   Insn 23(l0): point = 3
   Insn 22(l0): point = 5
   Insn 21(l0): point = 7
   Insn 20(l0): point = 9
   Insn 19(l0): point = 11
   Insn 18(l0): point = 13
   Insn 17(l0): point = 15
   Insn 16(l0): point = 17
   Insn 61(l0): point = 20
   Insn 60(l0): point = 22
   Insn 56(l0): point = 25
   Insn 53(l0): point = 28
   Insn 52(l0): point = 30
   Insn 48(l0): point = 33
   Insn 47(l0): point = 35
   Insn 46(l0): point = 37
   Insn 45(l0): point = 39
   Insn 44(l0): point = 41
   Insn 43(l0): point = 43
   Insn 42(l0): point = 45
   Insn 41(l0): point = 47
   Insn 40(l0): point = 49
   Insn 39(l0): point = 51
   Insn 38(l0): point = 53
   Insn 37(l0): point = 55
   Insn 36(l0): point = 57
   Insn 35(l0): point = 59
   Insn 68(l0): point = 62
   Insn 31(l0): point = 64
   Insn 30(l0): point = 66
   Insn 29(l0): point = 68
   Insn 28(l0): point = 70
   Insn 27(l0): point = 72
   Insn 26(l0): point = 74
   Insn 25(l0): point = 76
   Insn 66(l0): point = 79
   Insn 12(l0): point = 81
   Insn 11(l0): point = 83
   Insn 10(l0): point = 85
   Insn 9(l0): point = 87
   Insn 8(l0): point = 89
   Insn 7(l0): point = 91
   Insn 6(l0): point = 93
   Insn 2(l0): point = 95
 a0(r106): [34..35]
 a1(r105): [36..37]
 a2(r104): [44..51]
 a3(r89): [48..53]
 a4(r88): [50..57]
 a5(r103): [54..55]
 a6(r102): [58..59]
 a7(r101): [65..66]
 a8(r100): [67..68]
 a9(r99): [67..70]
 a10(r98): [71..72]
 a11(r96): [73..74]
 a12(r97): [75..76]
 a13(r87): [6..7]
 a14(r95): [8..9]
 a15(r94): [8..11]
 a16(r93): [12..13]
 a17(r91): [14..15]
 a18(r92): [16..17]
 a19(r90): [92..93]
Compressing live ranges: from 98 to 32 - 32%
Ranges after the compression:
 a0(r106): [10..11]
 a1(r105): [12..13]
 a2(r104): [14..15]
 a3(r89): [14..15]
 a4(r88): [14..17]
 a5(r103): [16..17]
 a6(r102): [18..19]
 a7(r101): [20..21]
 a8(r100): [22..23]
 a9(r99): [22..23]
 a10(r98): [24..25]
 a11(r96): [26..27]
 a12(r97): [28..29]
 a13(r87): [0..1]
 a14(r95): [2..3]
 a15(r94): [2..3]
 a16(r93): [4..5]
 a17(r91): [6..7]
 a18(r92): [8..9]
 a19(r90): [30..31]
  regions=1, blocks=10, points=32
    allocnos=20 (big 0), copies=0, conflicts=0, ranges=20
Disposition:
   13:r87  l0     0    4:r88  l0     2    3:r89  l0     1   19:r90  l0     0
   17:r91  l0     0   18:r92  l0     0   16:r93  l0     0   15:r94  l0     1
   14:r95  l0     0   11:r96  l0     0   12:r97  l0     0   10:r98  l0     0
    9:r99  l0     1    8:r100 l0     0    7:r101 l0     0    6:r102 l0     0
    5:r103 l0     0    2:r104 l0     0    1:r105 l0     0    0:r106 l0     0
+++Costs: overall -4, reg -4, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


writerFunc

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={4d,1u} r1={5d,2u} r2={5d,2u} r4={5d,2u} r5={5d,3u} r6={1d,9u} r7={1d,11u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,8u} r17={10d,3u} r18={2d} r19={2d} r20={1d,24u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} 
;;    total ref usage 285{200d,85u,0e} in 45{43 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 90
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [7 fp+0 S8 A64])
        (reg:DI 5 di [ fp ])) "test1.c":205 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ fp ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [7 fp+0 S8 A64])) "test1.c":208 81 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:DI 2 cx)
        (reg:DI 90)) "test1.c":208 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90)
        (nil)))
(insn 8 7 9 2 (set (reg:DI 1 dx)
        (const_int 30 [0x1e])) "test1.c":208 81 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 4 si)
        (const_int 1 [0x1])) "test1.c":208 81 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7fa517af7bd0 *.LC6>)) "test1.c":208 81 {*movdi_internal}
     (nil))
(call_insn 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fwrite") [flags 0x41]  <function_decl 0x7fa517cffa00 __builtin_fwrite>) [0 __builtin_fwrite S1 A8])
            (const_int 0 [0]))) "test1.c":208 676 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_UNUSED (reg:DI 0 ax)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 12 11 66 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 0 [0])) "test1.c":211 82 {*movsi_internal}
     (nil))
(jump_insn 66 12 67 2 (set (pc)
        (label_ref 57)) "test1.c":211 659 {jump}
     (nil)
 -> 57)
;;  succ:       8 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 67 66 59)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       8
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 91 92 93 94 95
(code_label 59 67 15 3 53 (nil) [1 uses])
(note 15 59 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 3 (set (reg:SI 92)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "test1.c":213 82 {*movsi_internal}
     (nil))
(insn 17 16 18 3 (set (reg:DI 91)
        (sign_extend:DI (reg:SI 92))) "test1.c":213 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 92)
        (nil)))
(insn 18 17 19 3 (parallel [
            (set (reg:DI 93)
                (plus:DI (reg:DI 91)
                    (const_int 10000000 [0x989680])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":213 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 91)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 19 18 20 3 (parallel [
            (set (reg:DI 94)
                (ashift:DI (reg:DI 93)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":213 522 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 93)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 20 19 21 3 (set (reg:DI 95)
        (symbol_ref:DI ("hashTable") [flags 0x2]  <var_decl 0x7fa517a76000 hashTable>)) "test1.c":213 81 {*movdi_internal}
     (nil))
(insn 21 20 22 3 (set (reg/f:DI 87 [ _1 ])
        (mem/f:DI (plus:DI (reg:DI 94)
                (reg:DI 95)) [2 hashTable S8 A64])) "test1.c":213 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 95)
        (expr_list:REG_DEAD (reg:DI 94)
            (nil))))
(insn 22 21 23 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 87 [ _1 ])
            (const_int 0 [0]))) "test1.c":213 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _1 ])
        (nil)))
(jump_insn 23 22 24 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 54)
            (pc))) "test1.c":213 627 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 54)
;;  succ:       4 (FALLTHRU)
;;              7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 96 97 98 99 100 101
(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 4 (set (reg:SI 97)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "test1.c":215 82 {*movsi_internal}
     (nil))
(insn 26 25 27 4 (set (reg:DI 96)
        (sign_extend:DI (reg:SI 97))) "test1.c":215 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 97)
        (nil)))
(insn 27 26 28 4 (parallel [
            (set (reg:DI 98)
                (plus:DI (reg:DI 96)
                    (const_int 10000000 [0x989680])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":215 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 96)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 28 27 29 4 (parallel [
            (set (reg:DI 99)
                (ashift:DI (reg:DI 98)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":215 522 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 98)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 29 28 30 4 (set (reg:DI 100)
        (symbol_ref:DI ("hashTable") [flags 0x2]  <var_decl 0x7fa517a76000 hashTable>)) "test1.c":215 81 {*movdi_internal}
     (nil))
(insn 30 29 31 4 (set (reg/f:DI 101)
        (mem/f:DI (plus:DI (reg:DI 99)
                (reg:DI 100)) [2 hashTable S8 A64])) "test1.c":215 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 100)
        (expr_list:REG_DEAD (reg:DI 99)
            (nil))))
(insn 31 30 68 4 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 p+0 S8 A64])
        (reg/f:DI 101)) "test1.c":215 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 101)
        (nil)))
(jump_insn 68 31 69 4 (set (pc)
        (label_ref 49)) "test1.c":216 659 {jump}
     (nil)
 -> 49)
;;  succ:       6 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 69 68 51)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       6
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 89 102 103 104 105 106
(code_label 51 69 34 5 52 (nil) [1 uses])
(note 34 51 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 5 (set (reg/f:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 p+0 S8 A64])) "test1.c":218 81 {*movdi_internal}
     (nil))
(insn 36 35 37 5 (set (reg:SI 88 [ _2 ])
        (mem:SI (plus:DI (reg/f:DI 102)
                (const_int 8 [0x8])) [1 p_5->Value+0 S4 A64])) "test1.c":218 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 102)
        (nil)))
(insn 37 36 38 5 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 p+0 S8 A64])) "test1.c":218 81 {*movdi_internal}
     (nil))
(insn 38 37 39 5 (set (reg/f:DI 89 [ _3 ])
        (mem/f:DI (reg/f:DI 103) [3 p_5->Key+0 S8 A64])) "test1.c":218 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 103)
        (nil)))
(insn 39 38 40 5 (set (reg:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [7 fp+0 S8 A64])) "test1.c":218 81 {*movdi_internal}
     (nil))
(insn 40 39 41 5 (set (reg:SI 2 cx)
        (reg:SI 88 [ _2 ])) "test1.c":218 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 88 [ _2 ])
        (nil)))
(insn 41 40 42 5 (set (reg:DI 1 dx)
        (reg/f:DI 89 [ _3 ])) "test1.c":218 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ _3 ])
        (nil)))
(insn 42 41 43 5 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fa517af7c60 *.LC7>)) "test1.c":218 81 {*movdi_internal}
     (nil))
(insn 43 42 44 5 (set (reg:DI 5 di)
        (reg:DI 104)) "test1.c":218 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 104)
        (nil)))
(insn 44 43 45 5 (set (reg:QI 0 ax)
        (const_int 0 [0])) "test1.c":218 84 {*movqi_internal}
     (nil))
(call_insn 45 44 46 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41]  <function_decl 0x7fa517cfe900 fprintf>) [0 __builtin_fprintf S1 A8])
            (const_int 0 [0]))) "test1.c":218 676 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_UNUSED (reg:SI 0 ax)
                        (nil))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (nil)))))))
(insn 46 45 47 5 (set (reg/f:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 p+0 S8 A64])) "test1.c":219 81 {*movdi_internal}
     (nil))
(insn 47 46 48 5 (set (reg/f:DI 106)
        (mem/f:DI (plus:DI (reg/f:DI 105)
                (const_int 16 [0x10])) [2 p_5->pNext+0 S8 A64])) "test1.c":219 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 105)
        (nil)))
(insn 48 47 49 5 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 p+0 S8 A64])
        (reg/f:DI 106)) "test1.c":219 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 106)
        (nil)))
;;  succ:       6 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 (FALLTHRU,DFS_BACK)
;;              4 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 49 48 50 6 51 (nil) [1 uses])
(note 50 49 52 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 52 50 53 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [2 p+0 S8 A64])
            (const_int 0 [0]))) "test1.c":216 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 53 52 54 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 51)
            (pc))) "test1.c":216 627 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 51)
;;  succ:       5
;;              7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       3
;;              6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 54 53 55 7 50 (nil) [1 uses])
(note 55 54 56 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":211 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       8 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       7 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 57 56 58 8 49 (nil) [1 uses])
(note 58 57 60 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 60 58 61 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
            (const_int 99999 [0x1869f]))) "test1.c":211 7 {*cmpsi_1}
     (nil))
(jump_insn 61 60 62 8 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) "test1.c":211 627 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 59)
;;  succ:       3
;;              9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 1, flags: (RTL)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 62 61 65 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 65 62 0 9 (const_int 0 [0]) "test1.c":224 694 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function main (main, funcdef_no=14, decl_uid=3311, cgraph_uid=14, symbol_order=17)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 30 n_edges 39 count 30 (    1)
;; 8 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29
;;
;; Loop 6
;;  header 27, latch 26
;;  depth 1, outer 0
;;  nodes: 27 26
;;
;; Loop 5
;;  header 24, latch 23
;;  depth 1, outer 0
;;  nodes: 24 23 22 21 17 18 19 20
;;
;; Loop 7
;;  header 22, latch 21
;;  depth 2, outer 5
;;  nodes: 22 21 18 19 20
;;
;; Loop 4
;;  header 15, latch 14
;;  depth 1, outer 0
;;  nodes: 15 14
;;
;; Loop 3
;;  header 12, latch 11
;;  depth 1, outer 0
;;  nodes: 12 11
;;
;; Loop 2
;;  header 9, latch 8
;;  depth 1, outer 0
;;  nodes: 9 8
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 7 }
;; 6 succs { 29 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 8 10 }
;; 10 succs { 12 }
;; 11 succs { 12 }
;; 12 succs { 11 13 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 14 16 }
;; 16 succs { 24 }
;; 17 succs { 22 }
;; 18 succs { 19 21 }
;; 19 succs { 20 21 }
;; 20 succs { 21 }
;; 21 succs { 22 }
;; 22 succs { 18 23 }
;; 23 succs { 24 }
;; 24 succs { 17 25 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 26 28 }
;; 28 succs { 29 }
;; 29 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 8.
verify found no changes in insn with uid = 12.
verify found no changes in insn with uid = 25.
verify found no changes in insn with uid = 41.
verify found no changes in insn with uid = 61.
verify found no changes in insn with uid = 67.
verify found no changes in insn with uid = 74.
verify found no changes in insn with uid = 76.
verify found no changes in insn with uid = 77.
verify found no changes in insn with uid = 95.
verify found no changes in insn with uid = 110.
verify found no changes in insn with uid = 121.
verify found no changes in insn with uid = 124.
verify found no changes in insn with uid = 129.
verify found no changes in insn with uid = 131.
verify found no changes in insn with uid = 168.
verify found no changes in insn with uid = 171.
verify found no changes in insn with uid = 190.
verify found no changes in insn with uid = 191.
verify found no changes in insn with uid = 200.
verify found no changes in insn with uid = 212.
verify found no changes in insn with uid = 222.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r155: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r155,l0) best DIREG, allocno GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r154,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r153,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a9 (r152,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r151: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a12 (r151,l0) best SSE_REGS, allocno SSE_REGS
    r150: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a10 (r150,l0) best SSE_REGS, allocno SSE_REGS
    r149: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r149,l0) best DIREG, allocno GENERAL_REGS
    r148: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r148,l0) best DIREG, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a35 (r129,l0) best DIREG, allocno GENERAL_REGS
    r128: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a36 (r128,l0) best AREG, allocno GENERAL_REGS
    r127: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a37 (r127,l0) best DIREG, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a39 (r125,l0) best DIREG, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a42 (r123,l0) best SIREG, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a50 (r120,l0) best SSE_REGS, allocno SSE_REGS
    r119: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a48 (r119,l0) best SSE_REGS, allocno SSE_REGS
    r118: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a52 (r118,l0) best DIREG, allocno GENERAL_REGS
    r117: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a53 (r117,l0) best DIREG, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a62 (r114,l0) best AREG, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a67 (r111,l0) best AREG, allocno GENERAL_REGS
    r110: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a68 (r110,l0) best AREG, allocno GENERAL_REGS
    r109: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r109,l0) best AREG, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r107,l0) best DIREG, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a11 (r103,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r102: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a15 (r102,l0) best DIREG, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a41 (r100,l0) best DIREG, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a49 (r96,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r95: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a51 (r95,l0) best AREG, allocno GENERAL_REGS
    r94: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a54 (r94,l0) best DREG, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:29 INT_SSE_REGS:25 ALL_REGS:408 MEM:5
  a2(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a4(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a5(r154,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a6(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a7(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a8(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a9(r152,l0) costs: AREG:6 DREG:6 CREG:6 BREG:6 SIREG:6 DIREG:6 AD_REGS:6 CLOBBERED_REGS:6 Q_REGS:6 NON_Q_REGS:6 TLS_GOTBASE_REGS:6 GENERAL_REGS:6 FP_TOP_REG:24 FP_SECOND_REG:24 FLOAT_REGS:24 SSE_FIRST_REG:21 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:26 FP_SECOND_SSE_REGS:26 FLOAT_SSE_REGS:26 FLOAT_INT_REGS:24 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:26 MEM:7
  a10(r150,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 MEM:14
  a11(r103,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 CLOBBERED_REGS:13 Q_REGS:13 NON_Q_REGS:13 TLS_GOTBASE_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a12(r151,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 CLOBBERED_REGS:15 Q_REGS:15 NON_Q_REGS:15 TLS_GOTBASE_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:13
  a13(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a14(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a15(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a16(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a17(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a18(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:24 INT_SSE_REGS:20 ALL_REGS:312 MEM:8
  a19(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:416 MEM:7
  a20(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a21(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a22(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a23(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a24(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a25(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a26(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a27(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:24 INT_SSE_REGS:20 ALL_REGS:312 MEM:8
  a28(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:416 MEM:7
  a29(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a30(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a31(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a32(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a33(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a34(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a35(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a36(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a37(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a38(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a39(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a40(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a41(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a42(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a43(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a44(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a45(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a46(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a47(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a48(r119,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 MEM:14
  a49(r96,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 CLOBBERED_REGS:13 Q_REGS:13 NON_Q_REGS:13 TLS_GOTBASE_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:9
  a50(r120,l0) costs: SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MEM:15
  a51(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a52(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a53(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a54(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a55(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a56(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a57(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a58(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a59(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a60(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a61(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a62(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a63(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a64(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a65(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a66(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a67(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a68(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5

   Insn 231(l0): point = 0
   Insn 230(l0): point = 2
   Insn 226(l0): point = 4
   Insn 223(l0): point = 7
   Insn 222(l0): point = 9
   Insn 221(l0): point = 11
   Insn 220(l0): point = 13
   Insn 213(l0): point = 16
   Insn 212(l0): point = 18
   Insn 211(l0): point = 20
   Insn 210(l0): point = 22
   Insn 209(l0): point = 24
   Insn 208(l0): point = 26
   Insn 207(l0): point = 28
   Insn 206(l0): point = 30
   Insn 205(l0): point = 32
   Insn 218(l0): point = 35
   Insn 217(l0): point = 37
   Insn 247(l0): point = 40
   Insn 201(l0): point = 42
   Insn 200(l0): point = 44
   Insn 199(l0): point = 46
   Insn 198(l0): point = 48
   Insn 197(l0): point = 50
   Insn 196(l0): point = 52
   Insn 195(l0): point = 54
   Insn 194(l0): point = 56
   Insn 193(l0): point = 58
   Insn 192(l0): point = 60
   Insn 191(l0): point = 62
   Insn 190(l0): point = 64
   Insn 189(l0): point = 66
   Insn 188(l0): point = 68
   Insn 245(l0): point = 71
   Insn 136(l0): point = 73
   Insn 186(l0): point = 76
   Insn 185(l0): point = 78
   Insn 181(l0): point = 81
   Insn 179(l0): point = 84
   Insn 178(l0): point = 86
   Insn 174(l0): point = 89
   Insn 150(l0): point = 92
   Insn 149(l0): point = 94
   Insn 148(l0): point = 96
   Insn 147(l0): point = 98
   Insn 146(l0): point = 100
   Insn 145(l0): point = 102
   Insn 144(l0): point = 104
   Insn 143(l0): point = 106
   Insn 142(l0): point = 108
   Insn 141(l0): point = 110
   Insn 140(l0): point = 112
   Insn 163(l0): point = 115
   Insn 162(l0): point = 117
   Insn 161(l0): point = 119
   Insn 160(l0): point = 121
   Insn 159(l0): point = 123
   Insn 158(l0): point = 125
   Insn 157(l0): point = 127
   Insn 156(l0): point = 129
   Insn 155(l0): point = 131
   Insn 154(l0): point = 133
   Insn 153(l0): point = 135
   Insn 152(l0): point = 137
   Insn 171(l0): point = 140
   Insn 170(l0): point = 142
   Insn 169(l0): point = 144
   Insn 168(l0): point = 146
   Insn 167(l0): point = 148
   Insn 166(l0): point = 150
   Insn 165(l0): point = 152
   Insn 243(l0): point = 155
   Insn 132(l0): point = 157
   Insn 131(l0): point = 159
   Insn 130(l0): point = 161
   Insn 129(l0): point = 163
   Insn 128(l0): point = 165
   Insn 127(l0): point = 167
   Insn 126(l0): point = 169
   Insn 125(l0): point = 171
   Insn 124(l0): point = 173
   Insn 123(l0): point = 175
   Insn 122(l0): point = 177
   Insn 121(l0): point = 179
   Insn 120(l0): point = 181
   Insn 119(l0): point = 183
   Insn 111(l0): point = 186
   Insn 110(l0): point = 188
   Insn 109(l0): point = 190
   Insn 108(l0): point = 192
   Insn 117(l0): point = 195
   Insn 116(l0): point = 197
   Insn 115(l0): point = 199
   Insn 241(l0): point = 202
   Insn 104(l0): point = 204
   Insn 96(l0): point = 207
   Insn 95(l0): point = 209
   Insn 94(l0): point = 211
   Insn 93(l0): point = 213
   Insn 92(l0): point = 215
   Insn 91(l0): point = 217
   Insn 90(l0): point = 219
   Insn 89(l0): point = 221
   Insn 88(l0): point = 223
   Insn 87(l0): point = 225
   Insn 86(l0): point = 227
   Insn 102(l0): point = 230
   Insn 101(l0): point = 232
   Insn 100(l0): point = 234
   Insn 239(l0): point = 237
   Insn 82(l0): point = 239
   Insn 81(l0): point = 241
   Insn 80(l0): point = 243
   Insn 79(l0): point = 245
   Insn 78(l0): point = 247
   Insn 77(l0): point = 249
   Insn 76(l0): point = 251
   Insn 75(l0): point = 253
   Insn 74(l0): point = 255
   Insn 73(l0): point = 257
   Insn 62(l0): point = 260
   Insn 61(l0): point = 262
   Insn 60(l0): point = 264
   Insn 59(l0): point = 266
   Insn 58(l0): point = 268
   Insn 57(l0): point = 270
   Insn 56(l0): point = 272
   Insn 55(l0): point = 274
   Insn 54(l0): point = 276
   Insn 53(l0): point = 278
   Insn 52(l0): point = 280
   Insn 51(l0): point = 282
   Insn 50(l0): point = 284
   Insn 71(l0): point = 287
   Insn 70(l0): point = 289
   Insn 68(l0): point = 291
   Insn 67(l0): point = 293
   Insn 66(l0): point = 295
   Insn 65(l0): point = 297
   Insn 237(l0): point = 300
   Insn 235(l0): point = 303
   Insn 42(l0): point = 305
   Insn 41(l0): point = 307
   Insn 40(l0): point = 309
   Insn 39(l0): point = 311
   Insn 37(l0): point = 314
   Insn 36(l0): point = 316
   Insn 29(l0): point = 319
   Insn 28(l0): point = 321
   Insn 27(l0): point = 323
   Insn 26(l0): point = 325
   Insn 25(l0): point = 327
   Insn 24(l0): point = 329
   Insn 23(l0): point = 331
   Insn 22(l0): point = 333
   Insn 21(l0): point = 335
   Insn 20(l0): point = 337
   Insn 19(l0): point = 339
   Insn 34(l0): point = 342
   Insn 33(l0): point = 344
   Insn 233(l0): point = 347
   Insn 15(l0): point = 349
   Insn 14(l0): point = 351
   Insn 13(l0): point = 353
   Insn 12(l0): point = 355
   Insn 11(l0): point = 357
   Insn 10(l0): point = 359
   Insn 9(l0): point = 361
   Insn 8(l0): point = 363
   Insn 7(l0): point = 365
   Insn 6(l0): point = 367
   Insn 5(l0): point = 369
 a0(r109): [3..4]
 a1(r108): [303..305] [5..7]
 a2(r155): [12..13]
 a3(r107): [21..22]
 a4(r106): [23..24]
 a5(r154): [25..26]
 a6(r105): [25..28]
 a7(r104): [29..30]
 a8(r153): [31..32]
 a9(r152): [51..52]
 a10(r150): [55..56]
 a11(r103): [57..60]
 a12(r151): [57..58]
 a13(r149): [67..68]
 a14(r148): [143..144]
 a15(r102): [149..150]
 a16(r147): [151..152]
 a17(r146): [120..121]
 a18(r145): [122..123]
 a19(r144): [122..125]
 a20(r143): [126..127]
 a21(r138): [128..135]
 a22(r142): [128..129]
 a23(r140): [130..131]
 a24(r141): [132..133]
 a25(r139): [136..137]
 a26(r101): [95..96]
 a27(r137): [97..98]
 a28(r136): [97..100]
 a29(r135): [101..102]
 a30(r130): [103..110]
 a31(r134): [103..104]
 a32(r132): [105..106]
 a33(r133): [107..108]
 a34(r131): [111..112]
 a35(r129): [166..167]
 a36(r128): [170..171]
 a37(r127): [182..183]
 a38(r126): [198..199]
 a39(r125): [191..192]
 a40(r124): [233..234]
 a41(r100): [212..217]
 a42(r123): [214..215]
 a43(r99): [218..219]
 a44(r122): [220..221]
 a45(r98): [220..223]
 a46(r97): [224..225]
 a47(r121): [226..227]
 a48(r119): [242..243]
 a49(r96): [244..247]
 a50(r120): [244..245]
 a51(r95): [290..291]
 a52(r118): [296..297]
 a53(r117): [267..272]
 a54(r94): [271..274]
 a55(r93): [275..276]
 a56(r116): [277..278]
 a57(r92): [277..280]
 a58(r91): [281..282]
 a59(r115): [283..284]
 a60(r89): [322..331]
 a61(r90): [322..323]
 a62(r114): [324..325]
 a63(r113): [332..333]
 a64(r88): [332..335]
 a65(r87): [336..337]
 a66(r112): [338..339]
 a67(r111): [352..353]
 a68(r110): [360..361]
Compressing live ranges: from 372 to 114 - 30%
Ranges after the compression:
 a0(r109): [0..1]
 a1(r108): [98..99] [2..3]
 a2(r155): [4..5]
 a3(r107): [6..7]
 a4(r106): [8..9]
 a5(r154): [10..11]
 a6(r105): [10..11]
 a7(r104): [12..13]
 a8(r153): [14..15]
 a9(r152): [16..17]
 a10(r150): [18..19]
 a11(r103): [20..21]
 a12(r151): [20..21]
 a13(r149): [22..23]
 a14(r148): [52..53]
 a15(r102): [54..55]
 a16(r147): [56..57]
 a17(r146): [38..39]
 a18(r145): [40..41]
 a19(r144): [40..41]
 a20(r143): [42..43]
 a21(r138): [44..49]
 a22(r142): [44..45]
 a23(r140): [46..47]
 a24(r141): [48..49]
 a25(r139): [50..51]
 a26(r101): [24..25]
 a27(r137): [26..27]
 a28(r136): [26..27]
 a29(r135): [28..29]
 a30(r130): [30..35]
 a31(r134): [30..31]
 a32(r132): [32..33]
 a33(r133): [34..35]
 a34(r131): [36..37]
 a35(r129): [58..59]
 a36(r128): [60..61]
 a37(r127): [62..63]
 a38(r126): [66..67]
 a39(r125): [64..65]
 a40(r124): [78..79]
 a41(r100): [68..69]
 a42(r123): [68..69]
 a43(r99): [70..71]
 a44(r122): [72..73]
 a45(r98): [72..73]
 a46(r97): [74..75]
 a47(r121): [76..77]
 a48(r119): [80..81]
 a49(r96): [82..83]
 a50(r120): [82..83]
 a51(r95): [94..95]
 a52(r118): [96..97]
 a53(r117): [84..85]
 a54(r94): [84..85]
 a55(r93): [86..87]
 a56(r116): [88..89]
 a57(r92): [88..89]
 a58(r91): [90..91]
 a59(r115): [92..93]
 a60(r89): [100..103]
 a61(r90): [100..101]
 a62(r114): [102..103]
 a63(r113): [104..105]
 a64(r88): [104..105]
 a65(r87): [106..107]
 a66(r112): [108..109]
 a67(r111): [110..111]
 a68(r110): [112..113]
  pref0:a9(r152)<-hr21@1
  regions=1, blocks=30, points=114
    allocnos=69 (big 0), copies=0, conflicts=0, ranges=70
Disposition:
   65:r87  l0     0   64:r88  l0     1   60:r89  l0     3   61:r90  l0     0
   58:r91  l0     0   57:r92  l0     1   55:r93  l0     0   54:r94  l0     1
   51:r95  l0     0   49:r96  l0    22   46:r97  l0     0   45:r98  l0     1
   43:r99  l0     0   41:r100 l0     0   26:r101 l0     0   15:r102 l0     0
   11:r103 l0    22    7:r104 l0     0    6:r105 l0     1    4:r106 l0     0
    3:r107 l0     0    1:r108 l0     0    0:r109 l0     0   68:r110 l0     0
   67:r111 l0     0   66:r112 l0     0   63:r113 l0     0   62:r114 l0     0
   59:r115 l0     0   56:r116 l0     0   53:r117 l0     0   52:r118 l0     0
   48:r119 l0    21   50:r120 l0    21   47:r121 l0     0   44:r122 l0     0
   42:r123 l0     1   40:r124 l0     0   39:r125 l0     0   38:r126 l0     0
   37:r127 l0     0   36:r128 l0     0   35:r129 l0     0   30:r130 l0     0
   34:r131 l0     0   32:r132 l0     1   33:r133 l0     1   31:r134 l0     1
   29:r135 l0     0   28:r136 l0     1   27:r137 l0     0   21:r138 l0     0
   25:r139 l0     0   23:r140 l0     1   24:r141 l0     1   22:r142 l0     1
   20:r143 l0     0   19:r144 l0     1   18:r145 l0     0   17:r146 l0     0
   16:r147 l0     0   14:r148 l0     0   13:r149 l0     0   10:r150 l0    21
   12:r151 l0    21    9:r152 l0     0    8:r153 l0     0    5:r154 l0     0
    2:r155 l0     0
+++Costs: overall -22, reg -22, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


main

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 21 [xmm0]
;;  ref usage 	r0={27d,10u} r1={24d,1u} r2={23d} r4={27d,4u} r5={43d,20u} r6={1d,29u} r7={1d,51u} r8={22d} r9={22d} r10={22d} r11={22d} r12={22d} r13={22d} r14={22d} r15={22d} r16={1d,28u} r17={54d,10u} r18={22d} r19={22d} r20={1d,90u,4e} r21={24d,3u} r22={23d} r23={23d} r24={23d} r25={23d} r26={23d} r27={23d} r28={23d} r29={22d} r30={22d} r31={22d} r32={22d} r33={22d} r34={22d} r35={22d} r36={22d} r37={23d} r38={23d} r39={22d} r40={22d} r45={22d} r46={22d} r47={22d} r48={22d} r49={22d} r50={22d} r51={22d} r52={22d} r53={22d} r54={22d} r55={22d} r56={22d} r57={22d} r58={22d} r59={22d} r60={22d} r61={22d} r62={22d} r63={22d} r64={22d} r65={22d} r66={22d} r67={22d} r68={22d} r69={22d} r70={22d} r71={22d} r72={22d} r73={22d} r74={22d} r75={22d} r76={22d} r77={22d} r78={22d} r79={22d} r80={22d} r87={1d,1u} r88={1d,1u,1e} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u,1e} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u,1e} r97={1d,1u} r98={1d,1u,1e} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u,1e} r106={1d,1u} r107={1d,1u} r108={2d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} 
;;    total ref usage 2059{1735d,315u,9e} in 172{150 regular + 22 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 110 111
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 file_num+0 S4 A32])
        (const_int 0 [0])) "test1.c":229 82 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fa517adce10 *.LC2>)) "test1.c":230 81 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7fa517afe6c0 *.LC8>)) "test1.c":230 81 {*movdi_internal}
     (nil))
(call_insn 8 7 9 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7fa517dd2a00 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) "test1.c":230 676 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 9 8 10 2 (set (reg:DI 110)
        (reg:DI 0 ax)) "test1.c":230 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 10 9 11 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [7 read_filename+0 S8 A64])
        (reg:DI 110)) "test1.c":230 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 110)
        (nil)))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (const_int 800 [0x320])) "test1.c":231 81 {*movdi_internal}
     (nil))
(call_insn 12 11 13 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7fa517d22300 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) "test1.c":231 676 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 13 12 14 2 (set (reg/f:DI 111)
        (reg:DI 0 ax)) "test1.c":231 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 111)
            (nil))))
(insn 14 13 15 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [8 filename_list_array+0 S8 A64])
        (reg/f:DI 111)) "test1.c":231 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 111)
        (nil)))
(insn 15 14 233 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])
        (const_int 0 [0])) "test1.c":236 82 {*movsi_internal}
     (nil))
(jump_insn 233 15 234 2 (set (pc)
        (label_ref 30)) "test1.c":236 659 {jump}
     (nil)
 -> 30)
;;  succ:       4 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 234 233 32)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       4
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 112 113 114
(code_label 32 234 18 3 56 (nil) [1 uses])
(note 18 32 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 3 (set (reg:SI 112)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])) "test1.c":238 82 {*movsi_internal}
     (nil))
(insn 20 19 21 3 (set (reg:DI 87 [ _1 ])
        (sign_extend:DI (reg:SI 112))) "test1.c":238 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 112)
        (nil)))
(insn 21 20 22 3 (parallel [
            (set (reg:DI 88 [ _2 ])
                (ashift:DI (reg:DI 87 [ _1 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":238 522 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 87 [ _1 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 22 21 23 3 (set (reg/f:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [8 filename_list_array+0 S8 A64])) "test1.c":238 81 {*movdi_internal}
     (nil))
(insn 23 22 24 3 (parallel [
            (set (reg/f:DI 89 [ _3 ])
                (plus:DI (reg:DI 88 [ _2 ])
                    (reg/f:DI 113)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":238 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 113)
        (expr_list:REG_DEAD (reg:DI 88 [ _2 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -32 [0xffffffffffffffe0])) [8 filename_list_array+0 S8 A64])
                        (reg:DI 88 [ _2 ]))
                    (nil))))))
(insn 24 23 25 3 (set (reg:DI 5 di)
        (const_int 50 [0x32])) "test1.c":238 81 {*movdi_internal}
     (nil))
(call_insn 25 24 26 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7fa517d22300 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) "test1.c":238 676 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 26 25 27 3 (set (reg/f:DI 114)
        (reg:DI 0 ax)) "test1.c":238 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 114)
            (nil))))
(insn 27 26 28 3 (set (reg/f:DI 90 [ _4 ])
        (reg/f:DI 114)) "test1.c":238 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 114)
        (nil)))
(insn 28 27 29 3 (set (mem/f:DI (reg/f:DI 89 [ _3 ]) [3 *_3+0 S8 A64])
        (reg/f:DI 90 [ _4 ])) "test1.c":238 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ _4 ])
        (expr_list:REG_DEAD (reg/f:DI 89 [ _3 ])
            (nil))))
(insn 29 28 30 3 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":236 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       4 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 30 29 31 4 55 (nil) [1 uses])
(note 31 30 33 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 33 31 34 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])
            (const_int 99 [0x63]))) "test1.c":236 7 {*cmpsi_1}
     (nil))
(jump_insn 34 33 35 4 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 32)
            (pc))) "test1.c":236 627 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 32)
;;  succ:       3
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 35 34 36 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])) [7 read_filename+0 S8 A64])
            (const_int 0 [0]))) "test1.c":241 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 37 36 38 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 45)
            (pc))) "test1.c":241 627 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 45)
;;  succ:       6 (FALLTHRU)
;;              7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 108
(note 38 37 39 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 6 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7fa517afe750 *.LC9>)) "test1.c":243 81 {*movdi_internal}
     (nil))
(insn 40 39 41 6 (set (reg:QI 0 ax)
        (const_int 0 [0])) "test1.c":243 84 {*movqi_internal}
     (nil))
(call_insn 41 40 42 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fa517cfff00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "test1.c":243 676 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 42 41 235 6 (set (reg:SI 108 [ _29 ])
        (const_int 0 [0])) "test1.c":244 82 {*movsi_internal}
     (nil))
(jump_insn 235 42 236 6 (set (pc)
        (label_ref 224)) "test1.c":244 659 {jump}
     (nil)
 -> 224)
;;  succ:       29 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 108

(barrier 236 235 45)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       5
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 45 236 46 7 57 (nil) [1 uses])
(note 46 45 237 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(jump_insn 237 46 238 7 (set (pc)
        (label_ref 63)) "test1.c":246 659 {jump}
     (nil)
 -> 63)
;;  succ:       9 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 238 237 69)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       9
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 91 92 93 94 115 116 117
(code_label 69 238 49 8 60 (nil) [1 uses])
(note 49 69 50 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 8 (set (reg:SI 115)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 file_num+0 S4 A32])) "test1.c":248 82 {*movsi_internal}
     (nil))
(insn 51 50 52 8 (set (reg:DI 91 [ _5 ])
        (sign_extend:DI (reg:SI 115))) "test1.c":248 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 115)
        (nil)))
(insn 52 51 53 8 (parallel [
            (set (reg:DI 92 [ _6 ])
                (ashift:DI (reg:DI 91 [ _5 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":248 522 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 91 [ _5 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 53 52 54 8 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [8 filename_list_array+0 S8 A64])) "test1.c":248 81 {*movdi_internal}
     (nil))
(insn 54 53 55 8 (parallel [
            (set (reg/f:DI 93 [ _7 ])
                (plus:DI (reg:DI 92 [ _6 ])
                    (reg/f:DI 116)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":248 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 116)
        (expr_list:REG_DEAD (reg:DI 92 [ _6 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -32 [0xffffffffffffffe0])) [8 filename_list_array+0 S8 A64])
                        (reg:DI 92 [ _6 ]))
                    (nil))))))
(insn 55 54 56 8 (set (reg/f:DI 94 [ _8 ])
        (mem/f:DI (reg/f:DI 93 [ _7 ]) [3 *_7+0 S8 A64])) "test1.c":248 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93 [ _7 ])
        (nil)))
(insn 56 55 57 8 (set (reg:DI 117)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [7 read_filename+0 S8 A64])) "test1.c":248 81 {*movdi_internal}
     (nil))
(insn 57 56 58 8 (set (reg:DI 1 dx)
        (reg/f:DI 94 [ _8 ])) "test1.c":248 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94 [ _8 ])
        (nil)))
(insn 58 57 59 8 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7fa517afe7e0 *.LC10>)) "test1.c":248 81 {*movdi_internal}
     (nil))
(insn 59 58 60 8 (set (reg:DI 5 di)
        (reg:DI 117)) "test1.c":248 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 117)
        (nil)))
(insn 60 59 61 8 (set (reg:QI 0 ax)
        (const_int 0 [0])) "test1.c":248 84 {*movqi_internal}
     (nil))
(call_insn 61 60 62 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_fscanf") [flags 0x41]  <function_decl 0x7fa517cff900 fscanf>) [0 __builtin_fscanf S1 A8])
            (const_int 0 [0]))) "test1.c":248 676 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 62 61 63 8 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [1 file_num+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 file_num+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":249 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       9 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       8 (FALLTHRU,DFS_BACK)
;;              7 [100.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 95 118
(code_label 63 62 64 9 59 (nil) [1 uses])
(note 64 63 65 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 9 (set (reg:DI 118)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [7 read_filename+0 S8 A64])) "test1.c":246 81 {*movdi_internal}
     (nil))
(insn 66 65 67 9 (set (reg:DI 5 di)
        (reg:DI 118)) "test1.c":246 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 118)
        (nil)))
(call_insn 67 66 68 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("feof") [flags 0x41]  <function_decl 0x7fa517de9100 feof>) [0 feof S1 A8])
            (const_int 0 [0]))) "test1.c":246 676 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 68 67 70 9 (set (reg:SI 95 [ _9 ])
        (reg:SI 0 ax)) "test1.c":246 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 70 68 71 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 95 [ _9 ])
            (const_int 0 [0]))) "test1.c":246 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 95 [ _9 ])
        (nil)))
(jump_insn 71 70 72 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 69)
            (pc))) "test1.c":246 627 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 69)
;;  succ:       8
;;              10 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 96 119 120
(note 72 71 73 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 10 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7fa517afe870 *.LC11>)) "test1.c":251 81 {*movdi_internal}
     (nil))
(call_insn 74 73 75 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa517d00600 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "test1.c":251 676 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 75 74 76 10 (set (reg:SI 5 di)
        (const_int 8 [0x8])) "test1.c":253 82 {*movsi_internal}
     (nil))
(call_insn 76 75 77 10 (call (mem:QI (symbol_ref:DI ("omp_set_num_threads") [flags 0x41]  <function_decl 0x7fa517a68100 omp_set_num_threads>) [0 omp_set_num_threads S1 A8])
        (const_int 0 [0])) "test1.c":253 665 {*call}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(call_insn 77 76 78 10 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("omp_get_wtime") [flags 0x41]  <function_decl 0x7fa517a6c700 omp_get_wtime>) [0 omp_get_wtime S1 A8])
            (const_int 0 [0]))) "test1.c":254 676 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 78 77 79 10 (set (reg:DF 96 [ _10 ])
        (reg:DF 21 xmm0)) "test1.c":254 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 79 78 80 10 (set (reg:V2DF 120)
        (mem/u/c:V2DF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [9  S16 A128])) "test1.c":254 1238 {movv2df_internal}
     (expr_list:REG_EQUAL (const_vector:V2DF [
                (const_double:DF -0.0 [-0x0.0p+0])
                (const_double:DF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 80 79 81 10 (parallel [
            (set (reg:DF 119)
                (neg:DF (reg:DF 96 [ _10 ])))
            (use (reg:V2DF 120))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":254 481 {*absnegdf2}
     (expr_list:REG_DEAD (reg:V2DF 120)
        (expr_list:REG_DEAD (reg:DF 96 [ _10 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (neg:DF (reg:DF 96 [ _10 ]))
                    (nil))))))
(insn 81 80 82 10 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [9 time+0 S8 A64])
        (reg:DF 119)) "test1.c":254 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 119)
        (nil)))
(insn 82 81 239 10 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])
        (const_int 0 [0])) "test1.c":259 82 {*movsi_internal}
     (nil))
(jump_insn 239 82 240 10 (set (pc)
        (label_ref 97)) "test1.c":259 659 {jump}
     (nil)
 -> 97)
;;  succ:       12 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 240 239 99)
;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       12
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 97 98 99 100 121 122 123
(code_label 99 240 85 11 62 (nil) [1 uses])
(note 85 99 86 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 87 11 (set (reg:SI 121)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])) "test1.c":263 82 {*movsi_internal}
     (nil))
(insn 87 86 88 11 (set (reg:DI 97 [ _11 ])
        (sign_extend:DI (reg:SI 121))) "test1.c":263 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 121)
        (nil)))
(insn 88 87 89 11 (parallel [
            (set (reg:DI 98 [ _12 ])
                (ashift:DI (reg:DI 97 [ _11 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":263 522 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 97 [ _11 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 89 88 90 11 (set (reg/f:DI 122)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [8 filename_list_array+0 S8 A64])) "test1.c":263 81 {*movdi_internal}
     (nil))
(insn 90 89 91 11 (parallel [
            (set (reg/f:DI 99 [ _13 ])
                (plus:DI (reg:DI 98 [ _12 ])
                    (reg/f:DI 122)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":263 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 122)
        (expr_list:REG_DEAD (reg:DI 98 [ _12 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -32 [0xffffffffffffffe0])) [8 filename_list_array+0 S8 A64])
                        (reg:DI 98 [ _12 ]))
                    (nil))))))
(insn 91 90 92 11 (set (reg/f:DI 100 [ _14 ])
        (mem/f:DI (reg/f:DI 99 [ _13 ]) [3 *_13+0 S8 A64])) "test1.c":263 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 99 [ _13 ])
        (nil)))
(insn 92 91 93 11 (set (reg:SI 123)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])) "test1.c":263 82 {*movsi_internal}
     (nil))
(insn 93 92 94 11 (set (reg:SI 4 si)
        (reg:SI 123)) "test1.c":263 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 123)
        (nil)))
(insn 94 93 95 11 (set (reg:DI 5 di)
        (reg/f:DI 100 [ _14 ])) "test1.c":263 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 100 [ _14 ])
        (nil)))
(call_insn 95 94 96 11 (call (mem:QI (symbol_ref:DI ("readFunc") [flags 0x3]  <function_decl 0x7fa517a7c400 readFunc>) [0 readFunc S1 A8])
        (const_int 0 [0])) "test1.c":263 665 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 96 95 97 11 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":259 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       12 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       11 (FALLTHRU,DFS_BACK)
;;              10 [100.0%] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 124
(code_label 97 96 98 12 61 (nil) [1 uses])
(note 98 97 100 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 100 98 101 12 (set (reg:SI 124)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])) "test1.c":259 82 {*movsi_internal}
     (nil))
(insn 101 100 102 12 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 124)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 file_num+0 S4 A32]))) "test1.c":259 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 124)
        (nil)))
(jump_insn 102 101 103 12 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 99)
            (pc))) "test1.c":259 627 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 99)
;;  succ:       11
;;              13 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (RTL)
;;  pred:       12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 103 102 104 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 104 103 241 13 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])
        (const_int 0 [0])) "test1.c":272 82 {*movsi_internal}
     (nil))
(jump_insn 241 104 242 13 (set (pc)
        (label_ref 112)) "test1.c":272 659 {jump}
     (nil)
 -> 112)
;;  succ:       15 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 242 241 114)
;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (RTL)
;;  pred:       15
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 125
(code_label 114 242 107 14 64 (nil) [1 uses])
(note 107 114 108 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 108 107 109 14 (set (reg:SI 125)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])) "test1.c":276 82 {*movsi_internal}
     (nil))
(insn 109 108 110 14 (set (reg:SI 5 di)
        (reg:SI 125)) "test1.c":276 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 125)
        (nil)))
(call_insn 110 109 111 14 (call (mem:QI (symbol_ref:DI ("mapperFunc") [flags 0x3]  <function_decl 0x7fa517a7c600 mapperFunc>) [0 mapperFunc S1 A8])
        (const_int 0 [0])) "test1.c":276 665 {*call}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 111 110 112 14 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":272 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       15 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (RTL)
;;  pred:       14 (FALLTHRU,DFS_BACK)
;;              13 [100.0%] 
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 126
(code_label 112 111 113 15 63 (nil) [1 uses])
(note 113 112 115 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 115 113 116 15 (set (reg:SI 126)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])) "test1.c":272 82 {*movsi_internal}
     (nil))
(insn 116 115 117 15 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 126)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 file_num+0 S4 A32]))) "test1.c":272 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 126)
        (nil)))
(jump_insn 117 116 118 15 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 114)
            (pc))) "test1.c":272 627 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 114)
;;  succ:       14
;;              16 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (RTL)
;;  pred:       15 (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 127 128 129
(note 118 117 119 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 119 118 120 16 (set (reg:SI 127)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 file_num+0 S4 A32])) "test1.c":282 82 {*movsi_internal}
     (nil))
(insn 120 119 121 16 (set (reg:SI 5 di)
        (reg:SI 127)) "test1.c":282 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 127)
        (nil)))
(call_insn 121 120 122 16 (call (mem:QI (symbol_ref:DI ("reducerFunc") [flags 0x3]  <function_decl 0x7fa517a7c800 reducerFunc>) [0 reducerFunc S1 A8])
        (const_int 0 [0])) "test1.c":282 665 {*call}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 122 121 123 16 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7fa517afe900 *.LC13>)) "test1.c":284 81 {*movdi_internal}
     (nil))
(insn 123 122 124 16 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7fa517afe990 *.LC14>)) "test1.c":284 81 {*movdi_internal}
     (nil))
(call_insn 124 123 125 16 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7fa517dd2a00 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) "test1.c":284 676 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 125 124 126 16 (set (reg:DI 128)
        (reg:DI 0 ax)) "test1.c":284 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 126 125 127 16 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [7 fp+0 S8 A64])
        (reg:DI 128)) "test1.c":284 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 128)
        (nil)))
(insn 127 126 128 16 (set (reg:DI 129)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [7 fp+0 S8 A64])) "test1.c":286 81 {*movdi_internal}
     (nil))
(insn 128 127 129 16 (set (reg:DI 5 di)
        (reg:DI 129)) "test1.c":286 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 129)
        (nil)))
(call_insn 129 128 130 16 (call (mem:QI (symbol_ref:DI ("writerFunc") [flags 0x3]  <function_decl 0x7fa517a7ca00 writerFunc>) [0 writerFunc S1 A8])
        (const_int 0 [0])) "test1.c":286 665 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 130 129 131 16 (set (reg:SI 5 di)
        (const_int 100 [0x64])) "test1.c":288 82 {*movsi_internal}
     (nil))
(call_insn 131 130 132 16 (call (mem:QI (symbol_ref:DI ("hashTablePrintFunc") [flags 0x3]  <function_decl 0x7fa517a7c000 hashTablePrintFunc>) [0 hashTablePrintFunc S1 A8])
        (const_int 0 [0])) "test1.c":288 665 {*call}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 132 131 243 16 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])
        (const_int 0 [0])) "test1.c":291 82 {*movsi_internal}
     (nil))
(jump_insn 243 132 244 16 (set (pc)
        (label_ref 182)) "test1.c":291 659 {jump}
     (nil)
 -> 182)
;;  succ:       24 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 244 243 184)
;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (RTL)
;;  pred:       24
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 184 244 135 17 69 (nil) [1 uses])
(note 135 184 136 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 136 135 245 17 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 j+0 S4 A32])
        (const_int 0 [0])) "test1.c":293 82 {*movsi_internal}
     (nil))
(jump_insn 245 136 246 17 (set (pc)
        (label_ref 175)) "test1.c":293 659 {jump}
     (nil)
 -> 175)
;;  succ:       22 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 246 245 177)
;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (RTL)
;;  pred:       22
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 101 130 131 132 133 134 135 136 137
(code_label 177 246 139 18 68 (nil) [1 uses])
(note 139 177 140 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 140 139 141 18 (set (reg:SI 131)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 j+0 S4 A32])) "test1.c":295 82 {*movsi_internal}
     (nil))
(insn 141 140 142 18 (set (reg:DI 130)
        (sign_extend:DI (reg:SI 131))) "test1.c":295 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 131)
        (nil)))
(insn 142 141 143 18 (set (reg:SI 133)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])) "test1.c":295 82 {*movsi_internal}
     (nil))
(insn 143 142 144 18 (set (reg:DI 132)
        (sign_extend:DI (reg:SI 133))) "test1.c":295 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 133)
        (nil)))
(insn 144 143 145 18 (parallel [
            (set (reg:DI 134)
                (mult:DI (reg:DI 132)
                    (const_int 100000 [0x186a0])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":295 339 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 132)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 145 144 146 18 (parallel [
            (set (reg:DI 135)
                (plus:DI (reg:DI 134)
                    (reg:DI 130)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":295 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 134)
        (expr_list:REG_DEAD (reg:DI 130)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 146 145 147 18 (parallel [
            (set (reg:DI 136)
                (ashift:DI (reg:DI 135)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":295 522 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 135)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 147 146 148 18 (set (reg:DI 137)
        (symbol_ref:DI ("hashTable") [flags 0x2]  <var_decl 0x7fa517a76000 hashTable>)) "test1.c":295 81 {*movdi_internal}
     (nil))
(insn 148 147 149 18 (set (reg/f:DI 101 [ _15 ])
        (mem/f:DI (plus:DI (reg:DI 136)
                (reg:DI 137)) [2 hashTable S8 A64])) "test1.c":295 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 137)
        (expr_list:REG_DEAD (reg:DI 136)
            (nil))))
(insn 149 148 150 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 101 [ _15 ])
            (const_int 0 [0]))) "test1.c":295 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 101 [ _15 ])
        (nil)))
(jump_insn 150 149 151 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 172)
            (pc))) "test1.c":295 627 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 172)
;;  succ:       19 (FALLTHRU)
;;              21
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (RTL)
;;  pred:       18 (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 138 139 140 141 142 143 144 145 146
(note 151 150 152 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 152 151 153 19 (set (reg:SI 139)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 j+0 S4 A32])) "test1.c":297 82 {*movsi_internal}
     (nil))
(insn 153 152 154 19 (set (reg:DI 138)
        (sign_extend:DI (reg:SI 139))) "test1.c":297 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 139)
        (nil)))
(insn 154 153 155 19 (set (reg:SI 141)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])) "test1.c":297 82 {*movsi_internal}
     (nil))
(insn 155 154 156 19 (set (reg:DI 140)
        (sign_extend:DI (reg:SI 141))) "test1.c":297 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 141)
        (nil)))
(insn 156 155 157 19 (parallel [
            (set (reg:DI 142)
                (mult:DI (reg:DI 140)
                    (const_int 100000 [0x186a0])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":297 339 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 140)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 157 156 158 19 (parallel [
            (set (reg:DI 143)
                (plus:DI (reg:DI 142)
                    (reg:DI 138)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":297 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 142)
        (expr_list:REG_DEAD (reg:DI 138)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 158 157 159 19 (parallel [
            (set (reg:DI 144)
                (ashift:DI (reg:DI 143)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":297 522 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 143)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 159 158 160 19 (set (reg:DI 145)
        (symbol_ref:DI ("hashTable") [flags 0x2]  <var_decl 0x7fa517a76000 hashTable>)) "test1.c":297 81 {*movdi_internal}
     (nil))
(insn 160 159 161 19 (set (reg/f:DI 146)
        (mem/f:DI (plus:DI (reg:DI 144)
                (reg:DI 145)) [2 hashTable S8 A64])) "test1.c":297 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 145)
        (expr_list:REG_DEAD (reg:DI 144)
            (nil))))
(insn 161 160 162 19 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [2 pHead+0 S8 A64])
        (reg/f:DI 146)) "test1.c":297 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 146)
        (nil)))
(insn 162 161 163 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -56 [0xffffffffffffffc8])) [2 pHead+0 S8 A64])
            (const_int 0 [0]))) "test1.c":298 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 163 162 164 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 172)
            (pc))) "test1.c":298 627 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 172)
;;  succ:       20 (FALLTHRU)
;;              21
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (RTL)
;;  pred:       19 (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 102 147 148
(note 164 163 165 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 165 164 166 20 (set (reg/f:DI 147)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [2 pHead+0 S8 A64])) "test1.c":300 81 {*movdi_internal}
     (nil))
(insn 166 165 167 20 (set (reg/f:DI 102 [ _16 ])
        (mem/f:DI (reg/f:DI 147) [3 pHead_70->Key+0 S8 A64])) "test1.c":300 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 147)
        (nil)))
(insn 167 166 168 20 (set (reg:DI 5 di)
        (reg/f:DI 102 [ _16 ])) "test1.c":300 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 102 [ _16 ])
        (nil)))
(call_insn 168 167 169 20 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fa517d1a800 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "test1.c":300 665 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 169 168 170 20 (set (reg:DI 148)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [2 pHead+0 S8 A64])) "test1.c":301 81 {*movdi_internal}
     (nil))
(insn 170 169 171 20 (set (reg:DI 5 di)
        (reg:DI 148)) "test1.c":301 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 148)
        (nil)))
(call_insn 171 170 172 20 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fa517d1a800 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "test1.c":301 665 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       21 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (RTL)
;;  pred:       18
;;              19
;;              20 (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 172 171 173 21 67 (nil) [2 uses])
(note 173 172 174 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 174 173 175 21 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -12 [0xfffffffffffffff4])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":293 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       22 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (RTL)
;;  pred:       21 (FALLTHRU,DFS_BACK)
;;              17 [100.0%] 
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 175 174 176 22 66 (nil) [1 uses])
(note 176 175 178 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 178 176 179 22 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 j+0 S4 A32])
            (const_int 99999 [0x1869f]))) "test1.c":293 7 {*cmpsi_1}
     (nil))
(jump_insn 179 178 180 22 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 177)
            (pc))) "test1.c":293 627 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 177)
;;  succ:       18
;;              23 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 22, next block 24, flags: (RTL)
;;  pred:       22 (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 180 179 181 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 181 180 182 23 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":291 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       24 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 25, flags: (RTL)
;;  pred:       23 (FALLTHRU,DFS_BACK)
;;              16 [100.0%] 
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 182 181 183 24 65 (nil) [1 uses])
(note 183 182 185 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 185 183 186 24 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])
            (const_int 99 [0x63]))) "test1.c":291 7 {*cmpsi_1}
     (nil))
(jump_insn 186 185 187 24 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 184)
            (pc))) "test1.c":291 627 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 184)
;;  succ:       17
;;              25 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 24, next block 26, flags: (RTL)
;;  pred:       24 (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 103 149 150 151 152
(note 187 186 188 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 188 187 189 25 (set (reg:DI 149)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [7 fp+0 S8 A64])) "test1.c":308 81 {*movdi_internal}
     (nil))
(insn 189 188 190 25 (set (reg:DI 5 di)
        (reg:DI 149)) "test1.c":308 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 149)
        (nil)))
(call_insn 190 189 191 25 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7fa517dd2700 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) "test1.c":308 676 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 191 190 192 25 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("omp_get_wtime") [flags 0x41]  <function_decl 0x7fa517a6c700 omp_get_wtime>) [0 omp_get_wtime S1 A8])
            (const_int 0 [0]))) "test1.c":309 676 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 192 191 193 25 (set (reg:DF 103 [ _17 ])
        (reg:DF 21 xmm0)) "test1.c":309 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 193 192 194 25 (set (reg:DF 151)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [9 time+0 S8 A64])) "test1.c":309 126 {*movdf_internal}
     (nil))
(insn 194 193 195 25 (set (reg:DF 150)
        (plus:DF (reg:DF 151)
            (reg:DF 103 [ _17 ]))) "test1.c":309 813 {*fop_df_comm}
     (expr_list:REG_DEAD (reg:DF 151)
        (expr_list:REG_DEAD (reg:DF 103 [ _17 ])
            (nil))))
(insn 195 194 196 25 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [9 time+0 S8 A64])
        (reg:DF 150)) "test1.c":309 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 150)
        (nil)))
(insn 196 195 197 25 (set (reg:DF 152)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [9 time+0 S8 A64])) "test1.c":310 126 {*movdf_internal}
     (nil))
(insn 197 196 198 25 (set (reg:DF 21 xmm0)
        (reg:DF 152)) "test1.c":310 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 152)
        (nil)))
(insn 198 197 199 25 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7fa517afea20 *.LC15>)) "test1.c":310 81 {*movdi_internal}
     (nil))
(insn 199 198 200 25 (set (reg:QI 0 ax)
        (const_int 1 [0x1])) "test1.c":310 84 {*movqi_internal}
     (nil))
(call_insn 200 199 201 25 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fa517cfff00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "test1.c":310 676 {*call_value}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DF (use (reg:DF 21 xmm0))
                (nil)))))
(insn 201 200 247 25 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])
        (const_int 0 [0])) "test1.c":312 82 {*movsi_internal}
     (nil))
(jump_insn 247 201 248 25 (set (pc)
        (label_ref 214)) "test1.c":312 659 {jump}
     (nil)
 -> 214)
;;  succ:       27 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 248 247 216)
;; basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 25, next block 27, flags: (RTL)
;;  pred:       27
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 104 105 106 107 153 154
(code_label 216 248 204 26 71 (nil) [1 uses])
(note 204 216 205 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 205 204 206 26 (set (reg:SI 153)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])) "test1.c":314 82 {*movsi_internal}
     (nil))
(insn 206 205 207 26 (set (reg:DI 104 [ _18 ])
        (sign_extend:DI (reg:SI 153))) "test1.c":314 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 153)
        (nil)))
(insn 207 206 208 26 (parallel [
            (set (reg:DI 105 [ _19 ])
                (ashift:DI (reg:DI 104 [ _18 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":314 522 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 104 [ _18 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 208 207 209 26 (set (reg/f:DI 154)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [8 filename_list_array+0 S8 A64])) "test1.c":314 81 {*movdi_internal}
     (nil))
(insn 209 208 210 26 (parallel [
            (set (reg/f:DI 106 [ _20 ])
                (plus:DI (reg:DI 105 [ _19 ])
                    (reg/f:DI 154)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":314 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 154)
        (expr_list:REG_DEAD (reg:DI 105 [ _19 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -32 [0xffffffffffffffe0])) [8 filename_list_array+0 S8 A64])
                        (reg:DI 105 [ _19 ]))
                    (nil))))))
(insn 210 209 211 26 (set (reg/f:DI 107 [ _21 ])
        (mem/f:DI (reg/f:DI 106 [ _20 ]) [3 *_20+0 S8 A64])) "test1.c":314 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 106 [ _20 ])
        (nil)))
(insn 211 210 212 26 (set (reg:DI 5 di)
        (reg/f:DI 107 [ _21 ])) "test1.c":314 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 107 [ _21 ])
        (nil)))
(call_insn 212 211 213 26 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fa517d1a800 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "test1.c":314 665 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 213 212 214 26 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":312 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       27 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 27, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 26, next block 28, flags: (RTL)
;;  pred:       26 (FALLTHRU,DFS_BACK)
;;              25 [100.0%] 
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 214 213 215 27 70 (nil) [1 uses])
(note 215 214 217 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 217 215 218 27 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A32])
            (const_int 99 [0x63]))) "test1.c":312 7 {*cmpsi_1}
     (nil))
(jump_insn 218 217 219 27 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 216)
            (pc))) "test1.c":312 627 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 216)
;;  succ:       26
;;              28 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 28, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 27, next block 29, flags: (RTL)
;;  pred:       27 (FALLTHRU)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 108 155
(note 219 218 220 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 220 219 221 28 (set (reg:DI 155)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [8 filename_list_array+0 S8 A64])) "test1.c":316 81 {*movdi_internal}
     (nil))
(insn 221 220 222 28 (set (reg:DI 5 di)
        (reg:DI 155)) "test1.c":316 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 155)
        (nil)))
(call_insn 222 221 223 28 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fa517d1a800 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "test1.c":316 665 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 223 222 224 28 (set (reg:SI 108 [ _29 ])
        (const_int 0 [0])) "test1.c":318 82 {*movsi_internal}
     (nil))
;;  succ:       29 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 108

;; basic block 29, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 28, next block 1, flags: (RTL)
;;  pred:       28 (FALLTHRU)
;;              6 [100.0%] 
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 108
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 108
;; lr  def 	 0 [ax] 109
(code_label 224 223 225 29 58 (nil) [1 uses])
(note 225 224 226 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 226 225 230 29 (set (reg:SI 109 [ <retval> ])
        (reg:SI 108 [ _29 ])) 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 108 [ _29 ])
        (nil)))
(insn 230 226 231 29 (set (reg/i:SI 0 ax)
        (reg:SI 109 [ <retval> ])) "test1.c":319 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 109 [ <retval> ])
        (nil)))
(insn 231 230 0 29 (use (reg/i:SI 0 ax)) "test1.c":319 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

