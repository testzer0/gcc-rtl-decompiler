
;; Function main (main, funcdef_no=0, decl_uid=1795, cgraph_uid=0, symbol_order=1)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 22 n_edges 30 count 22 (    1)
;; 5 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 3, latch 21
;;  depth 1, outer 0
;;  nodes: 3 21 20 19 15 14 13 12 11 4 5 6 7 8 10 9 18 17 16
;;
;; Loop 3
;;  header 20, latch 19
;;  depth 2, outer 1
;;  nodes: 20 19 18 17 16
;;
;; Loop 2
;;  header 14, latch 13
;;  depth 2, outer 1
;;  nodes: 14 13 12 11 4 5 6 7 8 10 9
;;
;; Loop 4
;;  header 12, latch 11
;;  depth 3, outer 2
;;  nodes: 12 11 5 6 7 8 10 9
;; 2 succs { 3 }
;; 3 succs { 14 }
;; 4 succs { 12 }
;; 5 succs { 6 11 }
;; 6 succs { 7 11 }
;; 7 succs { 8 11 }
;; 8 succs { 9 11 }
;; 9 succs { 10 11 }
;; 10 succs { 11 }
;; 11 succs { 12 }
;; 12 succs { 5 13 }
;; 13 succs { 14 }
;; 14 succs { 4 15 }
;; 15 succs { 20 }
;; 16 succs { 17 18 }
;; 17 succs { 19 }
;; 18 succs { 19 }
;; 19 succs { 20 }
;; 20 succs { 16 21 }
;; 21 succs { 3 }
Building IRA IR
verify found no changes in insn with uid = 11.
verify found no changes in insn with uid = 17.
verify found no changes in insn with uid = 22.
verify found no changes in insn with uid = 35.
verify found no changes in insn with uid = 40.
verify found no changes in insn with uid = 45.
verify found no changes in insn with uid = 50.
verify found no changes in insn with uid = 55.
verify found no changes in insn with uid = 75.
verify found no changes in insn with uid = 80.
verify found no changes in insn with uid = 85.
verify found no changes in insn with uid = 221.
verify found no changes in insn with uid = 253.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r228: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a1 (r228,l0) best SSE_REGS, allocno SSE_REGS
    r227: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a4 (r227,l0) best SSE_REGS, allocno SSE_REGS
    r226: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r226,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r225: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r225,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r224: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r224,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r223: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r223,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r222: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r222,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r221: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r221,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r220: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a19 (r220,l0) best DREG, allocno GENERAL_REGS
    r219: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a22 (r219,l0) best SSE_REGS, allocno SSE_REGS
    r218: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a24 (r218,l0) best SSE_REGS, allocno SSE_REGS
    r217: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a27 (r217,l0) best SSE_REGS, allocno SSE_REGS
    r216: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a29 (r216,l0) best SSE_REGS, allocno SSE_REGS
    r215: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r215,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r214: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r214,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r213: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r213,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r212: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r212,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r211: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r211,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r210: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a39 (r210,l0) best SSE_REGS, allocno SSE_REGS
    r209: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r209,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r208: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r208,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r207: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a42 (r207,l0) best SSE_REGS, allocno SSE_REGS
    r206: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r206,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r205: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r205,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r204: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r204,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r203: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a47 (r203,l0) best SSE_REGS, allocno SSE_REGS
    r202: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a52 (r202,l0) best SSE_REGS, allocno SSE_REGS
    r201: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a55 (r201,l0) best SSE_REGS, allocno SSE_REGS
    r200: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a59 (r200,l0) best SSE_REGS, allocno SSE_REGS
    r199: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a64 (r199,l0) best SSE_REGS, allocno SSE_REGS
    r198: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a65 (r198,l0) best SSE_REGS, allocno SSE_REGS
    r197: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r197,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r196: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r196,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r193: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r193,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r192: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r192,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r191: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r191,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r190: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a72 (r190,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r189: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a74 (r189,l0) best SSE_REGS, allocno SSE_REGS
    r188: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a80 (r188,l0) best SSE_REGS, allocno SSE_REGS
    r187: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a82 (r187,l0) best SSE_REGS, allocno SSE_REGS
    r186: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a83 (r186,l0) best SSE_REGS, allocno SSE_REGS
    r185: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a84 (r185,l0) best SSE_REGS, allocno SSE_REGS
    r184: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a85 (r184,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r183: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a87 (r183,l0) best SSE_REGS, allocno SSE_REGS
    r182: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a93 (r182,l0) best SSE_REGS, allocno SSE_REGS
    r181: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a95 (r181,l0) best SSE_REGS, allocno SSE_REGS
    r180: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a96 (r180,l0) best SSE_REGS, allocno SSE_REGS
    r179: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a97 (r179,l0) best SSE_REGS, allocno SSE_REGS
    r178: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a98 (r178,l0) best SSE_REGS, allocno SSE_REGS
    r177: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a101 (r177,l0) best SSE_REGS, allocno SSE_REGS
    r176: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a103 (r176,l0) best SSE_REGS, allocno SSE_REGS
    r175: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a112 (r175,l0) best SSE_REGS, allocno SSE_REGS
    r174: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a110 (r174,l0) best SSE_REGS, allocno SSE_REGS
    r173: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a113 (r173,l0) best SSE_REGS, allocno SSE_REGS
    r172: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a117 (r172,l0) best SSE_REGS, allocno SSE_REGS
    r171: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a119 (r171,l0) best SSE_REGS, allocno SSE_REGS
    r170: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a121 (r170,l0) best SSE_REGS, allocno SSE_REGS
    r169: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a122 (r169,l0) best SSE_REGS, allocno SSE_REGS
    r168: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a120 (r168,l0) best SSE_REGS, allocno SSE_REGS
    r167: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a133 (r167,l0) best SSE_REGS, allocno SSE_REGS
    r166: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a134 (r166,l0) best SSE_REGS, allocno SSE_REGS
    r165: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a135 (r165,l0) best DIREG, allocno GENERAL_REGS
    r164: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a136 (r164,l0) best DIREG, allocno GENERAL_REGS
    r163: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a137 (r163,l0) best SSE_REGS, allocno SSE_REGS
    r162: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a138 (r162,l0) best SSE_REGS, allocno SSE_REGS
    r160: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r160,l0) best DIREG, allocno GENERAL_REGS
    r159: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a0 (r159,l0) best SSE_REGS, allocno SSE_REGS
    r158: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a2 (r158,l0) best SSE_REGS, allocno SSE_REGS
    r157: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a3 (r157,l0) best SSE_REGS, allocno SSE_REGS
    r156: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a5 (r156,l0) best SSE_REGS, allocno SSE_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r154,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r153,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a21 (r148,l0) best SSE_REGS, allocno SSE_REGS
    r147: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a23 (r147,l0) best SSE_REGS, allocno SSE_REGS
    r146: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a25 (r146,l0) best SSE_REGS, allocno SSE_REGS
    r145: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a26 (r145,l0) best SSE_REGS, allocno SSE_REGS
    r144: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a28 (r144,l0) best SSE_REGS, allocno SSE_REGS
    r143: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a30 (r143,l0) best SSE_REGS, allocno SSE_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a41 (r140,l0) best SSE_REGS, allocno SSE_REGS
    r139: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a46 (r139,l0) best SSE_REGS, allocno SSE_REGS
    r138: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a48 (r138,l0) best SSE_REGS, allocno SSE_REGS
    r137: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a49 (r137,l0) best SSE_REGS, allocno SSE_REGS
    r136: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a51 (r136,l0) best SSE_REGS, allocno SSE_REGS
    r135: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a50 (r135,l0) best SSE_REGS, allocno SSE_REGS
    r134: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a53 (r134,l0) best SSE_REGS, allocno SSE_REGS
    r133: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a54 (r133,l0) best SSE_REGS, allocno SSE_REGS
    r132: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a56 (r132,l0) best SSE_REGS, allocno SSE_REGS
    r131: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a58 (r131,l0) best SSE_REGS, allocno SSE_REGS
    r130: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a57 (r130,l0) best SSE_REGS, allocno SSE_REGS
    r129: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a60 (r129,l0) best SSE_REGS, allocno SSE_REGS
    r128: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a61 (r128,l0) best SSE_REGS, allocno SSE_REGS
    r127: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a63 (r127,l0) best SSE_REGS, allocno SSE_REGS
    r126: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a62 (r126,l0) best SSE_REGS, allocno SSE_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a73 (r124,l0) best SSE_REGS, allocno SSE_REGS
    r123: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a75 (r123,l0) best SSE_REGS, allocno SSE_REGS
    r122: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a76 (r122,l0) best SSE_REGS, allocno SSE_REGS
    r121: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a78 (r121,l0) best SSE_REGS, allocno SSE_REGS
    r120: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a79 (r120,l0) best SSE_REGS, allocno SSE_REGS
    r119: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a81 (r119,l0) best SSE_REGS, allocno SSE_REGS
    r118: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a77 (r118,l0) best SSE_REGS, allocno SSE_REGS
    r117: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a86 (r117,l0) best SSE_REGS, allocno SSE_REGS
    r116: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a88 (r116,l0) best SSE_REGS, allocno SSE_REGS
    r115: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a89 (r115,l0) best SSE_REGS, allocno SSE_REGS
    r114: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a91 (r114,l0) best SSE_REGS, allocno SSE_REGS
    r113: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a92 (r113,l0) best SSE_REGS, allocno SSE_REGS
    r112: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a94 (r112,l0) best SSE_REGS, allocno SSE_REGS
    r111: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a90 (r111,l0) best SSE_REGS, allocno SSE_REGS
    r110: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a99 (r110,l0) best SSE_REGS, allocno SSE_REGS
    r109: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a100 (r109,l0) best SSE_REGS, allocno SSE_REGS
    r108: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a102 (r108,l0) best SSE_REGS, allocno SSE_REGS
    r107: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a104 (r107,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r106: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a105 (r106,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r105: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a106 (r105,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r104: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a107 (r104,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r103: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a108 (r103,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r102: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a109 (r102,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r101: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a111 (r101,l0) best SSE_REGS, allocno SSE_REGS
    r100: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a114 (r100,l0) best SSE_REGS, allocno SSE_REGS
    r99: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a115 (r99,l0) best SSE_REGS, allocno SSE_REGS
    r98: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a116 (r98,l0) best SSE_REGS, allocno SSE_REGS
    r97: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a118 (r97,l0) best SSE_REGS, allocno SSE_REGS
    r96: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a123 (r96,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r95: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a124 (r95,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r94: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a125 (r94,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r93: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a126 (r93,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r92: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a127 (r92,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r91: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a128 (r91,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r90: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a129 (r90,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r89: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a130 (r89,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r88: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a131 (r88,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r87: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a132 (r87,l0) best SSE_FIRST_REG, allocno SSE_REGS

  a0(r159,l0) costs: AREG:29 DREG:29 CREG:29 BREG:29 SIREG:29 DIREG:29 AD_REGS:29 CLOBBERED_REGS:29 Q_REGS:29 NON_Q_REGS:29 TLS_GOTBASE_REGS:29 GENERAL_REGS:29 FP_TOP_REG:50 FP_SECOND_REG:50 FLOAT_REGS:50 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 FP_TOP_SSE_REGS:50 FP_SECOND_SSE_REGS:50 FLOAT_SSE_REGS:50 FLOAT_INT_REGS:50 INT_SSE_REGS:34 FLOAT_INT_SSE_REGS:50 MEM:23
  a1(r228,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 CLOBBERED_REGS:15 Q_REGS:15 NON_Q_REGS:15 TLS_GOTBASE_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:13
  a2(r158,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 CLOBBERED_REGS:21 Q_REGS:21 NON_Q_REGS:21 TLS_GOTBASE_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a3(r157,l0) costs: AREG:29 DREG:29 CREG:29 BREG:29 SIREG:29 DIREG:29 AD_REGS:29 CLOBBERED_REGS:29 Q_REGS:29 NON_Q_REGS:29 TLS_GOTBASE_REGS:29 GENERAL_REGS:29 FP_TOP_REG:50 FP_SECOND_REG:50 FLOAT_REGS:50 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 FP_TOP_SSE_REGS:50 FP_SECOND_SSE_REGS:50 FLOAT_SSE_REGS:50 FLOAT_INT_REGS:50 INT_SSE_REGS:34 FLOAT_INT_SSE_REGS:50 MEM:23
  a4(r227,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 CLOBBERED_REGS:15 Q_REGS:15 NON_Q_REGS:15 TLS_GOTBASE_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:13
  a5(r156,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 CLOBBERED_REGS:21 Q_REGS:21 NON_Q_REGS:21 TLS_GOTBASE_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a6(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a7(r154,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a8(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a9(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:29 NO_REX_SSE_REGS:29 SSE_REGS:29 MMX_REGS:34 INT_SSE_REGS:30 ALL_REGS:516 MEM:8
  a10(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a11(r226,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a12(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a13(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:50 NO_REX_SSE_REGS:50 SSE_REGS:50 MMX_REGS:65 INT_SSE_REGS:53 ALL_REGS:1040 MEM:16
  a14(r224,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:74 NO_REX_SSE_REGS:74 SSE_REGS:74 MMX_REGS:94 INT_SSE_REGS:78 ALL_REGS:1448 MEM:20
  a15(r149,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 CLOBBERED_REGS:2 Q_REGS:2 NON_Q_REGS:2 TLS_GOTBASE_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:38 NO_REX_SSE_REGS:38 SSE_REGS:38 MMX_REGS:53 INT_SSE_REGS:41 ALL_REGS:730 MEM:15
  a16(r225,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a17(r223,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 CLOBBERED_REGS:2 Q_REGS:2 NON_Q_REGS:2 TLS_GOTBASE_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:23 NO_REX_SSE_REGS:23 SSE_REGS:23 MMX_REGS:28 INT_SSE_REGS:24 ALL_REGS:418 MEM:8
  a18(r222,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a19(r220,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 CLOBBERED_REGS:2 Q_REGS:2 NON_Q_REGS:2 TLS_GOTBASE_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a20(r221,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a21(r148,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 CLOBBERED_REGS:21 Q_REGS:21 NON_Q_REGS:21 TLS_GOTBASE_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a22(r219,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 CLOBBERED_REGS:15 Q_REGS:15 NON_Q_REGS:15 TLS_GOTBASE_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:14
  a23(r147,l0) costs: AREG:29 DREG:29 CREG:29 BREG:29 SIREG:29 DIREG:29 AD_REGS:29 CLOBBERED_REGS:29 Q_REGS:29 NON_Q_REGS:29 TLS_GOTBASE_REGS:29 GENERAL_REGS:29 FP_TOP_REG:50 FP_SECOND_REG:50 FLOAT_REGS:50 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 FP_TOP_SSE_REGS:50 FP_SECOND_SSE_REGS:50 FLOAT_SSE_REGS:50 FLOAT_INT_REGS:50 INT_SSE_REGS:34 FLOAT_INT_SSE_REGS:50 MEM:23
  a24(r218,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 CLOBBERED_REGS:15 Q_REGS:15 NON_Q_REGS:15 TLS_GOTBASE_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:13
  a25(r146,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 CLOBBERED_REGS:21 Q_REGS:21 NON_Q_REGS:21 TLS_GOTBASE_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a26(r145,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 CLOBBERED_REGS:21 Q_REGS:21 NON_Q_REGS:21 TLS_GOTBASE_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a27(r217,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 CLOBBERED_REGS:15 Q_REGS:15 NON_Q_REGS:15 TLS_GOTBASE_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:14
  a28(r144,l0) costs: AREG:29 DREG:29 CREG:29 BREG:29 SIREG:29 DIREG:29 AD_REGS:29 CLOBBERED_REGS:29 Q_REGS:29 NON_Q_REGS:29 TLS_GOTBASE_REGS:29 GENERAL_REGS:29 FP_TOP_REG:50 FP_SECOND_REG:50 FLOAT_REGS:50 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 FP_TOP_SSE_REGS:50 FP_SECOND_SSE_REGS:50 FLOAT_SSE_REGS:50 FLOAT_INT_REGS:50 INT_SSE_REGS:34 FLOAT_INT_SSE_REGS:50 MEM:23
  a29(r216,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 CLOBBERED_REGS:15 Q_REGS:15 NON_Q_REGS:15 TLS_GOTBASE_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:13
  a30(r143,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 CLOBBERED_REGS:21 Q_REGS:21 NON_Q_REGS:21 TLS_GOTBASE_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a31(r214,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a32(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:8
  a33(r215,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a34(r213,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:24 INT_SSE_REGS:20 ALL_REGS:312 MEM:8
  a35(r212,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:416 MEM:8
  a36(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a37(r211,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a38(r208,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a39(r210,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a40(r209,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a41(r140,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 CLOBBERED_REGS:15 Q_REGS:15 NON_Q_REGS:15 TLS_GOTBASE_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a42(r207,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 CLOBBERED_REGS:15 Q_REGS:15 NON_Q_REGS:15 TLS_GOTBASE_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a43(r205,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a44(r206,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a45(r204,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a46(r139,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 CLOBBERED_REGS:12 Q_REGS:12 NON_Q_REGS:12 TLS_GOTBASE_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a47(r203,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 CLOBBERED_REGS:15 Q_REGS:15 NON_Q_REGS:15 TLS_GOTBASE_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a48(r138,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 CLOBBERED_REGS:21 Q_REGS:21 NON_Q_REGS:21 TLS_GOTBASE_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a49(r137,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 CLOBBERED_REGS:21 Q_REGS:21 NON_Q_REGS:21 TLS_GOTBASE_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a50(r135,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 CLOBBERED_REGS:21 Q_REGS:21 NON_Q_REGS:21 TLS_GOTBASE_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a51(r136,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 CLOBBERED_REGS:21 Q_REGS:21 NON_Q_REGS:21 TLS_GOTBASE_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a52(r202,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 CLOBBERED_REGS:15 Q_REGS:15 NON_Q_REGS:15 TLS_GOTBASE_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a53(r134,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 CLOBBERED_REGS:21 Q_REGS:21 NON_Q_REGS:21 TLS_GOTBASE_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a54(r133,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 CLOBBERED_REGS:21 Q_REGS:21 NON_Q_REGS:21 TLS_GOTBASE_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a55(r201,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 CLOBBERED_REGS:15 Q_REGS:15 NON_Q_REGS:15 TLS_GOTBASE_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a56(r132,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 CLOBBERED_REGS:21 Q_REGS:21 NON_Q_REGS:21 TLS_GOTBASE_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a57(r130,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 CLOBBERED_REGS:21 Q_REGS:21 NON_Q_REGS:21 TLS_GOTBASE_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a58(r131,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 CLOBBERED_REGS:21 Q_REGS:21 NON_Q_REGS:21 TLS_GOTBASE_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a59(r200,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 CLOBBERED_REGS:15 Q_REGS:15 NON_Q_REGS:15 TLS_GOTBASE_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a60(r129,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 CLOBBERED_REGS:21 Q_REGS:21 NON_Q_REGS:21 TLS_GOTBASE_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a61(r128,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 CLOBBERED_REGS:21 Q_REGS:21 NON_Q_REGS:21 TLS_GOTBASE_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a62(r126,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 CLOBBERED_REGS:21 Q_REGS:21 NON_Q_REGS:21 TLS_GOTBASE_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a63(r127,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 CLOBBERED_REGS:21 Q_REGS:21 NON_Q_REGS:21 TLS_GOTBASE_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a64(r199,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 CLOBBERED_REGS:15 Q_REGS:15 NON_Q_REGS:15 TLS_GOTBASE_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a65(r198,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 CLOBBERED_REGS:15 Q_REGS:15 NON_Q_REGS:15 TLS_GOTBASE_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a66(r196,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a67(r197,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a68(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a69(r192,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:74 NO_REX_SSE_REGS:74 SSE_REGS:74 MMX_REGS:94 INT_SSE_REGS:78 ALL_REGS:1448 MEM:20
  a70(r193,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a71(r191,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:28 NO_REX_SSE_REGS:28 SSE_REGS:28 MMX_REGS:38 INT_SSE_REGS:30 ALL_REGS:520 MEM:10
  a72(r190,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a73(r124,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 CLOBBERED_REGS:12 Q_REGS:12 NON_Q_REGS:12 TLS_GOTBASE_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a74(r189,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 CLOBBERED_REGS:15 Q_REGS:15 NON_Q_REGS:15 TLS_GOTBASE_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a75(r123,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 CLOBBERED_REGS:21 Q_REGS:21 NON_Q_REGS:21 TLS_GOTBASE_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a76(r122,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 CLOBBERED_REGS:21 Q_REGS:21 NON_Q_REGS:21 TLS_GOTBASE_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a77(r118,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 CLOBBERED_REGS:21 Q_REGS:21 NON_Q_REGS:21 TLS_GOTBASE_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a78(r121,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 CLOBBERED_REGS:21 Q_REGS:21 NON_Q_REGS:21 TLS_GOTBASE_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a79(r120,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 CLOBBERED_REGS:21 Q_REGS:21 NON_Q_REGS:21 TLS_GOTBASE_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a80(r188,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 CLOBBERED_REGS:15 Q_REGS:15 NON_Q_REGS:15 TLS_GOTBASE_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a81(r119,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 CLOBBERED_REGS:21 Q_REGS:21 NON_Q_REGS:21 TLS_GOTBASE_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a82(r187,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 CLOBBERED_REGS:15 Q_REGS:15 NON_Q_REGS:15 TLS_GOTBASE_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a83(r186,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 CLOBBERED_REGS:15 Q_REGS:15 NON_Q_REGS:15 TLS_GOTBASE_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a84(r185,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 CLOBBERED_REGS:15 Q_REGS:15 NON_Q_REGS:15 TLS_GOTBASE_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a85(r184,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a86(r117,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 CLOBBERED_REGS:12 Q_REGS:12 NON_Q_REGS:12 TLS_GOTBASE_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a87(r183,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 CLOBBERED_REGS:15 Q_REGS:15 NON_Q_REGS:15 TLS_GOTBASE_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a88(r116,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 CLOBBERED_REGS:21 Q_REGS:21 NON_Q_REGS:21 TLS_GOTBASE_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a89(r115,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 CLOBBERED_REGS:21 Q_REGS:21 NON_Q_REGS:21 TLS_GOTBASE_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a90(r111,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 CLOBBERED_REGS:21 Q_REGS:21 NON_Q_REGS:21 TLS_GOTBASE_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a91(r114,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 CLOBBERED_REGS:21 Q_REGS:21 NON_Q_REGS:21 TLS_GOTBASE_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a92(r113,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 CLOBBERED_REGS:21 Q_REGS:21 NON_Q_REGS:21 TLS_GOTBASE_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a93(r182,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 CLOBBERED_REGS:15 Q_REGS:15 NON_Q_REGS:15 TLS_GOTBASE_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a94(r112,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 CLOBBERED_REGS:21 Q_REGS:21 NON_Q_REGS:21 TLS_GOTBASE_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a95(r181,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 CLOBBERED_REGS:15 Q_REGS:15 NON_Q_REGS:15 TLS_GOTBASE_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a96(r180,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 CLOBBERED_REGS:15 Q_REGS:15 NON_Q_REGS:15 TLS_GOTBASE_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a97(r179,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 CLOBBERED_REGS:15 Q_REGS:15 NON_Q_REGS:15 TLS_GOTBASE_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a98(r178,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a99(r110,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 CLOBBERED_REGS:21 Q_REGS:21 NON_Q_REGS:21 TLS_GOTBASE_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a100(r109,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 CLOBBERED_REGS:21 Q_REGS:21 NON_Q_REGS:21 TLS_GOTBASE_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a101(r177,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 CLOBBERED_REGS:15 Q_REGS:15 NON_Q_REGS:15 TLS_GOTBASE_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a102(r108,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 CLOBBERED_REGS:21 Q_REGS:21 NON_Q_REGS:21 TLS_GOTBASE_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a103(r176,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 CLOBBERED_REGS:15 Q_REGS:15 NON_Q_REGS:15 TLS_GOTBASE_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a104(r107,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 CLOBBERED_REGS:21 Q_REGS:21 NON_Q_REGS:21 TLS_GOTBASE_REGS:21 GENERAL_REGS:21 FP_TOP_REG:35 FP_SECOND_REG:35 FLOAT_REGS:35 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 FP_TOP_SSE_REGS:37 FP_SECOND_SSE_REGS:37 FLOAT_SSE_REGS:37 FLOAT_INT_REGS:35 INT_SSE_REGS:29 FLOAT_INT_SSE_REGS:37 MEM:16
  a105(r106,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 CLOBBERED_REGS:12 Q_REGS:12 NON_Q_REGS:12 TLS_GOTBASE_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a106(r105,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 CLOBBERED_REGS:21 Q_REGS:21 NON_Q_REGS:21 TLS_GOTBASE_REGS:21 GENERAL_REGS:21 FP_TOP_REG:35 FP_SECOND_REG:35 FLOAT_REGS:35 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 FP_TOP_SSE_REGS:37 FP_SECOND_SSE_REGS:37 FLOAT_SSE_REGS:37 FLOAT_INT_REGS:35 INT_SSE_REGS:29 FLOAT_INT_SSE_REGS:37 MEM:16
  a107(r104,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 CLOBBERED_REGS:12 Q_REGS:12 NON_Q_REGS:12 TLS_GOTBASE_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a108(r103,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 CLOBBERED_REGS:21 Q_REGS:21 NON_Q_REGS:21 TLS_GOTBASE_REGS:21 GENERAL_REGS:21 FP_TOP_REG:35 FP_SECOND_REG:35 FLOAT_REGS:35 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 FP_TOP_SSE_REGS:37 FP_SECOND_SSE_REGS:37 FLOAT_SSE_REGS:37 FLOAT_INT_REGS:35 INT_SSE_REGS:29 FLOAT_INT_SSE_REGS:37 MEM:16
  a109(r102,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 CLOBBERED_REGS:12 Q_REGS:12 NON_Q_REGS:12 TLS_GOTBASE_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a110(r174,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a111(r101,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 CLOBBERED_REGS:21 Q_REGS:21 NON_Q_REGS:21 TLS_GOTBASE_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a112(r175,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 CLOBBERED_REGS:15 Q_REGS:15 NON_Q_REGS:15 TLS_GOTBASE_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a113(r173,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 CLOBBERED_REGS:15 Q_REGS:15 NON_Q_REGS:15 TLS_GOTBASE_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a114(r100,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 CLOBBERED_REGS:21 Q_REGS:21 NON_Q_REGS:21 TLS_GOTBASE_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a115(r99,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 CLOBBERED_REGS:21 Q_REGS:21 NON_Q_REGS:21 TLS_GOTBASE_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a116(r98,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 CLOBBERED_REGS:21 Q_REGS:21 NON_Q_REGS:21 TLS_GOTBASE_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a117(r172,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 CLOBBERED_REGS:15 Q_REGS:15 NON_Q_REGS:15 TLS_GOTBASE_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a118(r97,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 CLOBBERED_REGS:21 Q_REGS:21 NON_Q_REGS:21 TLS_GOTBASE_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a119(r171,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 CLOBBERED_REGS:15 Q_REGS:15 NON_Q_REGS:15 TLS_GOTBASE_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a120(r168,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a121(r170,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 CLOBBERED_REGS:15 Q_REGS:15 NON_Q_REGS:15 TLS_GOTBASE_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a122(r169,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 CLOBBERED_REGS:15 Q_REGS:15 NON_Q_REGS:15 TLS_GOTBASE_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a123(r96,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 CLOBBERED_REGS:21 Q_REGS:21 NON_Q_REGS:21 TLS_GOTBASE_REGS:21 GENERAL_REGS:21 FP_TOP_REG:35 FP_SECOND_REG:35 FLOAT_REGS:35 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 FP_TOP_SSE_REGS:37 FP_SECOND_SSE_REGS:37 FLOAT_SSE_REGS:37 FLOAT_INT_REGS:35 INT_SSE_REGS:29 FLOAT_INT_SSE_REGS:37 MEM:16
  a124(r95,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 CLOBBERED_REGS:12 Q_REGS:12 NON_Q_REGS:12 TLS_GOTBASE_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a125(r94,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 CLOBBERED_REGS:21 Q_REGS:21 NON_Q_REGS:21 TLS_GOTBASE_REGS:21 GENERAL_REGS:21 FP_TOP_REG:35 FP_SECOND_REG:35 FLOAT_REGS:35 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 FP_TOP_SSE_REGS:37 FP_SECOND_SSE_REGS:37 FLOAT_SSE_REGS:37 FLOAT_INT_REGS:35 INT_SSE_REGS:29 FLOAT_INT_SSE_REGS:37 MEM:16
  a126(r93,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 CLOBBERED_REGS:12 Q_REGS:12 NON_Q_REGS:12 TLS_GOTBASE_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a127(r92,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 CLOBBERED_REGS:21 Q_REGS:21 NON_Q_REGS:21 TLS_GOTBASE_REGS:21 GENERAL_REGS:21 FP_TOP_REG:35 FP_SECOND_REG:35 FLOAT_REGS:35 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 FP_TOP_SSE_REGS:37 FP_SECOND_SSE_REGS:37 FLOAT_SSE_REGS:37 FLOAT_INT_REGS:35 INT_SSE_REGS:29 FLOAT_INT_SSE_REGS:37 MEM:16
  a128(r91,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 CLOBBERED_REGS:12 Q_REGS:12 NON_Q_REGS:12 TLS_GOTBASE_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a129(r90,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 CLOBBERED_REGS:21 Q_REGS:21 NON_Q_REGS:21 TLS_GOTBASE_REGS:21 GENERAL_REGS:21 FP_TOP_REG:35 FP_SECOND_REG:35 FLOAT_REGS:35 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 FP_TOP_SSE_REGS:37 FP_SECOND_SSE_REGS:37 FLOAT_SSE_REGS:37 FLOAT_INT_REGS:35 INT_SSE_REGS:29 FLOAT_INT_SSE_REGS:37 MEM:16
  a130(r89,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 CLOBBERED_REGS:12 Q_REGS:12 NON_Q_REGS:12 TLS_GOTBASE_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a131(r88,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 CLOBBERED_REGS:21 Q_REGS:21 NON_Q_REGS:21 TLS_GOTBASE_REGS:21 GENERAL_REGS:21 FP_TOP_REG:35 FP_SECOND_REG:35 FLOAT_REGS:35 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 FP_TOP_SSE_REGS:37 FP_SECOND_SSE_REGS:37 FLOAT_SSE_REGS:37 FLOAT_INT_REGS:35 INT_SSE_REGS:29 FLOAT_INT_SSE_REGS:37 MEM:16
  a132(r87,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 CLOBBERED_REGS:12 Q_REGS:12 NON_Q_REGS:12 TLS_GOTBASE_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a133(r167,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a134(r166,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a135(r165,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a136(r164,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a137(r163,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a138(r162,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12

   Insn 282(l0): point = 0
   Insn 24(l0): point = 2
   Insn 23(l0): point = 4
   Insn 22(l0): point = 6
   Insn 21(l0): point = 8
   Insn 20(l0): point = 10
   Insn 19(l0): point = 12
   Insn 18(l0): point = 14
   Insn 17(l0): point = 16
   Insn 16(l0): point = 18
   Insn 15(l0): point = 20
   Insn 14(l0): point = 22
   Insn 13(l0): point = 24
   Insn 290(l0): point = 27
   Insn 271(l0): point = 29
   Insn 270(l0): point = 31
   Insn 269(l0): point = 33
   Insn 268(l0): point = 35
   Insn 267(l0): point = 37
   Insn 266(l0): point = 39
   Insn 265(l0): point = 41
   Insn 264(l0): point = 43
   Insn 262(l0): point = 46
   Insn 261(l0): point = 48
   Insn 259(l0): point = 50
   Insn 256(l0): point = 53
   Insn 255(l0): point = 55
   Insn 254(l0): point = 57
   Insn 253(l0): point = 59
   Insn 252(l0): point = 61
   Insn 249(l0): point = 64
   Insn 288(l0): point = 67
   Insn 244(l0): point = 69
   Insn 243(l0): point = 71
   Insn 242(l0): point = 73
   Insn 241(l0): point = 75
   Insn 239(l0): point = 78
   Insn 238(l0): point = 80
   Insn 237(l0): point = 82
   Insn 236(l0): point = 84
   Insn 235(l0): point = 86
   Insn 234(l0): point = 88
   Insn 233(l0): point = 90
   Insn 232(l0): point = 92
   Insn 231(l0): point = 94
   Insn 230(l0): point = 96
   Insn 229(l0): point = 98
   Insn 228(l0): point = 100
   Insn 227(l0): point = 102
   Insn 226(l0): point = 104
   Insn 286(l0): point = 107
   Insn 222(l0): point = 109
   Insn 221(l0): point = 111
   Insn 220(l0): point = 113
   Insn 219(l0): point = 115
   Insn 217(l0): point = 118
   Insn 216(l0): point = 120
   Insn 215(l0): point = 122
   Insn 213(l0): point = 124
   Insn 210(l0): point = 127
   Insn 209(l0): point = 129
   Insn 208(l0): point = 131
   Insn 207(l0): point = 133
   Insn 205(l0): point = 136
   Insn 204(l0): point = 138
   Insn 203(l0): point = 140
   Insn 201(l0): point = 142
   Insn 198(l0): point = 145
   Insn 197(l0): point = 147
   Insn 196(l0): point = 149
   Insn 195(l0): point = 151
   Insn 159(l0): point = 154
   Insn 158(l0): point = 156
   Insn 157(l0): point = 158
   Insn 156(l0): point = 160
   Insn 155(l0): point = 162
   Insn 154(l0): point = 164
   Insn 153(l0): point = 166
   Insn 152(l0): point = 168
   Insn 151(l0): point = 170
   Insn 150(l0): point = 172
   Insn 149(l0): point = 174
   Insn 148(l0): point = 176
   Insn 147(l0): point = 178
   Insn 146(l0): point = 180
   Insn 145(l0): point = 182
   Insn 144(l0): point = 184
   Insn 143(l0): point = 186
   Insn 142(l0): point = 188
   Insn 141(l0): point = 190
   Insn 140(l0): point = 192
   Insn 139(l0): point = 194
   Insn 138(l0): point = 196
   Insn 137(l0): point = 198
   Insn 136(l0): point = 200
   Insn 135(l0): point = 202
   Insn 134(l0): point = 204
   Insn 133(l0): point = 206
   Insn 129(l0): point = 208
   Insn 128(l0): point = 210
   Insn 127(l0): point = 212
   Insn 126(l0): point = 214
   Insn 125(l0): point = 216
   Insn 124(l0): point = 218
   Insn 123(l0): point = 220
   Insn 122(l0): point = 222
   Insn 121(l0): point = 224
   Insn 120(l0): point = 226
   Insn 119(l0): point = 228
   Insn 118(l0): point = 230
   Insn 117(l0): point = 232
   Insn 116(l0): point = 234
   Insn 115(l0): point = 236
   Insn 114(l0): point = 238
   Insn 113(l0): point = 240
   Insn 112(l0): point = 242
   Insn 111(l0): point = 244
   Insn 110(l0): point = 246
   Insn 109(l0): point = 248
   Insn 108(l0): point = 250
   Insn 107(l0): point = 252
   Insn 106(l0): point = 254
   Insn 105(l0): point = 256
   Insn 104(l0): point = 258
   Insn 103(l0): point = 260
   Insn 102(l0): point = 262
   Insn 101(l0): point = 264
   Insn 100(l0): point = 266
   Insn 99(l0): point = 268
   Insn 98(l0): point = 270
   Insn 97(l0): point = 272
   Insn 96(l0): point = 274
   Insn 95(l0): point = 276
   Insn 94(l0): point = 278
   Insn 93(l0): point = 280
   Insn 92(l0): point = 282
   Insn 91(l0): point = 284
   Insn 90(l0): point = 286
   Insn 89(l0): point = 288
   Insn 88(l0): point = 290
   Insn 87(l0): point = 292
   Insn 86(l0): point = 294
   Insn 85(l0): point = 296
   Insn 84(l0): point = 298
   Insn 83(l0): point = 300
   Insn 82(l0): point = 302
   Insn 81(l0): point = 304
   Insn 80(l0): point = 306
   Insn 79(l0): point = 308
   Insn 78(l0): point = 310
   Insn 77(l0): point = 312
   Insn 76(l0): point = 314
   Insn 75(l0): point = 316
   Insn 74(l0): point = 318
   Insn 73(l0): point = 320
   Insn 72(l0): point = 322
   Insn 71(l0): point = 324
   Insn 70(l0): point = 326
   Insn 69(l0): point = 328
   Insn 68(l0): point = 330
   Insn 67(l0): point = 332
   Insn 66(l0): point = 334
   Insn 65(l0): point = 336
   Insn 64(l0): point = 338
   Insn 63(l0): point = 340
   Insn 62(l0): point = 342
   Insn 61(l0): point = 344
   Insn 60(l0): point = 346
   Insn 59(l0): point = 348
   Insn 58(l0): point = 350
   Insn 57(l0): point = 352
   Insn 56(l0): point = 354
   Insn 55(l0): point = 356
   Insn 54(l0): point = 358
   Insn 53(l0): point = 360
   Insn 52(l0): point = 362
   Insn 51(l0): point = 364
   Insn 50(l0): point = 366
   Insn 49(l0): point = 368
   Insn 48(l0): point = 370
   Insn 47(l0): point = 372
   Insn 46(l0): point = 374
   Insn 45(l0): point = 376
   Insn 44(l0): point = 378
   Insn 43(l0): point = 380
   Insn 42(l0): point = 382
   Insn 41(l0): point = 384
   Insn 40(l0): point = 386
   Insn 39(l0): point = 388
   Insn 38(l0): point = 390
   Insn 37(l0): point = 392
   Insn 36(l0): point = 394
   Insn 35(l0): point = 396
   Insn 34(l0): point = 398
   Insn 33(l0): point = 400
   Insn 162(l0): point = 403
   Insn 161(l0): point = 405
   Insn 165(l0): point = 408
   Insn 164(l0): point = 410
   Insn 168(l0): point = 413
   Insn 167(l0): point = 415
   Insn 192(l0): point = 418
   Insn 191(l0): point = 420
   Insn 190(l0): point = 422
   Insn 189(l0): point = 424
   Insn 188(l0): point = 426
   Insn 187(l0): point = 428
   Insn 186(l0): point = 430
   Insn 184(l0): point = 432
   Insn 185(l0): point = 434
   Insn 183(l0): point = 436
   Insn 182(l0): point = 438
   Insn 181(l0): point = 440
   Insn 180(l0): point = 442
   Insn 175(l0): point = 445
   Insn 174(l0): point = 447
   Insn 173(l0): point = 449
   Insn 172(l0): point = 451
   Insn 171(l0): point = 453
   Insn 170(l0): point = 455
   Insn 284(l0): point = 458
   Insn 29(l0): point = 460
   Insn 28(l0): point = 462
   Insn 11(l0): point = 465
   Insn 10(l0): point = 467
   Insn 9(l0): point = 469
   Insn 8(l0): point = 471
   Insn 7(l0): point = 473
   Insn 6(l0): point = 475
   Insn 5(l0): point = 477
 a0(r159): [30..31]
 a1(r228): [32..33]
 a2(r158): [32..35]
 a3(r157): [38..39]
 a4(r227): [40..41]
 a5(r156): [40..43]
 a6(r155): [49..50]
 a7(r154): [54..55]
 a8(r153): [56..57]
 a9(r160): [67..69] [62..64]
 a10(r152): [70..71]
 a11(r226): [72..73]
 a12(r151): [74..75]
 a13(r150): [89..94] [81..82]
 a14(r224): [87..92] [83..84]
 a15(r149): [83..104]
 a16(r225): [85..86]
 a17(r223): [95..96]
 a18(r222): [95..98]
 a19(r220): [99..100]
 a20(r221): [101..102]
 a21(r148): [121..124]
 a22(r219): [121..122]
 a23(r147): [128..129]
 a24(r218): [130..131]
 a25(r146): [130..133]
 a26(r145): [139..142]
 a27(r217): [139..140]
 a28(r144): [146..147]
 a29(r216): [148..149]
 a30(r143): [148..151]
 a31(r214): [419..420]
 a32(r142): [419..424]
 a33(r215): [421..422]
 a34(r213): [425..426]
 a35(r212): [425..428]
 a36(r141): [429..430]
 a37(r211): [431..434]
 a38(r208): [437..440]
 a39(r210): [437..438]
 a40(r209): [441..442]
 a41(r140): [448..451]
 a42(r207): [448..449]
 a43(r205): [452..453]
 a44(r206): [454..455]
 a45(r204): [159..160]
 a46(r139): [161..162]
 a47(r203): [163..164]
 a48(r138): [163..166]
 a49(r137): [167..168]
 a50(r135): [167..174]
 a51(r136): [169..170]
 a52(r202): [171..172]
 a53(r134): [175..176]
 a54(r133): [175..180]
 a55(r201): [177..178]
 a56(r132): [181..182]
 a57(r130): [181..188]
 a58(r131): [183..184]
 a59(r200): [185..186]
 a60(r129): [189..190]
 a61(r128): [191..192]
 a62(r126): [191..198]
 a63(r127): [193..194]
 a64(r199): [195..196]
 a65(r198): [199..200]
 a66(r196): [203..204]
 a67(r197): [205..206]
 a68(r125): [205..208]
 a69(r192): [213..218] [209..210]
 a70(r193): [211..212]
 a71(r191): [215..220]
 a72(r190): [223..224]
 a73(r124): [225..226]
 a74(r189): [227..228]
 a75(r123): [227..230]
 a76(r122): [231..232]
 a77(r118): [231..244]
 a78(r121): [233..234]
 a79(r120): [233..238]
 a80(r188): [235..236]
 a81(r119): [239..240]
 a82(r187): [241..242]
 a83(r186): [245..246]
 a84(r185): [245..248]
 a85(r184): [251..252]
 a86(r117): [253..254]
 a87(r183): [255..256]
 a88(r116): [255..258]
 a89(r115): [259..260]
 a90(r111): [259..272]
 a91(r114): [261..262]
 a92(r113): [261..266]
 a93(r182): [263..264]
 a94(r112): [267..268]
 a95(r181): [269..270]
 a96(r180): [273..274]
 a97(r179): [273..276]
 a98(r178): [279..280]
 a99(r110): [281..282]
 a100(r109): [281..286]
 a101(r177): [283..284]
 a102(r108): [287..288]
 a103(r176): [289..290]
 a104(r107): [293..294]
 a105(r106): [299..300]
 a106(r105): [303..304]
 a107(r104): [309..310]
 a108(r103): [313..314]
 a109(r102): [319..320]
 a110(r174): [323..324]
 a111(r101): [325..328]
 a112(r175): [325..326]
 a113(r173): [329..330]
 a114(r100): [329..332]
 a115(r99): [333..334]
 a116(r98): [333..338]
 a117(r172): [335..336]
 a118(r97): [339..340]
 a119(r171): [341..342]
 a120(r168): [345..346]
 a121(r170): [347..348]
 a122(r169): [347..350]
 a123(r96): [353..354]
 a124(r95): [359..360]
 a125(r94): [363..364]
 a126(r93): [369..370]
 a127(r92): [373..374]
 a128(r91): [379..380]
 a129(r90): [383..384]
 a130(r89): [389..390]
 a131(r88): [393..394]
 a132(r87): [399..400]
 a133(r167): [461..462]
 a134(r166): [3..4]
 a135(r165): [9..14]
 a136(r164): [19..24]
 a137(r163): [472..473]
 a138(r162): [476..477]
Compressing live ranges: from 480 to 220 - 45%
Ranges after the compression:
 a0(r159): [6..7]
 a1(r228): [8..9]
 a2(r158): [8..9]
 a3(r157): [10..11]
 a4(r227): [12..13]
 a5(r156): [12..13]
 a6(r155): [14..15]
 a7(r154): [16..17]
 a8(r153): [18..19]
 a9(r160): [20..23]
 a10(r152): [24..25]
 a11(r226): [26..27]
 a12(r151): [28..29]
 a13(r150): [36..37] [30..31]
 a14(r224): [36..37] [32..33]
 a15(r149): [32..43]
 a16(r225): [34..35]
 a17(r223): [38..39]
 a18(r222): [38..39]
 a19(r220): [40..41]
 a20(r221): [42..43]
 a21(r148): [44..45]
 a22(r219): [44..45]
 a23(r147): [46..47]
 a24(r218): [48..49]
 a25(r146): [48..49]
 a26(r145): [50..51]
 a27(r217): [50..51]
 a28(r144): [52..53]
 a29(r216): [54..55]
 a30(r143): [54..55]
 a31(r214): [194..195]
 a32(r142): [194..197]
 a33(r215): [196..197]
 a34(r213): [198..199]
 a35(r212): [198..199]
 a36(r141): [200..201]
 a37(r211): [202..203]
 a38(r208): [204..205]
 a39(r210): [204..205]
 a40(r209): [206..207]
 a41(r140): [208..209]
 a42(r207): [208..209]
 a43(r205): [210..211]
 a44(r206): [212..213]
 a45(r204): [56..57]
 a46(r139): [58..59]
 a47(r203): [60..61]
 a48(r138): [60..61]
 a49(r137): [62..63]
 a50(r135): [62..67]
 a51(r136): [64..65]
 a52(r202): [66..67]
 a53(r134): [68..69]
 a54(r133): [68..71]
 a55(r201): [70..71]
 a56(r132): [72..73]
 a57(r130): [72..77]
 a58(r131): [74..75]
 a59(r200): [76..77]
 a60(r129): [78..79]
 a61(r128): [80..81]
 a62(r126): [80..85]
 a63(r127): [82..83]
 a64(r199): [84..85]
 a65(r198): [86..87]
 a66(r196): [88..89]
 a67(r197): [90..91]
 a68(r125): [90..91]
 a69(r192): [96..97] [92..93]
 a70(r193): [94..95]
 a71(r191): [96..97]
 a72(r190): [98..99]
 a73(r124): [100..101]
 a74(r189): [102..103]
 a75(r123): [102..103]
 a76(r122): [104..105]
 a77(r118): [104..113]
 a78(r121): [106..107]
 a79(r120): [106..109]
 a80(r188): [108..109]
 a81(r119): [110..111]
 a82(r187): [112..113]
 a83(r186): [114..115]
 a84(r185): [114..115]
 a85(r184): [116..117]
 a86(r117): [118..119]
 a87(r183): [120..121]
 a88(r116): [120..121]
 a89(r115): [122..123]
 a90(r111): [122..131]
 a91(r114): [124..125]
 a92(r113): [124..127]
 a93(r182): [126..127]
 a94(r112): [128..129]
 a95(r181): [130..131]
 a96(r180): [132..133]
 a97(r179): [132..133]
 a98(r178): [134..135]
 a99(r110): [136..137]
 a100(r109): [136..139]
 a101(r177): [138..139]
 a102(r108): [140..141]
 a103(r176): [142..143]
 a104(r107): [144..145]
 a105(r106): [146..147]
 a106(r105): [148..149]
 a107(r104): [150..151]
 a108(r103): [152..153]
 a109(r102): [154..155]
 a110(r174): [156..157]
 a111(r101): [158..159]
 a112(r175): [158..159]
 a113(r173): [160..161]
 a114(r100): [160..161]
 a115(r99): [162..163]
 a116(r98): [162..165]
 a117(r172): [164..165]
 a118(r97): [166..167]
 a119(r171): [168..169]
 a120(r168): [170..171]
 a121(r170): [172..173]
 a122(r169): [172..173]
 a123(r96): [174..175]
 a124(r95): [176..177]
 a125(r94): [178..179]
 a126(r93): [180..181]
 a127(r92): [182..183]
 a128(r91): [184..185]
 a129(r90): [186..187]
 a130(r89): [188..189]
 a131(r88): [190..191]
 a132(r87): [192..193]
 a133(r167): [214..215]
 a134(r166): [0..1]
 a135(r165): [2..3]
 a136(r164): [4..5]
 a137(r163): [216..217]
 a138(r162): [218..219]
  pref0:a19(r220)<-hr1@1
  regions=1, blocks=22, points=220
    allocnos=139 (big 0), copies=0, conflicts=0, ranges=142
Disposition:
  132:r87  l0    21  131:r88  l0    21  130:r89  l0    21  129:r90  l0    21
  128:r91  l0    21  127:r92  l0    21  126:r93  l0    21  125:r94  l0    21
  124:r95  l0    21  123:r96  l0    21  118:r97  l0    21  116:r98  l0    22
  115:r99  l0    21  114:r100 l0    21  111:r101 l0    21  109:r102 l0    21
  108:r103 l0    21  107:r104 l0    21  106:r105 l0    21  105:r106 l0    21
  104:r107 l0    21  102:r108 l0    21  100:r109 l0    21   99:r110 l0    22
   90:r111 l0    22   94:r112 l0    21   92:r113 l0    21   91:r114 l0    23
   89:r115 l0    21   88:r116 l0    21   86:r117 l0    21   77:r118 l0    22
   81:r119 l0    21   79:r120 l0    23   78:r121 l0    21   76:r122 l0    21
   75:r123 l0    21   73:r124 l0    21   68:r125 l0     1   62:r126 l0    21
   63:r127 l0    22   61:r128 l0    22   60:r129 l0    21   57:r130 l0    21
   58:r131 l0    22   56:r132 l0    22   54:r133 l0    21   53:r134 l0    22
   50:r135 l0    21   51:r136 l0    22   49:r137 l0    22   48:r138 l0    21
   46:r139 l0    21   41:r140 l0    22   36:r141 l0     0   32:r142 l0     1
   30:r143 l0    21   28:r144 l0    21   26:r145 l0    21   25:r146 l0    21
   23:r147 l0    21   21:r148 l0    21   15:r149 l0     2   13:r150 l0     1
   12:r151 l0     0   10:r152 l0     0    8:r153 l0     0    7:r154 l0     0
    6:r155 l0     0    5:r156 l0    21    3:r157 l0    21    2:r158 l0    21
    0:r159 l0    21    9:r160 l0     0  138:r162 l0    21  137:r163 l0    21
  136:r164 l0     0  135:r165 l0     0  134:r166 l0    21  133:r167 l0    21
  120:r168 l0    21  122:r169 l0    22  121:r170 l0    21  119:r171 l0    21
  117:r172 l0    21  113:r173 l0    22  110:r174 l0    21  112:r175 l0    22
  103:r176 l0    21  101:r177 l0    22   98:r178 l0    21   97:r179 l0    22
   96:r180 l0    21   95:r181 l0    21   93:r182 l0    23   87:r183 l0    22
   85:r184 l0     0   84:r185 l0    22   83:r186 l0    21   82:r187 l0    21
   80:r188 l0    21   74:r189 l0    22   72:r190 l0     0   71:r191 l0     1
   69:r192 l0     0   70:r193 l0     0   66:r196 l0     0   67:r197 l0     0
   65:r198 l0    21   64:r199 l0    22   59:r200 l0    22   55:r201 l0    22
   52:r202 l0    22   47:r203 l0    22   45:r204 l0     0   43:r205 l0     0
   44:r206 l0     0   42:r207 l0    21   38:r208 l0     0   40:r209 l0     0
   39:r210 l0    21   37:r211 l0     0   35:r212 l0     1   34:r213 l0     0
   31:r214 l0     0   33:r215 l0     0   29:r216 l0    22   27:r217 l0    22
   24:r218 l0    22   22:r219 l0    22   19:r220 l0     1   20:r221 l0     1
   18:r222 l0     1   17:r223 l0     0   14:r224 l0     0   16:r225 l0     0
   11:r226 l0     0    4:r227 l0    22    1:r228 l0    22
+++Costs: overall 81, reg 81, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


main

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 21 [xmm0]
;;  ref usage 	r0={16d,3u} r1={16d,2u} r2={14d} r4={16d,2u} r5={19d,5u} r6={1d,21u} r7={1d,34u} r8={13d} r9={13d} r10={13d} r11={13d} r12={13d} r13={13d} r14={13d} r15={13d} r16={1d,20u} r17={38d,10u} r18={13d} r19={13d} r20={1d,114u,1e} r21={22d,16u} r22={14d} r23={14d} r24={14d} r25={14d} r26={14d} r27={14d} r28={14d} r29={13d} r30={13d} r31={13d} r32={13d} r33={13d} r34={13d} r35={13d} r36={13d} r37={14d} r38={14d} r39={13d} r40={13d} r45={13d} r46={13d} r47={13d} r48={13d} r49={13d} r50={13d} r51={13d} r52={13d} r53={13d} r54={13d} r55={13d} r56={13d} r57={13d} r58={13d} r59={13d} r60={13d} r61={13d} r62={13d} r63={13d} r64={13d} r65={13d} r66={13d} r67={13d} r68={13d} r69={13d} r70={13d} r71={13d} r72={13d} r73={13d} r74={13d} r75={13d} r76={13d} r77={13d} r78={13d} r79={13d} r80={13d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u,1e} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,3u,1e} r150={2d,3u,1e} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={2d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,2u,1e} r192={4d,4u} r193={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={4d,4u} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,1u} 
;;    total ref usage 1528{1146d,377u,5e} in 230{217 regular + 13 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 162 163
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SF 162)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [2  S4 A32])) "test1.c":4 127 {*movsf_internal}
     (nil))
(insn 6 5 7 2 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [2 A+0 S4 A32])
        (reg:SF 162)) "test1.c":4 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 162)
        (nil)))
(insn 7 6 8 2 (set (reg:SF 163)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [2  S4 A32])) "test1.c":5 127 {*movsf_internal}
     (nil))
(insn 8 7 9 2 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [2 B+0 S4 A32])
        (reg:SF 163)) "test1.c":5 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 163)
        (nil)))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f84e0b383f0 *.LC1>)) "test1.c":6 81 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "test1.c":6 84 {*movqi_internal}
     (nil))
(call_insn 11 10 272 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f84e0a83f00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "test1.c":6 676 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;;              21 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 164 165 166
(code_label 272 11 12 3 12 (nil) [1 uses])
(note 12 272 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (parallel [
            (set (reg:DI 164)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -8880 [0xffffffffffffdd50])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":7 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 14 13 15 3 (set (reg:DI 1 dx)
        (const_int 1760 [0x6e0])) "test1.c":7 81 {*movdi_internal}
     (nil))
(insn 15 14 16 3 (set (reg:SI 4 si)
        (const_int 32 [0x20])) "test1.c":7 82 {*movsi_internal}
     (nil))
(insn 16 15 17 3 (set (reg:DI 5 di)
        (reg:DI 164)) "test1.c":7 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 164)
        (nil)))
(call_insn 17 16 18 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x7f84e0a7af00 memset>) [0 __builtin_memset S1 A8])
            (const_int 0 [0]))) "test1.c":7 676 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 18 17 19 3 (parallel [
            (set (reg:DI 165)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -7120 [0xffffffffffffe430])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":7 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 19 18 20 3 (set (reg:DI 1 dx)
        (const_int 7040 [0x1b80])) "test1.c":7 81 {*movdi_internal}
     (nil))
(insn 20 19 21 3 (set (reg:SI 4 si)
        (const_int 0 [0])) "test1.c":7 82 {*movsi_internal}
     (nil))
(insn 21 20 22 3 (set (reg:DI 5 di)
        (reg:DI 165)) "test1.c":7 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 165)
        (nil)))
(call_insn 22 21 23 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x7f84e0a7af00 memset>) [0 __builtin_memset S1 A8])
            (const_int 0 [0]))) "test1.c":7 676 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 23 22 24 3 (set (reg:SF 166)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [2  S4 A32])) "test1.c":8 127 {*movsf_internal}
     (nil))
(insn 24 23 282 3 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])
        (reg:SF 166)) "test1.c":8 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 166)
        (nil)))
(jump_insn 282 24 283 3 (set (pc)
        (label_ref 211)) "test1.c":8 659 {jump}
     (nil)
 -> 211)
;;  succ:       14 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 283 282 214)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       14
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 167
(code_label 214 283 27 4 7 (nil) [1 uses])
(note 27 214 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 4 (set (reg:SF 167)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [2  S4 A32])) "test1.c":8 127 {*movsf_internal}
     (nil))
(insn 29 28 284 4 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])
        (reg:SF 167)) "test1.c":8 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 167)
        (nil)))
(jump_insn 284 29 285 4 (set (pc)
        (label_ref 199)) "test1.c":8 659 {jump}
     (nil)
 -> 199)
;;  succ:       12 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 285 284 202)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       12
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 196 197 198 199 200 201 202 203 204
(code_label 202 285 32 5 6 (nil) [1 uses])
(note 32 202 33 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 5 (set (reg:DF 87 [ _1 ])
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32]))) "test1.c":9 154 {*extendsfdf2}
     (nil))
(insn 34 33 35 5 (set (reg:DF 21 xmm0)
        (reg:DF 87 [ _1 ])) "test1.c":9 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 87 [ _1 ])
        (nil)))
(call_insn/u 35 34 36 5 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sin") [flags 0x41]  <function_decl 0x7f84e0a5ee00 sin>) [0 __builtin_sin S1 A8])
            (const_int 0 [0]))) "test1.c":9 676 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 36 35 37 5 (set (reg:DF 88 [ _2 ])
        (reg:DF 21 xmm0)) "test1.c":9 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 37 36 38 5 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [2 c+0 S4 A32])
        (float_truncate:SF (reg:DF 88 [ _2 ]))) "test1.c":9 157 {*truncdfsf_fast_mixed}
     (expr_list:REG_DEAD (reg:DF 88 [ _2 ])
        (nil)))
(insn 38 37 39 5 (set (reg:DF 89 [ _3 ])
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32]))) "test1.c":9 154 {*extendsfdf2}
     (nil))
(insn 39 38 40 5 (set (reg:DF 21 xmm0)
        (reg:DF 89 [ _3 ])) "test1.c":9 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 89 [ _3 ])
        (nil)))
(call_insn/u 40 39 41 5 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("cos") [flags 0x41]  <function_decl 0x7f84e0a2fa00 cos>) [0 __builtin_cos S1 A8])
            (const_int 0 [0]))) "test1.c":9 676 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 41 40 42 5 (set (reg:DF 90 [ _4 ])
        (reg:DF 21 xmm0)) "test1.c":9 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 42 41 43 5 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 d+0 S4 A32])
        (float_truncate:SF (reg:DF 90 [ _4 ]))) "test1.c":9 157 {*truncdfsf_fast_mixed}
     (expr_list:REG_DEAD (reg:DF 90 [ _4 ])
        (nil)))
(insn 43 42 44 5 (set (reg:DF 91 [ _5 ])
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [2 A+0 S4 A32]))) "test1.c":10 154 {*extendsfdf2}
     (nil))
(insn 44 43 45 5 (set (reg:DF 21 xmm0)
        (reg:DF 91 [ _5 ])) "test1.c":10 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 91 [ _5 ])
        (nil)))
(call_insn/u 45 44 46 5 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sin") [flags 0x41]  <function_decl 0x7f84e0a5ee00 sin>) [0 __builtin_sin S1 A8])
            (const_int 0 [0]))) "test1.c":10 676 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 46 45 47 5 (set (reg:DF 92 [ _6 ])
        (reg:DF 21 xmm0)) "test1.c":10 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 47 46 48 5 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [2 e+0 S4 A32])
        (float_truncate:SF (reg:DF 92 [ _6 ]))) "test1.c":9 157 {*truncdfsf_fast_mixed}
     (expr_list:REG_DEAD (reg:DF 92 [ _6 ])
        (nil)))
(insn 48 47 49 5 (set (reg:DF 93 [ _7 ])
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32]))) "test1.c":10 154 {*extendsfdf2}
     (nil))
(insn 49 48 50 5 (set (reg:DF 21 xmm0)
        (reg:DF 93 [ _7 ])) "test1.c":10 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 93 [ _7 ])
        (nil)))
(call_insn/u 50 49 51 5 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sin") [flags 0x41]  <function_decl 0x7f84e0a5ee00 sin>) [0 __builtin_sin S1 A8])
            (const_int 0 [0]))) "test1.c":10 676 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 51 50 52 5 (set (reg:DF 94 [ _8 ])
        (reg:DF 21 xmm0)) "test1.c":10 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 52 51 53 5 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [2 f+0 S4 A32])
        (float_truncate:SF (reg:DF 94 [ _8 ]))) "test1.c":10 157 {*truncdfsf_fast_mixed}
     (expr_list:REG_DEAD (reg:DF 94 [ _8 ])
        (nil)))
(insn 53 52 54 5 (set (reg:DF 95 [ _9 ])
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [2 A+0 S4 A32]))) "test1.c":10 154 {*extendsfdf2}
     (nil))
(insn 54 53 55 5 (set (reg:DF 21 xmm0)
        (reg:DF 95 [ _9 ])) "test1.c":10 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 95 [ _9 ])
        (nil)))
(call_insn/u 55 54 56 5 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("cos") [flags 0x41]  <function_decl 0x7f84e0a2fa00 cos>) [0 __builtin_cos S1 A8])
            (const_int 0 [0]))) "test1.c":10 676 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 56 55 57 5 (set (reg:DF 96 [ _10 ])
        (reg:DF 21 xmm0)) "test1.c":10 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 57 56 58 5 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [2 g+0 S4 A32])
        (float_truncate:SF (reg:DF 96 [ _10 ]))) "test1.c":10 157 {*truncdfsf_fast_mixed}
     (expr_list:REG_DEAD (reg:DF 96 [ _10 ])
        (nil)))
(insn 58 57 59 5 (set (reg:SF 169)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 d+0 S4 A32])) "test1.c":10 127 {*movsf_internal}
     (nil))
(insn 59 58 60 5 (set (reg:SF 170)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [2  S4 A32])) "test1.c":10 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.0e+0 [0x0.8p+2])
        (nil)))
(insn 60 59 61 5 (set (reg:SF 168)
        (plus:SF (reg:SF 169)
            (reg:SF 170))) "test1.c":10 812 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 170)
        (expr_list:REG_DEAD (reg:SF 169)
            (nil))))
(insn 61 60 62 5 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [2 h+0 S4 A32])
        (reg:SF 168)) "test1.c":10 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 168)
        (nil)))
(insn 62 61 63 5 (set (reg:SF 171)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [2 c+0 S4 A32])) "test1.c":10 127 {*movsf_internal}
     (nil))
(insn 63 62 64 5 (set (reg:SF 97 [ _11 ])
        (mult:SF (reg:SF 171)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])) [2 h+0 S4 A32]))) "test1.c":10 812 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 171)
        (nil)))
(insn 64 63 65 5 (set (reg:SF 98 [ _12 ])
        (mult:SF (reg:SF 97 [ _11 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -28 [0xffffffffffffffe4])) [2 e+0 S4 A32]))) "test1.c":11 812 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 97 [ _11 ])
        (nil)))
(insn 65 64 66 5 (set (reg:SF 172)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [2 f+0 S4 A32])) "test1.c":11 127 {*movsf_internal}
     (nil))
(insn 66 65 67 5 (set (reg:SF 99 [ _13 ])
        (mult:SF (reg:SF 172)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -36 [0xffffffffffffffdc])) [2 g+0 S4 A32]))) "test1.c":11 812 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 172)
        (nil)))
(insn 67 66 68 5 (set (reg:SF 100 [ _14 ])
        (plus:SF (reg:SF 98 [ _12 ])
            (reg:SF 99 [ _13 ]))) "test1.c":11 812 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 99 [ _13 ])
        (expr_list:REG_DEAD (reg:SF 98 [ _12 ])
            (nil))))
(insn 68 67 69 5 (set (reg:SF 173)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [2  S4 A32])) "test1.c":11 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e+0 [0x0.ap+3])
        (nil)))
(insn 69 68 70 5 (set (reg:SF 101 [ _15 ])
        (plus:SF (reg:SF 100 [ _14 ])
            (reg:SF 173))) "test1.c":11 812 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 173)
        (expr_list:REG_DEAD (reg:SF 100 [ _14 ])
            (nil))))
(insn 70 69 71 5 (set (reg:SF 175)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [2  S4 A32])) "test1.c":10 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 71 70 72 5 (set (reg:SF 174)
        (div:SF (reg:SF 175)
            (reg:SF 101 [ _15 ]))) "test1.c":10 815 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 175)
        (expr_list:REG_DEAD (reg:SF 101 [ _15 ])
            (nil))))
(insn 72 71 73 5 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [2 D+0 S4 A32])
        (reg:SF 174)) "test1.c":10 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 174)
        (nil)))
(insn 73 72 74 5 (set (reg:DF 102 [ _16 ])
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32]))) "test1.c":11 154 {*extendsfdf2}
     (nil))
(insn 74 73 75 5 (set (reg:DF 21 xmm0)
        (reg:DF 102 [ _16 ])) "test1.c":11 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 102 [ _16 ])
        (nil)))
(call_insn/u 75 74 76 5 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("cos") [flags 0x41]  <function_decl 0x7f84e0a2fa00 cos>) [0 __builtin_cos S1 A8])
            (const_int 0 [0]))) "test1.c":11 676 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 76 75 77 5 (set (reg:DF 103 [ _17 ])
        (reg:DF 21 xmm0)) "test1.c":11 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 77 76 78 5 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [2 l+0 S4 A32])
        (float_truncate:SF (reg:DF 103 [ _17 ]))) "test1.c":11 157 {*truncdfsf_fast_mixed}
     (expr_list:REG_DEAD (reg:DF 103 [ _17 ])
        (nil)))
(insn 78 77 79 5 (set (reg:DF 104 [ _18 ])
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [2 B+0 S4 A32]))) "test1.c":11 154 {*extendsfdf2}
     (nil))
(insn 79 78 80 5 (set (reg:DF 21 xmm0)
        (reg:DF 104 [ _18 ])) "test1.c":11 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 104 [ _18 ])
        (nil)))
(call_insn/u 80 79 81 5 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("cos") [flags 0x41]  <function_decl 0x7f84e0a2fa00 cos>) [0 __builtin_cos S1 A8])
            (const_int 0 [0]))) "test1.c":11 676 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 81 80 82 5 (set (reg:DF 105 [ _19 ])
        (reg:DF 21 xmm0)) "test1.c":11 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 82 81 83 5 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [2 m+0 S4 A32])
        (float_truncate:SF (reg:DF 105 [ _19 ]))) "test1.c":11 157 {*truncdfsf_fast_mixed}
     (expr_list:REG_DEAD (reg:DF 105 [ _19 ])
        (nil)))
(insn 83 82 84 5 (set (reg:DF 106 [ _20 ])
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [2 B+0 S4 A32]))) "test1.c":11 154 {*extendsfdf2}
     (nil))
(insn 84 83 85 5 (set (reg:DF 21 xmm0)
        (reg:DF 106 [ _20 ])) "test1.c":11 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 106 [ _20 ])
        (nil)))
(call_insn/u 85 84 86 5 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sin") [flags 0x41]  <function_decl 0x7f84e0a5ee00 sin>) [0 __builtin_sin S1 A8])
            (const_int 0 [0]))) "test1.c":11 676 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 86 85 87 5 (set (reg:DF 107 [ _21 ])
        (reg:DF 21 xmm0)) "test1.c":11 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 87 86 88 5 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [2 n+0 S4 A32])
        (float_truncate:SF (reg:DF 107 [ _21 ]))) "test1.c":11 157 {*truncdfsf_fast_mixed}
     (expr_list:REG_DEAD (reg:DF 107 [ _21 ])
        (nil)))
(insn 88 87 89 5 (set (reg:SF 176)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [2 c+0 S4 A32])) "test1.c":12 127 {*movsf_internal}
     (nil))
(insn 89 88 90 5 (set (reg:SF 108 [ _22 ])
        (mult:SF (reg:SF 176)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])) [2 h+0 S4 A32]))) "test1.c":12 812 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 176)
        (nil)))
(insn 90 89 91 5 (set (reg:SF 109 [ _23 ])
        (mult:SF (reg:SF 108 [ _22 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -36 [0xffffffffffffffdc])) [2 g+0 S4 A32]))) "test1.c":12 812 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 108 [ _22 ])
        (nil)))
(insn 91 90 92 5 (set (reg:SF 177)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [2 f+0 S4 A32])) "test1.c":12 127 {*movsf_internal}
     (nil))
(insn 92 91 93 5 (set (reg:SF 110 [ _24 ])
        (mult:SF (reg:SF 177)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -28 [0xffffffffffffffe4])) [2 e+0 S4 A32]))) "test1.c":12 812 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 177)
        (nil)))
(insn 93 92 94 5 (set (reg:SF 178)
        (minus:SF (reg:SF 109 [ _23 ])
            (reg:SF 110 [ _24 ]))) "test1.c":12 815 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 110 [ _24 ])
        (expr_list:REG_DEAD (reg:SF 109 [ _23 ])
            (nil))))
(insn 94 93 95 5 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -60 [0xffffffffffffffc4])) [2 t+0 S4 A32])
        (reg:SF 178)) "test1.c":12 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 178)
        (nil)))
(insn 95 94 96 5 (set (reg:SF 179)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [2 D+0 S4 A32])) "test1.c":12 127 {*movsf_internal}
     (nil))
(insn 96 95 97 5 (set (reg:SF 180)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [2  S4 A32])) "test1.c":12 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.0e+1 [0x0.fp+5])
        (nil)))
(insn 97 96 98 5 (set (reg:SF 111 [ _25 ])
        (mult:SF (reg:SF 179)
            (reg:SF 180))) "test1.c":12 812 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 180)
        (expr_list:REG_DEAD (reg:SF 179)
            (nil))))
(insn 98 97 99 5 (set (reg:SF 181)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [2 l+0 S4 A32])) "test1.c":13 127 {*movsf_internal}
     (nil))
(insn 99 98 100 5 (set (reg:SF 112 [ _26 ])
        (mult:SF (reg:SF 181)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])) [2 h+0 S4 A32]))) "test1.c":13 812 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 181)
        (nil)))
(insn 100 99 101 5 (set (reg:SF 113 [ _27 ])
        (mult:SF (reg:SF 112 [ _26 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -52 [0xffffffffffffffcc])) [2 m+0 S4 A32]))) "test1.c":13 812 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 112 [ _26 ])
        (nil)))
(insn 101 100 102 5 (set (reg:SF 182)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -60 [0xffffffffffffffc4])) [2 t+0 S4 A32])) "test1.c":13 127 {*movsf_internal}
     (nil))
(insn 102 101 103 5 (set (reg:SF 114 [ _28 ])
        (mult:SF (reg:SF 182)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -56 [0xffffffffffffffc8])) [2 n+0 S4 A32]))) "test1.c":13 812 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 182)
        (nil)))
(insn 103 102 104 5 (set (reg:SF 115 [ _29 ])
        (minus:SF (reg:SF 113 [ _27 ])
            (reg:SF 114 [ _28 ]))) "test1.c":13 815 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 114 [ _28 ])
        (expr_list:REG_DEAD (reg:SF 113 [ _27 ])
            (nil))))
(insn 104 103 105 5 (set (reg:SF 116 [ _30 ])
        (mult:SF (reg:SF 111 [ _25 ])
            (reg:SF 115 [ _29 ]))) "test1.c":12 812 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 115 [ _29 ])
        (expr_list:REG_DEAD (reg:SF 111 [ _25 ])
            (nil))))
(insn 105 104 106 5 (set (reg:SF 183)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [2  S4 A32])) "test1.c":12 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 4.0e+1 [0x0.ap+6])
        (nil)))
(insn 106 105 107 5 (set (reg:SF 117 [ _31 ])
        (plus:SF (reg:SF 116 [ _30 ])
            (reg:SF 183))) "test1.c":12 812 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 183)
        (expr_list:REG_DEAD (reg:SF 116 [ _30 ])
            (nil))))
(insn 107 106 108 5 (set (reg:SI 184)
        (fix:SI (reg:SF 117 [ _31 ]))) "test1.c":12 170 {fix_truncsfsi_sse}
     (expr_list:REG_DEAD (reg:SF 117 [ _31 ])
        (nil)))
(insn 108 107 109 5 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [1 x+0 S4 A32])
        (reg:SI 184)) "test1.c":12 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 184)
        (nil)))
(insn 109 108 110 5 (set (reg:SF 185)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [2 D+0 S4 A32])) "test1.c":13 127 {*movsf_internal}
     (nil))
(insn 110 109 111 5 (set (reg:SF 186)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [2  S4 A32])) "test1.c":13 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.5e+1 [0x0.fp+4])
        (nil)))
(insn 111 110 112 5 (set (reg:SF 118 [ _32 ])
        (mult:SF (reg:SF 185)
            (reg:SF 186))) "test1.c":13 812 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 186)
        (expr_list:REG_DEAD (reg:SF 185)
            (nil))))
(insn 112 111 113 5 (set (reg:SF 187)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [2 l+0 S4 A32])) "test1.c":13 127 {*movsf_internal}
     (nil))
(insn 113 112 114 5 (set (reg:SF 119 [ _33 ])
        (mult:SF (reg:SF 187)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])) [2 h+0 S4 A32]))) "test1.c":13 812 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 187)
        (nil)))
(insn 114 113 115 5 (set (reg:SF 120 [ _34 ])
        (mult:SF (reg:SF 119 [ _33 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -56 [0xffffffffffffffc8])) [2 n+0 S4 A32]))) "test1.c":13 812 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 119 [ _33 ])
        (nil)))
(insn 115 114 116 5 (set (reg:SF 188)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -60 [0xffffffffffffffc4])) [2 t+0 S4 A32])) "test1.c":14 127 {*movsf_internal}
     (nil))
(insn 116 115 117 5 (set (reg:SF 121 [ _35 ])
        (mult:SF (reg:SF 188)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -52 [0xffffffffffffffcc])) [2 m+0 S4 A32]))) "test1.c":14 812 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 188)
        (nil)))
(insn 117 116 118 5 (set (reg:SF 122 [ _36 ])
        (plus:SF (reg:SF 120 [ _34 ])
            (reg:SF 121 [ _35 ]))) "test1.c":14 812 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 121 [ _35 ])
        (expr_list:REG_DEAD (reg:SF 120 [ _34 ])
            (nil))))
(insn 118 117 119 5 (set (reg:SF 123 [ _37 ])
        (mult:SF (reg:SF 118 [ _32 ])
            (reg:SF 122 [ _36 ]))) "test1.c":13 812 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 122 [ _36 ])
        (expr_list:REG_DEAD (reg:SF 118 [ _32 ])
            (nil))))
(insn 119 118 120 5 (set (reg:SF 189)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [2  S4 A32])) "test1.c":13 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.2e+1 [0x0.cp+4])
        (nil)))
(insn 120 119 121 5 (set (reg:SF 124 [ _38 ])
        (plus:SF (reg:SF 123 [ _37 ])
            (reg:SF 189))) "test1.c":13 812 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 189)
        (expr_list:REG_DEAD (reg:SF 123 [ _37 ])
            (nil))))
(insn 121 120 122 5 (set (reg:SI 190)
        (fix:SI (reg:SF 124 [ _38 ]))) "test1.c":13 170 {fix_truncsfsi_sse}
     (expr_list:REG_DEAD (reg:SF 124 [ _38 ])
        (nil)))
(insn 122 121 123 5 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -68 [0xffffffffffffffbc])) [1 y+0 S4 A32])
        (reg:SI 190)) "test1.c":13 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 190)
        (nil)))
(insn 123 122 124 5 (set (reg:SI 191)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -68 [0xffffffffffffffbc])) [1 y+0 S4 A32])) "test1.c":14 82 {*movsi_internal}
     (nil))
(insn 124 123 125 5 (set (reg:SI 192)
        (reg:SI 191)) "test1.c":14 82 {*movsi_internal}
     (nil))
(insn 125 124 126 5 (parallel [
            (set (reg:SI 192)
                (ashift:SI (reg:SI 192)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":14 521 {*ashlsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 126 125 127 5 (parallel [
            (set (reg:SI 192)
                (plus:SI (reg:SI 192)
                    (reg:SI 191)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":14 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 191)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:SI (reg:SI 191)
                    (const_int 5 [0x5]))
                (nil)))))
(insn 127 126 128 5 (parallel [
            (set (reg:SI 193)
                (ashift:SI (reg:SI 192)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":14 521 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 192)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 128 127 129 5 (set (reg:SI 192)
        (reg:SI 193)) "test1.c":14 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 193)
        (nil)))
(insn 129 128 133 5 (set (reg:SI 125 [ _39 ])
        (reg:SI 192)) "test1.c":14 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 192)
        (nil)))
(insn 133 129 134 5 (set (reg:SI 197)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [1 x+0 S4 A32])) "test1.c":14 82 {*movsi_internal}
     (nil))
(insn 134 133 135 5 (parallel [
            (set (reg:SI 196)
                (plus:SI (reg:SI 125 [ _39 ])
                    (reg:SI 197)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":14 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 197)
        (expr_list:REG_DEAD (reg:SI 125 [ _39 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (reg:SI 125 [ _39 ])
                        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                                (const_int -64 [0xffffffffffffffc0])) [1 x+0 S4 A32]))
                    (nil))))))
(insn 135 134 136 5 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [1 o+0 S4 A32])
        (reg:SI 196)) "test1.c":14 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 196)
        (nil)))
(insn 136 135 137 5 (set (reg:SF 198)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [2 f+0 S4 A32])) "test1.c":14 127 {*movsf_internal}
     (nil))
(insn 137 136 138 5 (set (reg:SF 126 [ _40 ])
        (mult:SF (reg:SF 198)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -28 [0xffffffffffffffe4])) [2 e+0 S4 A32]))) "test1.c":14 812 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 198)
        (nil)))
(insn 138 137 139 5 (set (reg:SF 199)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [2 c+0 S4 A32])) "test1.c":14 127 {*movsf_internal}
     (nil))
(insn 139 138 140 5 (set (reg:SF 127 [ _41 ])
        (mult:SF (reg:SF 199)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])) [2 d+0 S4 A32]))) "test1.c":14 812 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 199)
        (nil)))
(insn 140 139 141 5 (set (reg:SF 128 [ _42 ])
        (mult:SF (reg:SF 127 [ _41 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -36 [0xffffffffffffffdc])) [2 g+0 S4 A32]))) "test1.c":14 812 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 127 [ _41 ])
        (nil)))
(insn 141 140 142 5 (set (reg:SF 129 [ _43 ])
        (minus:SF (reg:SF 126 [ _40 ])
            (reg:SF 128 [ _42 ]))) "test1.c":14 815 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 128 [ _42 ])
        (expr_list:REG_DEAD (reg:SF 126 [ _40 ])
            (nil))))
(insn 142 141 143 5 (set (reg:SF 130 [ _44 ])
        (mult:SF (reg:SF 129 [ _43 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -52 [0xffffffffffffffcc])) [2 m+0 S4 A32]))) "test1.c":15 812 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 129 [ _43 ])
        (nil)))
(insn 143 142 144 5 (set (reg:SF 200)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [2 c+0 S4 A32])) "test1.c":15 127 {*movsf_internal}
     (nil))
(insn 144 143 145 5 (set (reg:SF 131 [ _45 ])
        (mult:SF (reg:SF 200)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])) [2 d+0 S4 A32]))) "test1.c":15 812 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 200)
        (nil)))
(insn 145 144 146 5 (set (reg:SF 132 [ _46 ])
        (mult:SF (reg:SF 131 [ _45 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -28 [0xffffffffffffffe4])) [2 e+0 S4 A32]))) "test1.c":15 812 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 131 [ _45 ])
        (nil)))
(insn 146 145 147 5 (set (reg:SF 133 [ _47 ])
        (minus:SF (reg:SF 130 [ _44 ])
            (reg:SF 132 [ _46 ]))) "test1.c":15 815 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 132 [ _46 ])
        (expr_list:REG_DEAD (reg:SF 130 [ _44 ])
            (nil))))
(insn 147 146 148 5 (set (reg:SF 201)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [2 f+0 S4 A32])) "test1.c":15 127 {*movsf_internal}
     (nil))
(insn 148 147 149 5 (set (reg:SF 134 [ _48 ])
        (mult:SF (reg:SF 201)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -36 [0xffffffffffffffdc])) [2 g+0 S4 A32]))) "test1.c":15 812 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 201)
        (nil)))
(insn 149 148 150 5 (set (reg:SF 135 [ _49 ])
        (minus:SF (reg:SF 133 [ _47 ])
            (reg:SF 134 [ _48 ]))) "test1.c":15 815 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 134 [ _48 ])
        (expr_list:REG_DEAD (reg:SF 133 [ _47 ])
            (nil))))
(insn 150 149 151 5 (set (reg:SF 202)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [2 l+0 S4 A32])) "test1.c":15 127 {*movsf_internal}
     (nil))
(insn 151 150 152 5 (set (reg:SF 136 [ _50 ])
        (mult:SF (reg:SF 202)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])) [2 d+0 S4 A32]))) "test1.c":15 812 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 202)
        (nil)))
(insn 152 151 153 5 (set (reg:SF 137 [ _51 ])
        (mult:SF (reg:SF 136 [ _50 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -56 [0xffffffffffffffc8])) [2 n+0 S4 A32]))) "test1.c":15 812 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 136 [ _50 ])
        (nil)))
(insn 153 152 154 5 (set (reg:SF 138 [ _52 ])
        (minus:SF (reg:SF 135 [ _49 ])
            (reg:SF 137 [ _51 ]))) "test1.c":15 815 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 137 [ _51 ])
        (expr_list:REG_DEAD (reg:SF 135 [ _49 ])
            (nil))))
(insn 154 153 155 5 (set (reg:SF 203)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [2  S4 A32])) "test1.c":14 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 8.0e+0 [0x0.8p+4])
        (nil)))
(insn 155 154 156 5 (set (reg:SF 139 [ _53 ])
        (mult:SF (reg:SF 138 [ _52 ])
            (reg:SF 203))) "test1.c":14 812 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 203)
        (expr_list:REG_DEAD (reg:SF 138 [ _52 ])
            (nil))))
(insn 156 155 157 5 (set (reg:SI 204)
        (fix:SI (reg:SF 139 [ _53 ]))) "test1.c":14 170 {fix_truncsfsi_sse}
     (expr_list:REG_DEAD (reg:SF 139 [ _53 ])
        (nil)))
(insn 157 156 158 5 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [1 N+0 S4 A32])
        (reg:SI 204)) "test1.c":14 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 204)
        (nil)))
(insn 158 157 159 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -68 [0xffffffffffffffbc])) [1 y+0 S4 A32])
            (const_int 21 [0x15]))) "test1.c":15 7 {*cmpsi_1}
     (nil))
(jump_insn 159 158 160 5 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 193)
            (pc))) "test1.c":15 627 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 193)
;;  succ:       6 (FALLTHRU)
;;              11
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 160 159 161 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 161 160 162 6 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -68 [0xffffffffffffffbc])) [1 y+0 S4 A32])
            (const_int 0 [0]))) "test1.c":15 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 162 161 163 6 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 193)
            (pc))) "test1.c":15 627 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (nil))
 -> 193)
;;  succ:       7 (FALLTHRU)
;;              11
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 163 162 164 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 164 163 165 7 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])) [1 x+0 S4 A32])
            (const_int 0 [0]))) "test1.c":16 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 165 164 166 7 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 193)
            (pc))) "test1.c":16 627 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (nil))
 -> 193)
;;  succ:       8 (FALLTHRU)
;;              11
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 166 165 167 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 167 166 168 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])) [1 x+0 S4 A32])
            (const_int 79 [0x4f]))) "test1.c":16 7 {*cmpsi_1}
     (nil))
(jump_insn 168 167 169 8 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 193)
            (pc))) "test1.c":16 627 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 193)
;;  succ:       9 (FALLTHRU)
;;              11
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 140 205 206 207
(note 169 168 170 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 170 169 171 9 (set (reg:SI 206)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [1 o+0 S4 A32])) "test1.c":16 82 {*movsi_internal}
     (nil))
(insn 171 170 172 9 (set (reg:DI 205)
        (sign_extend:DI (reg:SI 206))) "test1.c":16 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 206)
        (nil)))
(insn 172 171 173 9 (set (reg:SF 140 [ _54 ])
        (mem:SF (plus:DI (plus:DI (mult:DI (reg:DI 205)
                        (const_int 4 [0x4]))
                    (reg/f:DI 20 frame))
                (const_int -7120 [0xffffffffffffe430])) [2 z S4 A32])) "test1.c":16 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:DI 205)
        (nil)))
(insn 173 172 174 9 (set (reg:SF 207)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [2 D+0 S4 A32])) "test1.c":16 127 {*movsf_internal}
     (nil))
(insn 174 173 175 9 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 207)
            (reg:SF 140 [ _54 ]))) "test1.c":16 51 {*cmpiusf}
     (expr_list:REG_DEAD (reg:SF 207)
        (expr_list:REG_DEAD (reg:SF 140 [ _54 ])
            (nil))))
(jump_insn 175 174 179 9 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 193)
            (pc))) "test1.c":16 627 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 193)
;;  succ:       10 (FALLTHRU)
;;              11
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 141 142 208 209 210 211 212 213 214 215
(note 179 175 180 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 180 179 181 10 (set (reg:SI 209)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [1 o+0 S4 A32])) "test1.c":16 82 {*movsi_internal}
     (nil))
(insn 181 180 182 10 (set (reg:DI 208)
        (sign_extend:DI (reg:SI 209))) "test1.c":16 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 209)
        (nil)))
(insn 182 181 183 10 (set (reg:SF 210)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [2 D+0 S4 A32])) "test1.c":16 127 {*movsf_internal}
     (nil))
(insn 183 182 185 10 (set (mem:SF (plus:DI (plus:DI (mult:DI (reg:DI 208)
                        (const_int 4 [0x4]))
                    (reg/f:DI 20 frame))
                (const_int -7120 [0xffffffffffffe430])) [2 z S4 A32])
        (reg:SF 210)) "test1.c":16 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 210)
        (expr_list:REG_DEAD (reg:DI 208)
            (nil))))
(insn 185 183 184 10 (set (reg:SI 211)
        (const_int 0 [0])) "test1.c":17 82 {*movsi_internal}
     (nil))
(insn 184 185 186 10 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -76 [0xffffffffffffffb4])) [1 N+0 S4 A32])
            (const_int 0 [0]))) "test1.c":17 3 {*cmpsi_ccno_1}
     (nil))
(insn 186 184 187 10 (set (reg:SI 141 [ _55 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -76 [0xffffffffffffffb4])) [1 N+0 S4 A32])
            (reg:SI 211))) "test1.c":17 976 {*movsicc_noc}
     (expr_list:REG_DEAD (reg:SI 211)
        (expr_list:REG_DEAD (reg:CCGOC 17 flags)
            (nil))))
(insn 187 186 188 10 (set (reg:DI 212)
        (sign_extend:DI (reg:SI 141 [ _55 ]))) "test1.c":17 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 141 [ _55 ])
        (nil)))
(insn 188 187 189 10 (set (reg:DI 213)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f84e0b38480 *.LC10>)) "test1.c":17 81 {*movdi_internal}
     (nil))
(insn 189 188 190 10 (set (reg:QI 142 [ _56 ])
        (mem/u/j:QI (plus:DI (reg:DI 212)
                (reg:DI 213)) [0  S1 A8])) "test1.c":17 84 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 213)
        (expr_list:REG_DEAD (reg:DI 212)
            (nil))))
(insn 190 189 191 10 (set (reg:SI 215)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [1 o+0 S4 A32])) "test1.c":16 82 {*movsi_internal}
     (nil))
(insn 191 190 192 10 (set (reg:DI 214)
        (sign_extend:DI (reg:SI 215))) "test1.c":16 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 215)
        (nil)))
(insn 192 191 193 10 (set (mem/j:QI (plus:DI (plus:DI (reg/f:DI 20 frame)
                    (reg:DI 214))
                (const_int -8880 [0xffffffffffffdd50])) [0 b S1 A8])
        (reg:QI 142 [ _56 ])) "test1.c":16 84 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 214)
        (expr_list:REG_DEAD (reg:QI 142 [ _56 ])
            (nil))))
;;  succ:       11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       5
;;              6
;;              7
;;              8
;;              10 (FALLTHRU)
;;              9
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 143 144 216
(code_label 193 192 194 11 4 (nil) [5 uses])
(note 194 193 195 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 195 194 196 11 (set (reg:DF 143 [ _57 ])
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32]))) "test1.c":9 154 {*extendsfdf2}
     (nil))
(insn 196 195 197 11 (set (reg:DF 216)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [3  S8 A64])) "test1.c":9 126 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 2.0000000000000000416333634234433702658861875534057617e-2 [0x0.a3d70a3d70a3d8p-5])
        (nil)))
(insn 197 196 198 11 (set (reg:DF 144 [ _58 ])
        (plus:DF (reg:DF 143 [ _57 ])
            (reg:DF 216))) "test1.c":9 813 {*fop_df_comm}
     (expr_list:REG_DEAD (reg:DF 216)
        (expr_list:REG_DEAD (reg:DF 143 [ _57 ])
            (nil))))
(insn 198 197 199 11 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])
        (float_truncate:SF (reg:DF 144 [ _58 ]))) "test1.c":9 157 {*truncdfsf_fast_mixed}
     (expr_list:REG_DEAD (reg:DF 144 [ _58 ])
        (nil)))
;;  succ:       12 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       11 (FALLTHRU,DFS_BACK)
;;              4 [100.0%] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 145 217
(code_label 199 198 200 12 3 (nil) [1 uses])
(note 200 199 201 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 201 200 203 12 (set (reg:DF 145 [ _59 ])
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32]))) "test1.c":9 154 {*extendsfdf2}
     (nil))
(insn 203 201 204 12 (set (reg:DF 217)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [3  S8 A64])) "test1.c":8 126 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 6.28000000000000024868995751603506505489349365234375e+0 [0x0.c8f5c28f5c28f8p+3])
        (nil)))
(insn 204 203 205 12 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 217)
            (reg:DF 145 [ _59 ]))) "test1.c":8 52 {*cmpiudf}
     (expr_list:REG_DEAD (reg:DF 217)
        (expr_list:REG_DEAD (reg:DF 145 [ _59 ])
            (nil))))
(jump_insn 205 204 206 12 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 202)
            (pc))) "test1.c":8 627 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 202)
;;  succ:       5
;;              13 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (RTL)
;;  pred:       12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 146 147 218
(note 206 205 207 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 207 206 208 13 (set (reg:DF 146 [ _60 ])
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32]))) "test1.c":8 154 {*extendsfdf2}
     (nil))
(insn 208 207 209 13 (set (reg:DF 218)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC13") [flags 0x2]) [3  S8 A64])) "test1.c":8 126 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 7.0000000000000006661338147750939242541790008544921875e-2 [0x0.8f5c28f5c28f6p-3])
        (nil)))
(insn 209 208 210 13 (set (reg:DF 147 [ _61 ])
        (plus:DF (reg:DF 146 [ _60 ])
            (reg:DF 218))) "test1.c":8 813 {*fop_df_comm}
     (expr_list:REG_DEAD (reg:DF 218)
        (expr_list:REG_DEAD (reg:DF 146 [ _60 ])
            (nil))))
(insn 210 209 211 13 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])
        (float_truncate:SF (reg:DF 147 [ _61 ]))) "test1.c":8 157 {*truncdfsf_fast_mixed}
     (expr_list:REG_DEAD (reg:DF 147 [ _61 ])
        (nil)))
;;  succ:       14 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (RTL)
;;  pred:       13 (FALLTHRU,DFS_BACK)
;;              3 [100.0%] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 148 219
(code_label 211 210 212 14 2 (nil) [1 uses])
(note 212 211 213 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 213 212 215 14 (set (reg:DF 148 [ _62 ])
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32]))) "test1.c":8 154 {*extendsfdf2}
     (nil))
(insn 215 213 216 14 (set (reg:DF 219)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [3  S8 A64])) "test1.c":8 126 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 6.28000000000000024868995751603506505489349365234375e+0 [0x0.c8f5c28f5c28f8p+3])
        (nil)))
(insn 216 215 217 14 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 219)
            (reg:DF 148 [ _62 ]))) "test1.c":8 52 {*cmpiudf}
     (expr_list:REG_DEAD (reg:DF 219)
        (expr_list:REG_DEAD (reg:DF 148 [ _62 ])
            (nil))))
(jump_insn 217 216 218 14 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 214)
            (pc))) "test1.c":8 627 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 214)
;;  succ:       4
;;              15 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (RTL)
;;  pred:       14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 218 217 219 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 219 218 220 15 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7f84e0b38510 *.LC14>)) "test1.c":18 81 {*movdi_internal}
     (nil))
(insn 220 219 221 15 (set (reg:QI 0 ax)
        (const_int 0 [0])) "test1.c":18 84 {*movqi_internal}
     (nil))
(call_insn 221 220 222 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f84e0a83f00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "test1.c":18 676 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 222 221 286 15 (set (mem/c:SI (symbol_ref:DI ("k") [flags 0x2]  <var_decl 0x7f84e273ae10 k>) [1 k+0 S4 A32])
        (const_int 0 [0])) "test1.c":18 82 {*movsi_internal}
     (nil))
(jump_insn 286 222 287 15 (set (pc)
        (label_ref 257)) "test1.c":18 659 {jump}
     (nil)
 -> 257)
;;  succ:       20 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 287 286 260)
;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (RTL)
;;  pred:       20
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 149 150 220 221 222 223 224 225
(code_label 260 287 225 16 11 (nil) [1 uses])
(note 225 260 226 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 226 225 227 16 (set (reg:SI 149 [ k.1_63 ])
        (mem/c:SI (symbol_ref:DI ("k") [flags 0x2]  <var_decl 0x7f84e273ae10 k>) [1 k+0 S4 A32])) "test1.c":19 82 {*movsi_internal}
     (nil))
(insn 227 226 228 16 (set (reg:SI 221)
        (const_int 1717986919 [0x66666667])) "test1.c":19 82 {*movsi_internal}
     (nil))
(insn 228 227 229 16 (parallel [
            (set (reg:SI 220)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 149 [ k.1_63 ]))
                            (sign_extend:DI (reg:SI 221)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":19 365 {*smulsi3_highpart_1}
     (expr_list:REG_DEAD (reg:SI 221)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 229 228 230 16 (parallel [
            (set (reg:SI 222)
                (ashiftrt:SI (reg:SI 220)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":19 555 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 220)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 230 229 231 16 (parallel [
            (set (reg:SI 223)
                (ashiftrt:SI (reg:SI 149 [ k.1_63 ])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":19 549 {ashrsi3_cvt}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 231 230 232 16 (parallel [
            (set (reg:SI 150 [ _64 ])
                (minus:SI (reg:SI 222)
                    (reg:SI 223)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":19 273 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 223)
        (expr_list:REG_DEAD (reg:SI 222)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (div:SI (reg:SI 149 [ k.1_63 ])
                        (const_int 80 [0x50]))
                    (nil))))))
(insn 232 231 233 16 (set (reg:SI 224)
        (reg:SI 150 [ _64 ])) "test1.c":19 82 {*movsi_internal}
     (nil))
(insn 233 232 234 16 (parallel [
            (set (reg:SI 224)
                (ashift:SI (reg:SI 224)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":19 521 {*ashlsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 234 233 235 16 (parallel [
            (set (reg:SI 224)
                (plus:SI (reg:SI 224)
                    (reg:SI 150 [ _64 ])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":19 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 150 [ _64 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:SI (reg:SI 150 [ _64 ])
                    (const_int 5 [0x5]))
                (nil)))))
(insn 235 234 236 16 (parallel [
            (set (reg:SI 225)
                (ashift:SI (reg:SI 224)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":19 521 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 224)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 236 235 237 16 (set (reg:SI 224)
        (reg:SI 225)) "test1.c":19 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 225)
        (nil)))
(insn 237 236 238 16 (parallel [
            (set (reg:SI 150 [ _64 ])
                (minus:SI (reg:SI 149 [ k.1_63 ])
                    (reg:SI 224)))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":19 273 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 224)
        (expr_list:REG_DEAD (reg:SI 149 [ k.1_63 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 238 237 239 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 150 [ _64 ])
            (const_int 0 [0]))) "test1.c":19 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 150 [ _64 ])
        (nil)))
(jump_insn 239 238 240 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 247)
            (pc))) "test1.c":19 627 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 247)
;;  succ:       17 (FALLTHRU)
;;              18
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (RTL)
;;  pred:       16 (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 151 152 160 226
(note 240 239 241 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 241 240 242 17 (set (reg:SI 151 [ k.2_65 ])
        (mem/c:SI (symbol_ref:DI ("k") [flags 0x2]  <var_decl 0x7f84e273ae10 k>) [1 k+0 S4 A32])) "test1.c":19 82 {*movsi_internal}
     (nil))
(insn 242 241 243 17 (set (reg:DI 226)
        (sign_extend:DI (reg:SI 151 [ k.2_65 ]))) "test1.c":19 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 151 [ k.2_65 ])
        (nil)))
(insn 243 242 244 17 (set (reg:QI 152 [ _66 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 20 frame)
                    (reg:DI 226))
                (const_int -8880 [0xffffffffffffdd50])) [0 b S1 A8])) "test1.c":19 84 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 226)
        (nil)))
(insn 244 243 288 17 (set (reg:SI 160 [ iftmp.0_78 ])
        (sign_extend:SI (reg:QI 152 [ _66 ]))) "test1.c":19 151 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 152 [ _66 ])
        (nil)))
(jump_insn 288 244 289 17 (set (pc)
        (label_ref 250)) 659 {jump}
     (nil)
 -> 250)
;;  succ:       19 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 160

(barrier 289 288 247)
;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (RTL)
;;  pred:       16
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 160
(code_label 247 289 248 18 9 (nil) [1 uses])
(note 248 247 249 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 249 248 250 18 (set (reg:SI 160 [ iftmp.0_78 ])
        (const_int 10 [0xa])) "test1.c":19 82 {*movsi_internal}
     (nil))
;;  succ:       19 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 160

;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (RTL)
;;  pred:       18 (FALLTHRU)
;;              17 [100.0%] 
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 160
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 160
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 153 154
(code_label 250 249 251 19 10 (nil) [1 uses])
(note 251 250 252 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 252 251 253 19 (set (reg:SI 5 di)
        (reg:SI 160 [ iftmp.0_78 ])) "test1.c":19 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 160 [ iftmp.0_78 ])
        (nil)))
(call_insn 253 252 254 19 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7f84e0a84300 putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) "test1.c":19 676 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 254 253 255 19 (set (reg:SI 153 [ k.3_67 ])
        (mem/c:SI (symbol_ref:DI ("k") [flags 0x2]  <var_decl 0x7f84e273ae10 k>) [1 k+0 S4 A32])) "test1.c":18 82 {*movsi_internal}
     (nil))
(insn 255 254 256 19 (parallel [
            (set (reg:SI 154 [ _68 ])
                (plus:SI (reg:SI 153 [ k.3_67 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test1.c":18 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 153 [ k.3_67 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 256 255 257 19 (set (mem/c:SI (symbol_ref:DI ("k") [flags 0x2]  <var_decl 0x7f84e273ae10 k>) [1 k+0 S4 A32])
        (reg:SI 154 [ _68 ])) "test1.c":18 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 154 [ _68 ])
        (nil)))
;;  succ:       20 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (RTL)
;;  pred:       19 (FALLTHRU,DFS_BACK)
;;              15 [100.0%] 
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 155
(code_label 257 256 258 20 8 (nil) [1 uses])
(note 258 257 259 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 259 258 261 20 (set (reg:SI 155 [ k.4_69 ])
        (mem/c:SI (symbol_ref:DI ("k") [flags 0x2]  <var_decl 0x7f84e273ae10 k>) [1 k+0 S4 A32])) "test1.c":18 82 {*movsi_internal}
     (nil))
(insn 261 259 262 20 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 155 [ k.4_69 ])
            (const_int 1760 [0x6e0]))) "test1.c":18 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 155 [ k.4_69 ])
        (nil)))
(jump_insn 262 261 263 20 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 260)
            (pc))) "test1.c":18 627 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 260)
;;  succ:       16
;;              21 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 1, flags: (RTL)
;;  pred:       20 (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 156 157 158 159 227 228
(note 263 262 264 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 264 263 265 21 (set (reg:DF 156 [ _70 ])
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [2 A+0 S4 A32]))) "test1.c":19 154 {*extendsfdf2}
     (nil))
(insn 265 264 266 21 (set (reg:DF 227)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC15") [flags 0x2]) [3  S8 A64])) "test1.c":19 126 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 4.0000000000000000832667268468867405317723751068115234e-2 [0x0.a3d70a3d70a3d8p-4])
        (nil)))
(insn 266 265 267 21 (set (reg:DF 157 [ _71 ])
        (plus:DF (reg:DF 156 [ _70 ])
            (reg:DF 227))) "test1.c":19 813 {*fop_df_comm}
     (expr_list:REG_DEAD (reg:DF 227)
        (expr_list:REG_DEAD (reg:DF 156 [ _70 ])
            (nil))))
(insn 267 266 268 21 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [2 A+0 S4 A32])
        (float_truncate:SF (reg:DF 157 [ _71 ]))) "test1.c":19 157 {*truncdfsf_fast_mixed}
     (expr_list:REG_DEAD (reg:DF 157 [ _71 ])
        (nil)))
(insn 268 267 269 21 (set (reg:DF 158 [ _72 ])
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [2 B+0 S4 A32]))) "test1.c":19 154 {*extendsfdf2}
     (nil))
(insn 269 268 270 21 (set (reg:DF 228)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [3  S8 A64])) "test1.c":19 126 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 2.0000000000000000416333634234433702658861875534057617e-2 [0x0.a3d70a3d70a3d8p-5])
        (nil)))
(insn 270 269 271 21 (set (reg:DF 159 [ _73 ])
        (plus:DF (reg:DF 158 [ _72 ])
            (reg:DF 228))) "test1.c":19 813 {*fop_df_comm}
     (expr_list:REG_DEAD (reg:DF 228)
        (expr_list:REG_DEAD (reg:DF 158 [ _72 ])
            (nil))))
(insn 271 270 290 21 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [2 B+0 S4 A32])
        (float_truncate:SF (reg:DF 159 [ _73 ]))) "test1.c":19 157 {*truncdfsf_fast_mixed}
     (expr_list:REG_DEAD (reg:DF 159 [ _73 ])
        (nil)))
(jump_insn 290 271 291 21 (set (pc)
        (label_ref 272)) "test1.c":7 659 {jump}
     (nil)
 -> 272)
;;  succ:       3 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 291 290 0)
