{"version":3,"sources":["./src/environments/environment.ts","./src/app/web-interface.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACuC;AACpC;AACH;;;AAOpC,MAAM,mBAAmB;IAO9B,YACS,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QANjB,QAAG,GAAG,8BAA8B,CAAC;QAE7C,YAAO,GAAG;YACR,OAAO,EAAE,IAAI,gEAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAC,CAAC;SAC/D;IAGG,CAAC;IAEG,WAAW,CAAC,KAAwB;QAC1C,KAAK,CAAC,oDAAoD,CAAC,CAAC;QAC5D,OAAO,uDAAU,CAAC,gDAAgD,CAAC;IACrE,CAAC;IAED,UAAU,CAAC,OAAgB;QAEzB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAS,IAAI,CAAC,GAAG,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CACjE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B;IAEH,CAAC;;sFAtBU,mBAAmB;sGAAnB,mBAAmB,WAAnB,mBAAmB,mBAFlB,MAAM;6FAEP,mBAAmB;cAH/B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAAA;AAA0C;AAC0B;;;;AAQ7D,MAAM,YAAY;IASvB,YAAoB,mBAAwC;QAAxC,wBAAmB,GAAnB,mBAAmB,CAAqB;QAR5D,UAAK,GAAG,KAAK,CAAC;QAEd,SAAI,GAAG,IAAI,wDAAS,CAAC;YACnB,IAAI,EAAE,IAAI,0DAAW,CAAC,uBAAuB,CAAC;YAC9C,GAAG,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACxB,GAAG,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;SACzB,CAAC;IAE8D,CAAC;IAEjE,OAAO;QACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC7B,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;IACvG,CAAC;;wEAdU,YAAY;4FAAZ,YAAY;QCTzB,qEAAI;QAAA,8DAAG;QAAA,4DAAK;QAEZ,yEACI;QAAA,0EAEI;QAFqB,wIAAY,aAAS,IAAC;QAE3C,wEACI;QAAA,uEAAM;QAAA,wEAAa;QAAA,4DAAO;QAC1B,yEAA4C;QAChD,4DAAQ;QACR,wEACI;QAAA,uEAAM;QAAA,yEAAa;QAAA,4DAAO;QAC1B,0EAA2C;QAC/C,4DAAQ;QACR,yEACI;QAAA,wEAAM;QAAA,uFAA2B;QAAA,4DAAO;QACxC,0EAA2C;QAC/C,4DAAQ;QACR,iEAAI;QAAA,iEACJ;QAAA,0EACI;QAAA,6EAAsB;QAAA,oEAAQ;QAAA,4DAAS;QAC3C,4DAAM;QACV,4DAAO;QACX,4DAAM;;QAnBI,0DAAkB;QAAlB,+EAAkB;;6FDMf,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEM;AACS;AACH;;AAkB9C,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YANJ;YACR,qEAAgB;YACf,uEAAa;YACb,kEAAmB;SAEpB;mIAIU,SAAS,mBAZlB,2DAAY,aAIb,qEAAgB;QACf,uEAAa;QACb,kEAAmB;6FAMV,SAAS;cAdrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;iBAEb;gBACD,OAAO,EAAE;oBACR,qEAAgB;oBACf,uEAAa;oBACb,kEAAmB;iBAEpB;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACtBD;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators'\nimport { Config } from './Config';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebInterfaceService {\n\n  private URL = 'http://127.0.0.1:8000/polls/';\n\n  options = {\n    headers: new HttpHeaders({'Content-Type': 'application/json'}) \n  }\n  constructor(\n  \tprivate http: HttpClient\n  ) { }\n\n  private handleError(error: HttpErrorResponse){\n    alert('Unfortunately, your code could not be generated :(');\n    return throwError('Error in submitting code data via POST request')\n  }\n\n  submitData(inpData:  Config): Observable<Config>{\n\n    return this.http.post<Config>(this.URL, inpData, this.options).pipe(\n      catchError(this.handleError)\n    )\n\n  }\n}\n","import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { WebInterfaceService } from './web-interface.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'rtl';\n\n  data = new FormGroup({\n    code: new FormControl('//Put the C code here'),\n    rtl: new FormControl(''),\n    cpp: new FormControl(''),\n  })\n\n  constructor(private webInterfaceService: WebInterfaceService) { }\n\n  onClick(): void {\n    console.log(this.data.value);\n    this.webInterfaceService.submitData(this.data.value).subscribe(result => this.data.setValue(result));\n  }\n}\n","<h1>RTL</h1>\n\n<div  class=\"textAreaColumn\">\n    <form [formGroup]=\"data\" (ngSubmit)=\"onClick()\">\n    \n        <label>\n            <span>Original Code</span>\n            <textarea formControlName=\"code\"></textarea>\n        </label>\n        <label>\n            <span>Generated RTL</span>\n            <textarea formControlName=\"rtl\"></textarea>\n        </label>\n        <label>\n            <span>CPP code generated from RTL</span>\n            <textarea formControlName=\"cpp\"></textarea>\n        </label>\n        <br><br>\n        <div class=\"sub\">\n            <button type=\"submit\">Generate</button>\n        </div>\n    </form>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n\n  ],\n  imports: [\n  \tHttpClientModule,\n    BrowserModule,\n    ReactiveFormsModule,\n\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}