Grammar

    0 $accept: Program $end

    1 Program: FuncBodies

    2 FuncBodies: FuncBodies FuncBody
    3           | FuncBody

    4 FuncBody: T_FunBegin Stmts

    5 Stmts: Stmts Stmt
    6      | Stmt

    7 Stmt: "(" Note ")"
    8     | "(" Barrier ")"
    9     | "(" Insn ")"
   10     | "(" JumpInsn ")"
   11     | "(" Call ")"

   12 Note: T_Note T_IntConstant T_IntConstant T_IntConstant T_IntConstant
   13     | T_Note T_IntConstant T_IntConstant T_IntConstant

   14 Barrier: T_Barrier T_IntConstant T_IntConstant T_IntConstant

   15 Integer: "-" T_IntConstant
   16        | T_IntConstant

   17 Insn: T_Insn T_IntConstant T_IntConstant T_IntConstant "(" MainCmd ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")"

   18 MainCmd: PlainCmd
   19        | ParallelCmd

   20 PlainCmd: ClobberCmd
   21         | SetCmd
   22         | UseCmd

   23 ParallelCmd: T_Parallel Cmds T_EndPara

   24 Cmds: Cmds PlainCmd
   25     | PlainCmd

   26 ClobberCmd: T_Clobber "(" T_Reg T_CCType T_IntConstant T_Flags ")"

   27 SetCmd: T_Set "(" Operand ")" "(" Operand ")"

   28 UseCmd: T_Use "(" T_Reg ":" Flags TypeInfo T_IntConstant ")"

   29 Operand: IntOperand
   30        | ExprOperand
   31        | ExtendOperand

   32 IntOperand: Integer

   33 ExprOperand: LocInfo ":" TypeInfo Expr

   34 ExtendOperand: T_SiExtend ":" TypeInfo "(" Operand ")"

   35 LocInfo: MemType Flags
   36        | MemType

   37 Flags: Flags Flag
   38      | Flag

   39 Flag: T_IFlag
   40     | T_VFlag
   41     | T_FFlag
   42     | T_CFlag

   43 MemType: T_Mem
   44        | T_Reg
   45        | T_SymbolRef

   46 TypeInfo: T_SIType
   47         | T_DIType
   48         | T_QIType
   49         | T_CCType
   50         | T_CCZType
   51         | T_CCGCType

   52 Expr: IntegerExpr
   53     | "(" PlusExpr ")"
   54     | "(" MinusExpr ")"
   55     | "(" MultExpr ")"
   56     | "(" AshiftExpr ")"
   57     | "(" SubregExpr ")"
   58     | "(" CompareExpr ")"

   59 IntegerExpr: Integer

   60 PlusExpr: T_Plus TypeInfo "(" Operand ")" "(" Operand ")"

   61 MinusExpr: T_Minus TypeInfo "(" Operand ")" "(" Operand ")"

   62 MultExpr: T_Mult TypeInfo "(" Operand ")" "(" Operand ")"

   63 AshiftExpr: T_Ashift TypeInfo "(" Operand ")" "(" Operand ")"

   64 SubregExpr: T_Subreg TypeInfo "(" Operand ")" Integer

   65 CompareExpr: T_Compare TypeInfo "(" Operand ")" "(" Operand ")"

   66 JumpInsn: T_JumpInsn T_IntConstant T_IntConstant T_IntConstant "(" T_Set "(" T_Pc ")" "(" Dest ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" T_RArrow T_IntConstant

   67 Dest: Label
   68     | IfThenElse
   69     | Pc

   70 Label: T_LabelRef T_IntConstant

   71 IfThenElse: T_IfThenElse "(" Comparison ")" "(" Dest ")" "(" Dest ")"

   72 Pc: T_Pc

   73 Comparison: Condition "(" Operand ")" "(" Operand ")"

   74 Condition: T_Lt
   75          | T_Gt
   76          | T_Le
   77          | T_Ge
   78          | T_Eq
   79          | T_Ne

   80 Call: RetCall
   81     | NoRetCall

   82 RetCall: T_CallInsn T_IntConstant T_IntConstant T_IntConstant T_IntConstant "(" T_Set "(" T_Reg ":" TypeInfo T_IntConstant ")" "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk ")"

   83 NoRetCall: T_CallInsn "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk ")"

   84 Junk: T_ExprList "(" T_Use "(" T_Reg ":" TypeInfo T_IntConstant ")" ")" "(" T_Nil ")"


Terminals, with rules where they appear

$end (0) 0
error (256)
T_Note (258) 12 13
T_Insn (259) 17
T_JumpInsn (260) 66
T_CallInsn (261) 82 83
T_Call (262) 82 83
T_SymbolRef (263) 45 82 83
T_Flags (264) 26
T_Nil (265) 17 66 82 83 84
T_Parallel (266) 23
T_Clobber (267) 26
T_Set (268) 27 66 82
T_Use (269) 28 84
T_IfThenElse (270) 71
T_ConstInt (271) 82 83
T_Barrier (272) 14
T_Mem (273) 43 82 83
T_Reg (274) 26 28 44 82 84
T_Pc (275) 66 72
T_LabelRef (276) 70
T_IFlag (277) 39
T_VFlag (278) 40
T_FFlag (279) 41
T_CFlag (280) 42
T_SIType (281) 46
T_DIType (282) 47 82 83
T_QIType (283) 48 82 83
T_CCType (284) 26 49
T_CCZType (285) 50
T_CCGCType (286) 51
T_Plus (287) 60
T_Minus (288) 61
T_Mult (289) 62
T_Ashift (290) 63
T_Subreg (291) 64
T_ExprList (292) 84
T_EndPara (293) 23
T_RArrow (294) 66
T_SiExtend (295) 34
T_Compare (296) 65
T_Lt (297) 74
T_Gt (298) 75
T_Le (299) 76
T_Ge (300) 77
T_Eq (301) 78
T_Ne (302) 79
T_StringConstant (303) 17 66 82 83
T_IntConstant (304) 12 13 14 15 16 17 26 28 66 70 82 83 84
T_FunBegin (305) 4
"(" (306) 7 8 9 10 11 17 26 27 28 34 53 54 55 56 57 58 60 61 62 63
    64 65 66 71 73 82 83 84
")" (307) 7 8 9 10 11 17 26 27 28 34 53 54 55 56 57 58 60 61 62 63
    64 65 66 71 73 82 83 84
"-" (308) 15
":" (309) 17 28 33 34 66 82 83 84


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
Program (56)
    on left: 1, on right: 0
FuncBodies (57)
    on left: 2 3, on right: 1 2
FuncBody (58)
    on left: 4, on right: 2 3
Stmts (59)
    on left: 5 6, on right: 4 5
Stmt (60)
    on left: 7 8 9 10 11, on right: 5 6
Note (61)
    on left: 12 13, on right: 7
Barrier (62)
    on left: 14, on right: 8
Integer (63)
    on left: 15 16, on right: 17 32 59 64 66 82 83
Insn (64)
    on left: 17, on right: 9
MainCmd (65)
    on left: 18 19, on right: 17
PlainCmd (66)
    on left: 20 21 22, on right: 18 24 25
ParallelCmd (67)
    on left: 23, on right: 19
Cmds (68)
    on left: 24 25, on right: 23 24
ClobberCmd (69)
    on left: 26, on right: 20
SetCmd (70)
    on left: 27, on right: 21
UseCmd (71)
    on left: 28, on right: 22
Operand (72)
    on left: 29 30 31, on right: 27 34 60 61 62 63 64 65 73
IntOperand (73)
    on left: 32, on right: 29
ExprOperand (74)
    on left: 33, on right: 30
ExtendOperand (75)
    on left: 34, on right: 31
LocInfo (76)
    on left: 35 36, on right: 33
Flags (77)
    on left: 37 38, on right: 28 35 37
Flag (78)
    on left: 39 40 41 42, on right: 37 38
MemType (79)
    on left: 43 44 45, on right: 35 36
TypeInfo (80)
    on left: 46 47 48 49 50 51, on right: 28 33 34 60 61 62 63 64 65
    82 84
Expr (81)
    on left: 52 53 54 55 56 57 58, on right: 33
IntegerExpr (82)
    on left: 59, on right: 52
PlusExpr (83)
    on left: 60, on right: 53
MinusExpr (84)
    on left: 61, on right: 54
MultExpr (85)
    on left: 62, on right: 55
AshiftExpr (86)
    on left: 63, on right: 56
SubregExpr (87)
    on left: 64, on right: 57
CompareExpr (88)
    on left: 65, on right: 58
JumpInsn (89)
    on left: 66, on right: 10
Dest (90)
    on left: 67 68 69, on right: 66 71
Label (91)
    on left: 70, on right: 67
IfThenElse (92)
    on left: 71, on right: 68
Pc (93)
    on left: 72, on right: 69
Comparison (94)
    on left: 73, on right: 71
Condition (95)
    on left: 74 75 76 77 78 79, on right: 73
Call (96)
    on left: 80 81, on right: 11
RetCall (97)
    on left: 82, on right: 80
NoRetCall (98)
    on left: 83, on right: 81
Junk (99)
    on left: 84, on right: 82 83


State 0

    0 $accept: . Program $end

    T_FunBegin  shift, and go to state 1

    Program     go to state 2
    FuncBodies  go to state 3
    FuncBody    go to state 4


State 1

    4 FuncBody: T_FunBegin . Stmts

    "("  shift, and go to state 5

    Stmts  go to state 6
    Stmt   go to state 7


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 8


State 3

    1 Program: FuncBodies .
    2 FuncBodies: FuncBodies . FuncBody

    T_FunBegin  shift, and go to state 1

    $default  reduce using rule 1 (Program)

    FuncBody  go to state 9


State 4

    3 FuncBodies: FuncBody .

    $default  reduce using rule 3 (FuncBodies)


State 5

    7 Stmt: "(" . Note ")"
    8     | "(" . Barrier ")"
    9     | "(" . Insn ")"
   10     | "(" . JumpInsn ")"
   11     | "(" . Call ")"

    T_Note      shift, and go to state 10
    T_Insn      shift, and go to state 11
    T_JumpInsn  shift, and go to state 12
    T_CallInsn  shift, and go to state 13
    T_Barrier   shift, and go to state 14

    Note       go to state 15
    Barrier    go to state 16
    Insn       go to state 17
    JumpInsn   go to state 18
    Call       go to state 19
    RetCall    go to state 20
    NoRetCall  go to state 21


State 6

    4 FuncBody: T_FunBegin Stmts .
    5 Stmts: Stmts . Stmt

    "("  shift, and go to state 5

    $default  reduce using rule 4 (FuncBody)

    Stmt  go to state 22


State 7

    6 Stmts: Stmt .

    $default  reduce using rule 6 (Stmts)


State 8

    0 $accept: Program $end .

    $default  accept


State 9

    2 FuncBodies: FuncBodies FuncBody .

    $default  reduce using rule 2 (FuncBodies)


State 10

   12 Note: T_Note . T_IntConstant T_IntConstant T_IntConstant T_IntConstant
   13     | T_Note . T_IntConstant T_IntConstant T_IntConstant

    T_IntConstant  shift, and go to state 23


State 11

   17 Insn: T_Insn . T_IntConstant T_IntConstant T_IntConstant "(" MainCmd ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")"

    T_IntConstant  shift, and go to state 24


State 12

   66 JumpInsn: T_JumpInsn . T_IntConstant T_IntConstant T_IntConstant "(" T_Set "(" T_Pc ")" "(" Dest ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" T_RArrow T_IntConstant

    T_IntConstant  shift, and go to state 25


State 13

   82 RetCall: T_CallInsn . T_IntConstant T_IntConstant T_IntConstant T_IntConstant "(" T_Set "(" T_Reg ":" TypeInfo T_IntConstant ")" "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk ")"
   83 NoRetCall: T_CallInsn . "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk ")"

    T_IntConstant  shift, and go to state 26
    "("            shift, and go to state 27


State 14

   14 Barrier: T_Barrier . T_IntConstant T_IntConstant T_IntConstant

    T_IntConstant  shift, and go to state 28


State 15

    7 Stmt: "(" Note . ")"

    ")"  shift, and go to state 29


State 16

    8 Stmt: "(" Barrier . ")"

    ")"  shift, and go to state 30


State 17

    9 Stmt: "(" Insn . ")"

    ")"  shift, and go to state 31


State 18

   10 Stmt: "(" JumpInsn . ")"

    ")"  shift, and go to state 32


State 19

   11 Stmt: "(" Call . ")"

    ")"  shift, and go to state 33


State 20

   80 Call: RetCall .

    $default  reduce using rule 80 (Call)


State 21

   81 Call: NoRetCall .

    $default  reduce using rule 81 (Call)


State 22

    5 Stmts: Stmts Stmt .

    $default  reduce using rule 5 (Stmts)


State 23

   12 Note: T_Note T_IntConstant . T_IntConstant T_IntConstant T_IntConstant
   13     | T_Note T_IntConstant . T_IntConstant T_IntConstant

    T_IntConstant  shift, and go to state 34


State 24

   17 Insn: T_Insn T_IntConstant . T_IntConstant T_IntConstant "(" MainCmd ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")"

    T_IntConstant  shift, and go to state 35


State 25

   66 JumpInsn: T_JumpInsn T_IntConstant . T_IntConstant T_IntConstant "(" T_Set "(" T_Pc ")" "(" Dest ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" T_RArrow T_IntConstant

    T_IntConstant  shift, and go to state 36


State 26

   82 RetCall: T_CallInsn T_IntConstant . T_IntConstant T_IntConstant T_IntConstant "(" T_Set "(" T_Reg ":" TypeInfo T_IntConstant ")" "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk ")"

    T_IntConstant  shift, and go to state 37


State 27

   83 NoRetCall: T_CallInsn "(" . T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk ")"

    T_Call  shift, and go to state 38


State 28

   14 Barrier: T_Barrier T_IntConstant . T_IntConstant T_IntConstant

    T_IntConstant  shift, and go to state 39


State 29

    7 Stmt: "(" Note ")" .

    $default  reduce using rule 7 (Stmt)


State 30

    8 Stmt: "(" Barrier ")" .

    $default  reduce using rule 8 (Stmt)


State 31

    9 Stmt: "(" Insn ")" .

    $default  reduce using rule 9 (Stmt)


State 32

   10 Stmt: "(" JumpInsn ")" .

    $default  reduce using rule 10 (Stmt)


State 33

   11 Stmt: "(" Call ")" .

    $default  reduce using rule 11 (Stmt)


State 34

   12 Note: T_Note T_IntConstant T_IntConstant . T_IntConstant T_IntConstant
   13     | T_Note T_IntConstant T_IntConstant . T_IntConstant

    T_IntConstant  shift, and go to state 40


State 35

   17 Insn: T_Insn T_IntConstant T_IntConstant . T_IntConstant "(" MainCmd ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")"

    T_IntConstant  shift, and go to state 41


State 36

   66 JumpInsn: T_JumpInsn T_IntConstant T_IntConstant . T_IntConstant "(" T_Set "(" T_Pc ")" "(" Dest ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" T_RArrow T_IntConstant

    T_IntConstant  shift, and go to state 42


State 37

   82 RetCall: T_CallInsn T_IntConstant T_IntConstant . T_IntConstant T_IntConstant "(" T_Set "(" T_Reg ":" TypeInfo T_IntConstant ")" "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk ")"

    T_IntConstant  shift, and go to state 43


State 38

   83 NoRetCall: T_CallInsn "(" T_Call . "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk ")"

    "("  shift, and go to state 44


State 39

   14 Barrier: T_Barrier T_IntConstant T_IntConstant . T_IntConstant

    T_IntConstant  shift, and go to state 45


State 40

   12 Note: T_Note T_IntConstant T_IntConstant T_IntConstant . T_IntConstant
   13     | T_Note T_IntConstant T_IntConstant T_IntConstant .

    T_IntConstant  shift, and go to state 46

    $default  reduce using rule 13 (Note)


State 41

   17 Insn: T_Insn T_IntConstant T_IntConstant T_IntConstant . "(" MainCmd ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")"

    "("  shift, and go to state 47


State 42

   66 JumpInsn: T_JumpInsn T_IntConstant T_IntConstant T_IntConstant . "(" T_Set "(" T_Pc ")" "(" Dest ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" T_RArrow T_IntConstant

    "("  shift, and go to state 48


State 43

   82 RetCall: T_CallInsn T_IntConstant T_IntConstant T_IntConstant . T_IntConstant "(" T_Set "(" T_Reg ":" TypeInfo T_IntConstant ")" "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk ")"

    T_IntConstant  shift, and go to state 49


State 44

   83 NoRetCall: T_CallInsn "(" T_Call "(" . T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk ")"

    T_Mem  shift, and go to state 50


State 45

   14 Barrier: T_Barrier T_IntConstant T_IntConstant T_IntConstant .

    $default  reduce using rule 14 (Barrier)


State 46

   12 Note: T_Note T_IntConstant T_IntConstant T_IntConstant T_IntConstant .

    $default  reduce using rule 12 (Note)


State 47

   17 Insn: T_Insn T_IntConstant T_IntConstant T_IntConstant "(" . MainCmd ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")"

    T_Parallel  shift, and go to state 51
    T_Clobber   shift, and go to state 52
    T_Set       shift, and go to state 53
    T_Use       shift, and go to state 54

    MainCmd      go to state 55
    PlainCmd     go to state 56
    ParallelCmd  go to state 57
    ClobberCmd   go to state 58
    SetCmd       go to state 59
    UseCmd       go to state 60


State 48

   66 JumpInsn: T_JumpInsn T_IntConstant T_IntConstant T_IntConstant "(" . T_Set "(" T_Pc ")" "(" Dest ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" T_RArrow T_IntConstant

    T_Set  shift, and go to state 61


State 49

   82 RetCall: T_CallInsn T_IntConstant T_IntConstant T_IntConstant T_IntConstant . "(" T_Set "(" T_Reg ":" TypeInfo T_IntConstant ")" "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk ")"

    "("  shift, and go to state 62


State 50

   83 NoRetCall: T_CallInsn "(" T_Call "(" T_Mem . ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk ")"

    ":"  shift, and go to state 63


State 51

   23 ParallelCmd: T_Parallel . Cmds T_EndPara

    T_Clobber  shift, and go to state 52
    T_Set      shift, and go to state 53
    T_Use      shift, and go to state 54

    PlainCmd    go to state 64
    Cmds        go to state 65
    ClobberCmd  go to state 58
    SetCmd      go to state 59
    UseCmd      go to state 60


State 52

   26 ClobberCmd: T_Clobber . "(" T_Reg T_CCType T_IntConstant T_Flags ")"

    "("  shift, and go to state 66


State 53

   27 SetCmd: T_Set . "(" Operand ")" "(" Operand ")"

    "("  shift, and go to state 67


State 54

   28 UseCmd: T_Use . "(" T_Reg ":" Flags TypeInfo T_IntConstant ")"

    "("  shift, and go to state 68


State 55

   17 Insn: T_Insn T_IntConstant T_IntConstant T_IntConstant "(" MainCmd . ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")"

    ")"  shift, and go to state 69


State 56

   18 MainCmd: PlainCmd .

    $default  reduce using rule 18 (MainCmd)


State 57

   19 MainCmd: ParallelCmd .

    $default  reduce using rule 19 (MainCmd)


State 58

   20 PlainCmd: ClobberCmd .

    $default  reduce using rule 20 (PlainCmd)


State 59

   21 PlainCmd: SetCmd .

    $default  reduce using rule 21 (PlainCmd)


State 60

   22 PlainCmd: UseCmd .

    $default  reduce using rule 22 (PlainCmd)


State 61

   66 JumpInsn: T_JumpInsn T_IntConstant T_IntConstant T_IntConstant "(" T_Set . "(" T_Pc ")" "(" Dest ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" T_RArrow T_IntConstant

    "("  shift, and go to state 70


State 62

   82 RetCall: T_CallInsn T_IntConstant T_IntConstant T_IntConstant T_IntConstant "(" . T_Set "(" T_Reg ":" TypeInfo T_IntConstant ")" "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk ")"

    T_Set  shift, and go to state 71


State 63

   83 NoRetCall: T_CallInsn "(" T_Call "(" T_Mem ":" . T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk ")"

    T_QIType  shift, and go to state 72


State 64

   25 Cmds: PlainCmd .

    $default  reduce using rule 25 (Cmds)


State 65

   23 ParallelCmd: T_Parallel Cmds . T_EndPara
   24 Cmds: Cmds . PlainCmd

    T_Clobber  shift, and go to state 52
    T_Set      shift, and go to state 53
    T_Use      shift, and go to state 54
    T_EndPara  shift, and go to state 73

    PlainCmd    go to state 74
    ClobberCmd  go to state 58
    SetCmd      go to state 59
    UseCmd      go to state 60


State 66

   26 ClobberCmd: T_Clobber "(" . T_Reg T_CCType T_IntConstant T_Flags ")"

    T_Reg  shift, and go to state 75


State 67

   27 SetCmd: T_Set "(" . Operand ")" "(" Operand ")"

    T_SymbolRef    shift, and go to state 76
    T_Mem          shift, and go to state 77
    T_Reg          shift, and go to state 78
    T_SiExtend     shift, and go to state 79
    T_IntConstant  shift, and go to state 80
    "-"            shift, and go to state 81

    Integer        go to state 82
    Operand        go to state 83
    IntOperand     go to state 84
    ExprOperand    go to state 85
    ExtendOperand  go to state 86
    LocInfo        go to state 87
    MemType        go to state 88


State 68

   28 UseCmd: T_Use "(" . T_Reg ":" Flags TypeInfo T_IntConstant ")"

    T_Reg  shift, and go to state 89


State 69

   17 Insn: T_Insn T_IntConstant T_IntConstant T_IntConstant "(" MainCmd ")" . T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")"

    T_StringConstant  shift, and go to state 90


State 70

   66 JumpInsn: T_JumpInsn T_IntConstant T_IntConstant T_IntConstant "(" T_Set "(" . T_Pc ")" "(" Dest ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" T_RArrow T_IntConstant

    T_Pc  shift, and go to state 91


State 71

   82 RetCall: T_CallInsn T_IntConstant T_IntConstant T_IntConstant T_IntConstant "(" T_Set . "(" T_Reg ":" TypeInfo T_IntConstant ")" "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk ")"

    "("  shift, and go to state 92


State 72

   83 NoRetCall: T_CallInsn "(" T_Call "(" T_Mem ":" T_QIType . "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk ")"

    "("  shift, and go to state 93


State 73

   23 ParallelCmd: T_Parallel Cmds T_EndPara .

    $default  reduce using rule 23 (ParallelCmd)


State 74

   24 Cmds: Cmds PlainCmd .

    $default  reduce using rule 24 (Cmds)


State 75

   26 ClobberCmd: T_Clobber "(" T_Reg . T_CCType T_IntConstant T_Flags ")"

    T_CCType  shift, and go to state 94


State 76

   45 MemType: T_SymbolRef .

    $default  reduce using rule 45 (MemType)


State 77

   43 MemType: T_Mem .

    $default  reduce using rule 43 (MemType)


State 78

   44 MemType: T_Reg .

    $default  reduce using rule 44 (MemType)


State 79

   34 ExtendOperand: T_SiExtend . ":" TypeInfo "(" Operand ")"

    ":"  shift, and go to state 95


State 80

   16 Integer: T_IntConstant .

    $default  reduce using rule 16 (Integer)


State 81

   15 Integer: "-" . T_IntConstant

    T_IntConstant  shift, and go to state 96


State 82

   32 IntOperand: Integer .

    $default  reduce using rule 32 (IntOperand)


State 83

   27 SetCmd: T_Set "(" Operand . ")" "(" Operand ")"

    ")"  shift, and go to state 97


State 84

   29 Operand: IntOperand .

    $default  reduce using rule 29 (Operand)


State 85

   30 Operand: ExprOperand .

    $default  reduce using rule 30 (Operand)


State 86

   31 Operand: ExtendOperand .

    $default  reduce using rule 31 (Operand)


State 87

   33 ExprOperand: LocInfo . ":" TypeInfo Expr

    ":"  shift, and go to state 98


State 88

   35 LocInfo: MemType . Flags
   36        | MemType .

    T_IFlag  shift, and go to state 99
    T_VFlag  shift, and go to state 100
    T_FFlag  shift, and go to state 101
    T_CFlag  shift, and go to state 102

    $default  reduce using rule 36 (LocInfo)

    Flags  go to state 103
    Flag   go to state 104


State 89

   28 UseCmd: T_Use "(" T_Reg . ":" Flags TypeInfo T_IntConstant ")"

    ":"  shift, and go to state 105


State 90

   17 Insn: T_Insn T_IntConstant T_IntConstant T_IntConstant "(" MainCmd ")" T_StringConstant . ":" T_IntConstant Integer "(" T_Nil ")"

    ":"  shift, and go to state 106


State 91

   66 JumpInsn: T_JumpInsn T_IntConstant T_IntConstant T_IntConstant "(" T_Set "(" T_Pc . ")" "(" Dest ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" T_RArrow T_IntConstant

    ")"  shift, and go to state 107


State 92

   82 RetCall: T_CallInsn T_IntConstant T_IntConstant T_IntConstant T_IntConstant "(" T_Set "(" . T_Reg ":" TypeInfo T_IntConstant ")" "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk ")"

    T_Reg  shift, and go to state 108


State 93

   83 NoRetCall: T_CallInsn "(" T_Call "(" T_Mem ":" T_QIType "(" . T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk ")"

    T_SymbolRef  shift, and go to state 109


State 94

   26 ClobberCmd: T_Clobber "(" T_Reg T_CCType . T_IntConstant T_Flags ")"

    T_IntConstant  shift, and go to state 110


State 95

   34 ExtendOperand: T_SiExtend ":" . TypeInfo "(" Operand ")"

    T_SIType    shift, and go to state 111
    T_DIType    shift, and go to state 112
    T_QIType    shift, and go to state 113
    T_CCType    shift, and go to state 114
    T_CCZType   shift, and go to state 115
    T_CCGCType  shift, and go to state 116

    TypeInfo  go to state 117


State 96

   15 Integer: "-" T_IntConstant .

    $default  reduce using rule 15 (Integer)


State 97

   27 SetCmd: T_Set "(" Operand ")" . "(" Operand ")"

    "("  shift, and go to state 118


State 98

   33 ExprOperand: LocInfo ":" . TypeInfo Expr

    T_SIType    shift, and go to state 111
    T_DIType    shift, and go to state 112
    T_QIType    shift, and go to state 113
    T_CCType    shift, and go to state 114
    T_CCZType   shift, and go to state 115
    T_CCGCType  shift, and go to state 116

    TypeInfo  go to state 119


State 99

   39 Flag: T_IFlag .

    $default  reduce using rule 39 (Flag)


State 100

   40 Flag: T_VFlag .

    $default  reduce using rule 40 (Flag)


State 101

   41 Flag: T_FFlag .

    $default  reduce using rule 41 (Flag)


State 102

   42 Flag: T_CFlag .

    $default  reduce using rule 42 (Flag)


State 103

   35 LocInfo: MemType Flags .
   37 Flags: Flags . Flag

    T_IFlag  shift, and go to state 99
    T_VFlag  shift, and go to state 100
    T_FFlag  shift, and go to state 101
    T_CFlag  shift, and go to state 102

    $default  reduce using rule 35 (LocInfo)

    Flag  go to state 120


State 104

   38 Flags: Flag .

    $default  reduce using rule 38 (Flags)


State 105

   28 UseCmd: T_Use "(" T_Reg ":" . Flags TypeInfo T_IntConstant ")"

    T_IFlag  shift, and go to state 99
    T_VFlag  shift, and go to state 100
    T_FFlag  shift, and go to state 101
    T_CFlag  shift, and go to state 102

    Flags  go to state 121
    Flag   go to state 104


State 106

   17 Insn: T_Insn T_IntConstant T_IntConstant T_IntConstant "(" MainCmd ")" T_StringConstant ":" . T_IntConstant Integer "(" T_Nil ")"

    T_IntConstant  shift, and go to state 122


State 107

   66 JumpInsn: T_JumpInsn T_IntConstant T_IntConstant T_IntConstant "(" T_Set "(" T_Pc ")" . "(" Dest ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" T_RArrow T_IntConstant

    "("  shift, and go to state 123


State 108

   82 RetCall: T_CallInsn T_IntConstant T_IntConstant T_IntConstant T_IntConstant "(" T_Set "(" T_Reg . ":" TypeInfo T_IntConstant ")" "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk ")"

    ":"  shift, and go to state 124


State 109

   83 NoRetCall: T_CallInsn "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef . ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk ")"

    ":"  shift, and go to state 125


State 110

   26 ClobberCmd: T_Clobber "(" T_Reg T_CCType T_IntConstant . T_Flags ")"

    T_Flags  shift, and go to state 126


State 111

   46 TypeInfo: T_SIType .

    $default  reduce using rule 46 (TypeInfo)


State 112

   47 TypeInfo: T_DIType .

    $default  reduce using rule 47 (TypeInfo)


State 113

   48 TypeInfo: T_QIType .

    $default  reduce using rule 48 (TypeInfo)


State 114

   49 TypeInfo: T_CCType .

    $default  reduce using rule 49 (TypeInfo)


State 115

   50 TypeInfo: T_CCZType .

    $default  reduce using rule 50 (TypeInfo)


State 116

   51 TypeInfo: T_CCGCType .

    $default  reduce using rule 51 (TypeInfo)


State 117

   34 ExtendOperand: T_SiExtend ":" TypeInfo . "(" Operand ")"

    "("  shift, and go to state 127


State 118

   27 SetCmd: T_Set "(" Operand ")" "(" . Operand ")"

    T_SymbolRef    shift, and go to state 76
    T_Mem          shift, and go to state 77
    T_Reg          shift, and go to state 78
    T_SiExtend     shift, and go to state 79
    T_IntConstant  shift, and go to state 80
    "-"            shift, and go to state 81

    Integer        go to state 82
    Operand        go to state 128
    IntOperand     go to state 84
    ExprOperand    go to state 85
    ExtendOperand  go to state 86
    LocInfo        go to state 87
    MemType        go to state 88


State 119

   33 ExprOperand: LocInfo ":" TypeInfo . Expr

    T_IntConstant  shift, and go to state 80
    "("            shift, and go to state 129
    "-"            shift, and go to state 81

    Integer      go to state 130
    Expr         go to state 131
    IntegerExpr  go to state 132


State 120

   37 Flags: Flags Flag .

    $default  reduce using rule 37 (Flags)


State 121

   28 UseCmd: T_Use "(" T_Reg ":" Flags . TypeInfo T_IntConstant ")"
   37 Flags: Flags . Flag

    T_IFlag     shift, and go to state 99
    T_VFlag     shift, and go to state 100
    T_FFlag     shift, and go to state 101
    T_CFlag     shift, and go to state 102
    T_SIType    shift, and go to state 111
    T_DIType    shift, and go to state 112
    T_QIType    shift, and go to state 113
    T_CCType    shift, and go to state 114
    T_CCZType   shift, and go to state 115
    T_CCGCType  shift, and go to state 116

    Flag      go to state 120
    TypeInfo  go to state 133


State 122

   17 Insn: T_Insn T_IntConstant T_IntConstant T_IntConstant "(" MainCmd ")" T_StringConstant ":" T_IntConstant . Integer "(" T_Nil ")"

    T_IntConstant  shift, and go to state 80
    "-"            shift, and go to state 81

    Integer  go to state 134


State 123

   66 JumpInsn: T_JumpInsn T_IntConstant T_IntConstant T_IntConstant "(" T_Set "(" T_Pc ")" "(" . Dest ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" T_RArrow T_IntConstant

    T_IfThenElse  shift, and go to state 135
    T_Pc          shift, and go to state 136
    T_LabelRef    shift, and go to state 137

    Dest        go to state 138
    Label       go to state 139
    IfThenElse  go to state 140
    Pc          go to state 141


State 124

   82 RetCall: T_CallInsn T_IntConstant T_IntConstant T_IntConstant T_IntConstant "(" T_Set "(" T_Reg ":" . TypeInfo T_IntConstant ")" "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk ")"

    T_SIType    shift, and go to state 111
    T_DIType    shift, and go to state 112
    T_QIType    shift, and go to state 113
    T_CCType    shift, and go to state 114
    T_CCZType   shift, and go to state 115
    T_CCGCType  shift, and go to state 116

    TypeInfo  go to state 142


State 125

   83 NoRetCall: T_CallInsn "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" . T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk ")"

    T_DIType  shift, and go to state 143


State 126

   26 ClobberCmd: T_Clobber "(" T_Reg T_CCType T_IntConstant T_Flags . ")"

    ")"  shift, and go to state 144


State 127

   34 ExtendOperand: T_SiExtend ":" TypeInfo "(" . Operand ")"

    T_SymbolRef    shift, and go to state 76
    T_Mem          shift, and go to state 77
    T_Reg          shift, and go to state 78
    T_SiExtend     shift, and go to state 79
    T_IntConstant  shift, and go to state 80
    "-"            shift, and go to state 81

    Integer        go to state 82
    Operand        go to state 145
    IntOperand     go to state 84
    ExprOperand    go to state 85
    ExtendOperand  go to state 86
    LocInfo        go to state 87
    MemType        go to state 88


State 128

   27 SetCmd: T_Set "(" Operand ")" "(" Operand . ")"

    ")"  shift, and go to state 146


State 129

   53 Expr: "(" . PlusExpr ")"
   54     | "(" . MinusExpr ")"
   55     | "(" . MultExpr ")"
   56     | "(" . AshiftExpr ")"
   57     | "(" . SubregExpr ")"
   58     | "(" . CompareExpr ")"

    T_Plus     shift, and go to state 147
    T_Minus    shift, and go to state 148
    T_Mult     shift, and go to state 149
    T_Ashift   shift, and go to state 150
    T_Subreg   shift, and go to state 151
    T_Compare  shift, and go to state 152

    PlusExpr     go to state 153
    MinusExpr    go to state 154
    MultExpr     go to state 155
    AshiftExpr   go to state 156
    SubregExpr   go to state 157
    CompareExpr  go to state 158


State 130

   59 IntegerExpr: Integer .

    $default  reduce using rule 59 (IntegerExpr)


State 131

   33 ExprOperand: LocInfo ":" TypeInfo Expr .

    $default  reduce using rule 33 (ExprOperand)


State 132

   52 Expr: IntegerExpr .

    $default  reduce using rule 52 (Expr)


State 133

   28 UseCmd: T_Use "(" T_Reg ":" Flags TypeInfo . T_IntConstant ")"

    T_IntConstant  shift, and go to state 159


State 134

   17 Insn: T_Insn T_IntConstant T_IntConstant T_IntConstant "(" MainCmd ")" T_StringConstant ":" T_IntConstant Integer . "(" T_Nil ")"

    "("  shift, and go to state 160


State 135

   71 IfThenElse: T_IfThenElse . "(" Comparison ")" "(" Dest ")" "(" Dest ")"

    "("  shift, and go to state 161


State 136

   72 Pc: T_Pc .

    $default  reduce using rule 72 (Pc)


State 137

   70 Label: T_LabelRef . T_IntConstant

    T_IntConstant  shift, and go to state 162


State 138

   66 JumpInsn: T_JumpInsn T_IntConstant T_IntConstant T_IntConstant "(" T_Set "(" T_Pc ")" "(" Dest . ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" T_RArrow T_IntConstant

    ")"  shift, and go to state 163


State 139

   67 Dest: Label .

    $default  reduce using rule 67 (Dest)


State 140

   68 Dest: IfThenElse .

    $default  reduce using rule 68 (Dest)


State 141

   69 Dest: Pc .

    $default  reduce using rule 69 (Dest)


State 142

   82 RetCall: T_CallInsn T_IntConstant T_IntConstant T_IntConstant T_IntConstant "(" T_Set "(" T_Reg ":" TypeInfo . T_IntConstant ")" "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk ")"

    T_IntConstant  shift, and go to state 164


State 143

   83 NoRetCall: T_CallInsn "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType . "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk ")"

    "("  shift, and go to state 165


State 144

   26 ClobberCmd: T_Clobber "(" T_Reg T_CCType T_IntConstant T_Flags ")" .

    $default  reduce using rule 26 (ClobberCmd)


State 145

   34 ExtendOperand: T_SiExtend ":" TypeInfo "(" Operand . ")"

    ")"  shift, and go to state 166


State 146

   27 SetCmd: T_Set "(" Operand ")" "(" Operand ")" .

    $default  reduce using rule 27 (SetCmd)


State 147

   60 PlusExpr: T_Plus . TypeInfo "(" Operand ")" "(" Operand ")"

    T_SIType    shift, and go to state 111
    T_DIType    shift, and go to state 112
    T_QIType    shift, and go to state 113
    T_CCType    shift, and go to state 114
    T_CCZType   shift, and go to state 115
    T_CCGCType  shift, and go to state 116

    TypeInfo  go to state 167


State 148

   61 MinusExpr: T_Minus . TypeInfo "(" Operand ")" "(" Operand ")"

    T_SIType    shift, and go to state 111
    T_DIType    shift, and go to state 112
    T_QIType    shift, and go to state 113
    T_CCType    shift, and go to state 114
    T_CCZType   shift, and go to state 115
    T_CCGCType  shift, and go to state 116

    TypeInfo  go to state 168


State 149

   62 MultExpr: T_Mult . TypeInfo "(" Operand ")" "(" Operand ")"

    T_SIType    shift, and go to state 111
    T_DIType    shift, and go to state 112
    T_QIType    shift, and go to state 113
    T_CCType    shift, and go to state 114
    T_CCZType   shift, and go to state 115
    T_CCGCType  shift, and go to state 116

    TypeInfo  go to state 169


State 150

   63 AshiftExpr: T_Ashift . TypeInfo "(" Operand ")" "(" Operand ")"

    T_SIType    shift, and go to state 111
    T_DIType    shift, and go to state 112
    T_QIType    shift, and go to state 113
    T_CCType    shift, and go to state 114
    T_CCZType   shift, and go to state 115
    T_CCGCType  shift, and go to state 116

    TypeInfo  go to state 170


State 151

   64 SubregExpr: T_Subreg . TypeInfo "(" Operand ")" Integer

    T_SIType    shift, and go to state 111
    T_DIType    shift, and go to state 112
    T_QIType    shift, and go to state 113
    T_CCType    shift, and go to state 114
    T_CCZType   shift, and go to state 115
    T_CCGCType  shift, and go to state 116

    TypeInfo  go to state 171


State 152

   65 CompareExpr: T_Compare . TypeInfo "(" Operand ")" "(" Operand ")"

    T_SIType    shift, and go to state 111
    T_DIType    shift, and go to state 112
    T_QIType    shift, and go to state 113
    T_CCType    shift, and go to state 114
    T_CCZType   shift, and go to state 115
    T_CCGCType  shift, and go to state 116

    TypeInfo  go to state 172


State 153

   53 Expr: "(" PlusExpr . ")"

    ")"  shift, and go to state 173


State 154

   54 Expr: "(" MinusExpr . ")"

    ")"  shift, and go to state 174


State 155

   55 Expr: "(" MultExpr . ")"

    ")"  shift, and go to state 175


State 156

   56 Expr: "(" AshiftExpr . ")"

    ")"  shift, and go to state 176


State 157

   57 Expr: "(" SubregExpr . ")"

    ")"  shift, and go to state 177


State 158

   58 Expr: "(" CompareExpr . ")"

    ")"  shift, and go to state 178


State 159

   28 UseCmd: T_Use "(" T_Reg ":" Flags TypeInfo T_IntConstant . ")"

    ")"  shift, and go to state 179


State 160

   17 Insn: T_Insn T_IntConstant T_IntConstant T_IntConstant "(" MainCmd ")" T_StringConstant ":" T_IntConstant Integer "(" . T_Nil ")"

    T_Nil  shift, and go to state 180


State 161

   71 IfThenElse: T_IfThenElse "(" . Comparison ")" "(" Dest ")" "(" Dest ")"

    T_Lt  shift, and go to state 181
    T_Gt  shift, and go to state 182
    T_Le  shift, and go to state 183
    T_Ge  shift, and go to state 184
    T_Eq  shift, and go to state 185
    T_Ne  shift, and go to state 186

    Comparison  go to state 187
    Condition   go to state 188


State 162

   70 Label: T_LabelRef T_IntConstant .

    $default  reduce using rule 70 (Label)


State 163

   66 JumpInsn: T_JumpInsn T_IntConstant T_IntConstant T_IntConstant "(" T_Set "(" T_Pc ")" "(" Dest ")" . ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" T_RArrow T_IntConstant

    ")"  shift, and go to state 189


State 164

   82 RetCall: T_CallInsn T_IntConstant T_IntConstant T_IntConstant T_IntConstant "(" T_Set "(" T_Reg ":" TypeInfo T_IntConstant . ")" "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk ")"

    ")"  shift, and go to state 190


State 165

   83 NoRetCall: T_CallInsn "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" . T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk ")"

    T_StringConstant  shift, and go to state 191


State 166

   34 ExtendOperand: T_SiExtend ":" TypeInfo "(" Operand ")" .

    $default  reduce using rule 34 (ExtendOperand)


State 167

   60 PlusExpr: T_Plus TypeInfo . "(" Operand ")" "(" Operand ")"

    "("  shift, and go to state 192


State 168

   61 MinusExpr: T_Minus TypeInfo . "(" Operand ")" "(" Operand ")"

    "("  shift, and go to state 193


State 169

   62 MultExpr: T_Mult TypeInfo . "(" Operand ")" "(" Operand ")"

    "("  shift, and go to state 194


State 170

   63 AshiftExpr: T_Ashift TypeInfo . "(" Operand ")" "(" Operand ")"

    "("  shift, and go to state 195


State 171

   64 SubregExpr: T_Subreg TypeInfo . "(" Operand ")" Integer

    "("  shift, and go to state 196


State 172

   65 CompareExpr: T_Compare TypeInfo . "(" Operand ")" "(" Operand ")"

    "("  shift, and go to state 197


State 173

   53 Expr: "(" PlusExpr ")" .

    $default  reduce using rule 53 (Expr)


State 174

   54 Expr: "(" MinusExpr ")" .

    $default  reduce using rule 54 (Expr)


State 175

   55 Expr: "(" MultExpr ")" .

    $default  reduce using rule 55 (Expr)


State 176

   56 Expr: "(" AshiftExpr ")" .

    $default  reduce using rule 56 (Expr)


State 177

   57 Expr: "(" SubregExpr ")" .

    $default  reduce using rule 57 (Expr)


State 178

   58 Expr: "(" CompareExpr ")" .

    $default  reduce using rule 58 (Expr)


State 179

   28 UseCmd: T_Use "(" T_Reg ":" Flags TypeInfo T_IntConstant ")" .

    $default  reduce using rule 28 (UseCmd)


State 180

   17 Insn: T_Insn T_IntConstant T_IntConstant T_IntConstant "(" MainCmd ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil . ")"

    ")"  shift, and go to state 198


State 181

   74 Condition: T_Lt .

    $default  reduce using rule 74 (Condition)


State 182

   75 Condition: T_Gt .

    $default  reduce using rule 75 (Condition)


State 183

   76 Condition: T_Le .

    $default  reduce using rule 76 (Condition)


State 184

   77 Condition: T_Ge .

    $default  reduce using rule 77 (Condition)


State 185

   78 Condition: T_Eq .

    $default  reduce using rule 78 (Condition)


State 186

   79 Condition: T_Ne .

    $default  reduce using rule 79 (Condition)


State 187

   71 IfThenElse: T_IfThenElse "(" Comparison . ")" "(" Dest ")" "(" Dest ")"

    ")"  shift, and go to state 199


State 188

   73 Comparison: Condition . "(" Operand ")" "(" Operand ")"

    "("  shift, and go to state 200


State 189

   66 JumpInsn: T_JumpInsn T_IntConstant T_IntConstant T_IntConstant "(" T_Set "(" T_Pc ")" "(" Dest ")" ")" . T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" T_RArrow T_IntConstant

    T_StringConstant  shift, and go to state 201


State 190

   82 RetCall: T_CallInsn T_IntConstant T_IntConstant T_IntConstant T_IntConstant "(" T_Set "(" T_Reg ":" TypeInfo T_IntConstant ")" . "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk ")"

    "("  shift, and go to state 202


State 191

   83 NoRetCall: T_CallInsn "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant . ")" ")" ")" "(" T_ConstInt Integer ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk ")"

    ")"  shift, and go to state 203


State 192

   60 PlusExpr: T_Plus TypeInfo "(" . Operand ")" "(" Operand ")"

    T_SymbolRef    shift, and go to state 76
    T_Mem          shift, and go to state 77
    T_Reg          shift, and go to state 78
    T_SiExtend     shift, and go to state 79
    T_IntConstant  shift, and go to state 80
    "-"            shift, and go to state 81

    Integer        go to state 82
    Operand        go to state 204
    IntOperand     go to state 84
    ExprOperand    go to state 85
    ExtendOperand  go to state 86
    LocInfo        go to state 87
    MemType        go to state 88


State 193

   61 MinusExpr: T_Minus TypeInfo "(" . Operand ")" "(" Operand ")"

    T_SymbolRef    shift, and go to state 76
    T_Mem          shift, and go to state 77
    T_Reg          shift, and go to state 78
    T_SiExtend     shift, and go to state 79
    T_IntConstant  shift, and go to state 80
    "-"            shift, and go to state 81

    Integer        go to state 82
    Operand        go to state 205
    IntOperand     go to state 84
    ExprOperand    go to state 85
    ExtendOperand  go to state 86
    LocInfo        go to state 87
    MemType        go to state 88


State 194

   62 MultExpr: T_Mult TypeInfo "(" . Operand ")" "(" Operand ")"

    T_SymbolRef    shift, and go to state 76
    T_Mem          shift, and go to state 77
    T_Reg          shift, and go to state 78
    T_SiExtend     shift, and go to state 79
    T_IntConstant  shift, and go to state 80
    "-"            shift, and go to state 81

    Integer        go to state 82
    Operand        go to state 206
    IntOperand     go to state 84
    ExprOperand    go to state 85
    ExtendOperand  go to state 86
    LocInfo        go to state 87
    MemType        go to state 88


State 195

   63 AshiftExpr: T_Ashift TypeInfo "(" . Operand ")" "(" Operand ")"

    T_SymbolRef    shift, and go to state 76
    T_Mem          shift, and go to state 77
    T_Reg          shift, and go to state 78
    T_SiExtend     shift, and go to state 79
    T_IntConstant  shift, and go to state 80
    "-"            shift, and go to state 81

    Integer        go to state 82
    Operand        go to state 207
    IntOperand     go to state 84
    ExprOperand    go to state 85
    ExtendOperand  go to state 86
    LocInfo        go to state 87
    MemType        go to state 88


State 196

   64 SubregExpr: T_Subreg TypeInfo "(" . Operand ")" Integer

    T_SymbolRef    shift, and go to state 76
    T_Mem          shift, and go to state 77
    T_Reg          shift, and go to state 78
    T_SiExtend     shift, and go to state 79
    T_IntConstant  shift, and go to state 80
    "-"            shift, and go to state 81

    Integer        go to state 82
    Operand        go to state 208
    IntOperand     go to state 84
    ExprOperand    go to state 85
    ExtendOperand  go to state 86
    LocInfo        go to state 87
    MemType        go to state 88


State 197

   65 CompareExpr: T_Compare TypeInfo "(" . Operand ")" "(" Operand ")"

    T_SymbolRef    shift, and go to state 76
    T_Mem          shift, and go to state 77
    T_Reg          shift, and go to state 78
    T_SiExtend     shift, and go to state 79
    T_IntConstant  shift, and go to state 80
    "-"            shift, and go to state 81

    Integer        go to state 82
    Operand        go to state 209
    IntOperand     go to state 84
    ExprOperand    go to state 85
    ExtendOperand  go to state 86
    LocInfo        go to state 87
    MemType        go to state 88


State 198

   17 Insn: T_Insn T_IntConstant T_IntConstant T_IntConstant "(" MainCmd ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" .

    $default  reduce using rule 17 (Insn)


State 199

   71 IfThenElse: T_IfThenElse "(" Comparison ")" . "(" Dest ")" "(" Dest ")"

    "("  shift, and go to state 210


State 200

   73 Comparison: Condition "(" . Operand ")" "(" Operand ")"

    T_SymbolRef    shift, and go to state 76
    T_Mem          shift, and go to state 77
    T_Reg          shift, and go to state 78
    T_SiExtend     shift, and go to state 79
    T_IntConstant  shift, and go to state 80
    "-"            shift, and go to state 81

    Integer        go to state 82
    Operand        go to state 211
    IntOperand     go to state 84
    ExprOperand    go to state 85
    ExtendOperand  go to state 86
    LocInfo        go to state 87
    MemType        go to state 88


State 201

   66 JumpInsn: T_JumpInsn T_IntConstant T_IntConstant T_IntConstant "(" T_Set "(" T_Pc ")" "(" Dest ")" ")" T_StringConstant . ":" T_IntConstant Integer "(" T_Nil ")" T_RArrow T_IntConstant

    ":"  shift, and go to state 212


State 202

   82 RetCall: T_CallInsn T_IntConstant T_IntConstant T_IntConstant T_IntConstant "(" T_Set "(" T_Reg ":" TypeInfo T_IntConstant ")" "(" . T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk ")"

    T_Call  shift, and go to state 213


State 203

   83 NoRetCall: T_CallInsn "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" . ")" ")" "(" T_ConstInt Integer ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk ")"

    ")"  shift, and go to state 214


State 204

   60 PlusExpr: T_Plus TypeInfo "(" Operand . ")" "(" Operand ")"

    ")"  shift, and go to state 215


State 205

   61 MinusExpr: T_Minus TypeInfo "(" Operand . ")" "(" Operand ")"

    ")"  shift, and go to state 216


State 206

   62 MultExpr: T_Mult TypeInfo "(" Operand . ")" "(" Operand ")"

    ")"  shift, and go to state 217


State 207

   63 AshiftExpr: T_Ashift TypeInfo "(" Operand . ")" "(" Operand ")"

    ")"  shift, and go to state 218


State 208

   64 SubregExpr: T_Subreg TypeInfo "(" Operand . ")" Integer

    ")"  shift, and go to state 219


State 209

   65 CompareExpr: T_Compare TypeInfo "(" Operand . ")" "(" Operand ")"

    ")"  shift, and go to state 220


State 210

   71 IfThenElse: T_IfThenElse "(" Comparison ")" "(" . Dest ")" "(" Dest ")"

    T_IfThenElse  shift, and go to state 135
    T_Pc          shift, and go to state 136
    T_LabelRef    shift, and go to state 137

    Dest        go to state 221
    Label       go to state 139
    IfThenElse  go to state 140
    Pc          go to state 141


State 211

   73 Comparison: Condition "(" Operand . ")" "(" Operand ")"

    ")"  shift, and go to state 222


State 212

   66 JumpInsn: T_JumpInsn T_IntConstant T_IntConstant T_IntConstant "(" T_Set "(" T_Pc ")" "(" Dest ")" ")" T_StringConstant ":" . T_IntConstant Integer "(" T_Nil ")" T_RArrow T_IntConstant

    T_IntConstant  shift, and go to state 223


State 213

   82 RetCall: T_CallInsn T_IntConstant T_IntConstant T_IntConstant T_IntConstant "(" T_Set "(" T_Reg ":" TypeInfo T_IntConstant ")" "(" T_Call . "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk ")"

    "("  shift, and go to state 224


State 214

   83 NoRetCall: T_CallInsn "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" . ")" "(" T_ConstInt Integer ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk ")"

    ")"  shift, and go to state 225


State 215

   60 PlusExpr: T_Plus TypeInfo "(" Operand ")" . "(" Operand ")"

    "("  shift, and go to state 226


State 216

   61 MinusExpr: T_Minus TypeInfo "(" Operand ")" . "(" Operand ")"

    "("  shift, and go to state 227


State 217

   62 MultExpr: T_Mult TypeInfo "(" Operand ")" . "(" Operand ")"

    "("  shift, and go to state 228


State 218

   63 AshiftExpr: T_Ashift TypeInfo "(" Operand ")" . "(" Operand ")"

    "("  shift, and go to state 229


State 219

   64 SubregExpr: T_Subreg TypeInfo "(" Operand ")" . Integer

    T_IntConstant  shift, and go to state 80
    "-"            shift, and go to state 81

    Integer  go to state 230


State 220

   65 CompareExpr: T_Compare TypeInfo "(" Operand ")" . "(" Operand ")"

    "("  shift, and go to state 231


State 221

   71 IfThenElse: T_IfThenElse "(" Comparison ")" "(" Dest . ")" "(" Dest ")"

    ")"  shift, and go to state 232


State 222

   73 Comparison: Condition "(" Operand ")" . "(" Operand ")"

    "("  shift, and go to state 233


State 223

   66 JumpInsn: T_JumpInsn T_IntConstant T_IntConstant T_IntConstant "(" T_Set "(" T_Pc ")" "(" Dest ")" ")" T_StringConstant ":" T_IntConstant . Integer "(" T_Nil ")" T_RArrow T_IntConstant

    T_IntConstant  shift, and go to state 80
    "-"            shift, and go to state 81

    Integer  go to state 234


State 224

   82 RetCall: T_CallInsn T_IntConstant T_IntConstant T_IntConstant T_IntConstant "(" T_Set "(" T_Reg ":" TypeInfo T_IntConstant ")" "(" T_Call "(" . T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk ")"

    T_Mem  shift, and go to state 235


State 225

   83 NoRetCall: T_CallInsn "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" . "(" T_ConstInt Integer ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk ")"

    "("  shift, and go to state 236


State 226

   60 PlusExpr: T_Plus TypeInfo "(" Operand ")" "(" . Operand ")"

    T_SymbolRef    shift, and go to state 76
    T_Mem          shift, and go to state 77
    T_Reg          shift, and go to state 78
    T_SiExtend     shift, and go to state 79
    T_IntConstant  shift, and go to state 80
    "-"            shift, and go to state 81

    Integer        go to state 82
    Operand        go to state 237
    IntOperand     go to state 84
    ExprOperand    go to state 85
    ExtendOperand  go to state 86
    LocInfo        go to state 87
    MemType        go to state 88


State 227

   61 MinusExpr: T_Minus TypeInfo "(" Operand ")" "(" . Operand ")"

    T_SymbolRef    shift, and go to state 76
    T_Mem          shift, and go to state 77
    T_Reg          shift, and go to state 78
    T_SiExtend     shift, and go to state 79
    T_IntConstant  shift, and go to state 80
    "-"            shift, and go to state 81

    Integer        go to state 82
    Operand        go to state 238
    IntOperand     go to state 84
    ExprOperand    go to state 85
    ExtendOperand  go to state 86
    LocInfo        go to state 87
    MemType        go to state 88


State 228

   62 MultExpr: T_Mult TypeInfo "(" Operand ")" "(" . Operand ")"

    T_SymbolRef    shift, and go to state 76
    T_Mem          shift, and go to state 77
    T_Reg          shift, and go to state 78
    T_SiExtend     shift, and go to state 79
    T_IntConstant  shift, and go to state 80
    "-"            shift, and go to state 81

    Integer        go to state 82
    Operand        go to state 239
    IntOperand     go to state 84
    ExprOperand    go to state 85
    ExtendOperand  go to state 86
    LocInfo        go to state 87
    MemType        go to state 88


State 229

   63 AshiftExpr: T_Ashift TypeInfo "(" Operand ")" "(" . Operand ")"

    T_SymbolRef    shift, and go to state 76
    T_Mem          shift, and go to state 77
    T_Reg          shift, and go to state 78
    T_SiExtend     shift, and go to state 79
    T_IntConstant  shift, and go to state 80
    "-"            shift, and go to state 81

    Integer        go to state 82
    Operand        go to state 240
    IntOperand     go to state 84
    ExprOperand    go to state 85
    ExtendOperand  go to state 86
    LocInfo        go to state 87
    MemType        go to state 88


State 230

   64 SubregExpr: T_Subreg TypeInfo "(" Operand ")" Integer .

    $default  reduce using rule 64 (SubregExpr)


State 231

   65 CompareExpr: T_Compare TypeInfo "(" Operand ")" "(" . Operand ")"

    T_SymbolRef    shift, and go to state 76
    T_Mem          shift, and go to state 77
    T_Reg          shift, and go to state 78
    T_SiExtend     shift, and go to state 79
    T_IntConstant  shift, and go to state 80
    "-"            shift, and go to state 81

    Integer        go to state 82
    Operand        go to state 241
    IntOperand     go to state 84
    ExprOperand    go to state 85
    ExtendOperand  go to state 86
    LocInfo        go to state 87
    MemType        go to state 88


State 232

   71 IfThenElse: T_IfThenElse "(" Comparison ")" "(" Dest ")" . "(" Dest ")"

    "("  shift, and go to state 242


State 233

   73 Comparison: Condition "(" Operand ")" "(" . Operand ")"

    T_SymbolRef    shift, and go to state 76
    T_Mem          shift, and go to state 77
    T_Reg          shift, and go to state 78
    T_SiExtend     shift, and go to state 79
    T_IntConstant  shift, and go to state 80
    "-"            shift, and go to state 81

    Integer        go to state 82
    Operand        go to state 243
    IntOperand     go to state 84
    ExprOperand    go to state 85
    ExtendOperand  go to state 86
    LocInfo        go to state 87
    MemType        go to state 88


State 234

   66 JumpInsn: T_JumpInsn T_IntConstant T_IntConstant T_IntConstant "(" T_Set "(" T_Pc ")" "(" Dest ")" ")" T_StringConstant ":" T_IntConstant Integer . "(" T_Nil ")" T_RArrow T_IntConstant

    "("  shift, and go to state 244


State 235

   82 RetCall: T_CallInsn T_IntConstant T_IntConstant T_IntConstant T_IntConstant "(" T_Set "(" T_Reg ":" TypeInfo T_IntConstant ")" "(" T_Call "(" T_Mem . ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk ")"

    ":"  shift, and go to state 245


State 236

   83 NoRetCall: T_CallInsn "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" . T_ConstInt Integer ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk ")"

    T_ConstInt  shift, and go to state 246


State 237

   60 PlusExpr: T_Plus TypeInfo "(" Operand ")" "(" Operand . ")"

    ")"  shift, and go to state 247


State 238

   61 MinusExpr: T_Minus TypeInfo "(" Operand ")" "(" Operand . ")"

    ")"  shift, and go to state 248


State 239

   62 MultExpr: T_Mult TypeInfo "(" Operand ")" "(" Operand . ")"

    ")"  shift, and go to state 249


State 240

   63 AshiftExpr: T_Ashift TypeInfo "(" Operand ")" "(" Operand . ")"

    ")"  shift, and go to state 250


State 241

   65 CompareExpr: T_Compare TypeInfo "(" Operand ")" "(" Operand . ")"

    ")"  shift, and go to state 251


State 242

   71 IfThenElse: T_IfThenElse "(" Comparison ")" "(" Dest ")" "(" . Dest ")"

    T_IfThenElse  shift, and go to state 135
    T_Pc          shift, and go to state 136
    T_LabelRef    shift, and go to state 137

    Dest        go to state 252
    Label       go to state 139
    IfThenElse  go to state 140
    Pc          go to state 141


State 243

   73 Comparison: Condition "(" Operand ")" "(" Operand . ")"

    ")"  shift, and go to state 253


State 244

   66 JumpInsn: T_JumpInsn T_IntConstant T_IntConstant T_IntConstant "(" T_Set "(" T_Pc ")" "(" Dest ")" ")" T_StringConstant ":" T_IntConstant Integer "(" . T_Nil ")" T_RArrow T_IntConstant

    T_Nil  shift, and go to state 254


State 245

   82 RetCall: T_CallInsn T_IntConstant T_IntConstant T_IntConstant T_IntConstant "(" T_Set "(" T_Reg ":" TypeInfo T_IntConstant ")" "(" T_Call "(" T_Mem ":" . T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk ")"

    T_QIType  shift, and go to state 255


State 246

   83 NoRetCall: T_CallInsn "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt . Integer ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk ")"

    T_IntConstant  shift, and go to state 80
    "-"            shift, and go to state 81

    Integer  go to state 256


State 247

   60 PlusExpr: T_Plus TypeInfo "(" Operand ")" "(" Operand ")" .

    $default  reduce using rule 60 (PlusExpr)


State 248

   61 MinusExpr: T_Minus TypeInfo "(" Operand ")" "(" Operand ")" .

    $default  reduce using rule 61 (MinusExpr)


State 249

   62 MultExpr: T_Mult TypeInfo "(" Operand ")" "(" Operand ")" .

    $default  reduce using rule 62 (MultExpr)


State 250

   63 AshiftExpr: T_Ashift TypeInfo "(" Operand ")" "(" Operand ")" .

    $default  reduce using rule 63 (AshiftExpr)


State 251

   65 CompareExpr: T_Compare TypeInfo "(" Operand ")" "(" Operand ")" .

    $default  reduce using rule 65 (CompareExpr)


State 252

   71 IfThenElse: T_IfThenElse "(" Comparison ")" "(" Dest ")" "(" Dest . ")"

    ")"  shift, and go to state 257


State 253

   73 Comparison: Condition "(" Operand ")" "(" Operand ")" .

    $default  reduce using rule 73 (Comparison)


State 254

   66 JumpInsn: T_JumpInsn T_IntConstant T_IntConstant T_IntConstant "(" T_Set "(" T_Pc ")" "(" Dest ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil . ")" T_RArrow T_IntConstant

    ")"  shift, and go to state 258


State 255

   82 RetCall: T_CallInsn T_IntConstant T_IntConstant T_IntConstant T_IntConstant "(" T_Set "(" T_Reg ":" TypeInfo T_IntConstant ")" "(" T_Call "(" T_Mem ":" T_QIType . "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk ")"

    "("  shift, and go to state 259


State 256

   83 NoRetCall: T_CallInsn "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer . ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk ")"

    ")"  shift, and go to state 260


State 257

   71 IfThenElse: T_IfThenElse "(" Comparison ")" "(" Dest ")" "(" Dest ")" .

    $default  reduce using rule 71 (IfThenElse)


State 258

   66 JumpInsn: T_JumpInsn T_IntConstant T_IntConstant T_IntConstant "(" T_Set "(" T_Pc ")" "(" Dest ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" . T_RArrow T_IntConstant

    T_RArrow  shift, and go to state 261


State 259

   82 RetCall: T_CallInsn T_IntConstant T_IntConstant T_IntConstant T_IntConstant "(" T_Set "(" T_Reg ":" TypeInfo T_IntConstant ")" "(" T_Call "(" T_Mem ":" T_QIType "(" . T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk ")"

    T_SymbolRef  shift, and go to state 262


State 260

   83 NoRetCall: T_CallInsn "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" . ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk ")"

    ")"  shift, and go to state 263


State 261

   66 JumpInsn: T_JumpInsn T_IntConstant T_IntConstant T_IntConstant "(" T_Set "(" T_Pc ")" "(" Dest ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" T_RArrow . T_IntConstant

    T_IntConstant  shift, and go to state 264


State 262

   82 RetCall: T_CallInsn T_IntConstant T_IntConstant T_IntConstant T_IntConstant "(" T_Set "(" T_Reg ":" TypeInfo T_IntConstant ")" "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef . ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk ")"

    ":"  shift, and go to state 265


State 263

   83 NoRetCall: T_CallInsn "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" ")" . T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk ")"

    T_StringConstant  shift, and go to state 266


State 264

   66 JumpInsn: T_JumpInsn T_IntConstant T_IntConstant T_IntConstant "(" T_Set "(" T_Pc ")" "(" Dest ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" T_RArrow T_IntConstant .

    $default  reduce using rule 66 (JumpInsn)


State 265

   82 RetCall: T_CallInsn T_IntConstant T_IntConstant T_IntConstant T_IntConstant "(" T_Set "(" T_Reg ":" TypeInfo T_IntConstant ")" "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" . T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk ")"

    T_DIType  shift, and go to state 267


State 266

   83 NoRetCall: T_CallInsn "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" ")" T_StringConstant . ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk ")"

    ":"  shift, and go to state 268


State 267

   82 RetCall: T_CallInsn T_IntConstant T_IntConstant T_IntConstant T_IntConstant "(" T_Set "(" T_Reg ":" TypeInfo T_IntConstant ")" "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType . "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk ")"

    "("  shift, and go to state 269


State 268

   83 NoRetCall: T_CallInsn "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" ")" T_StringConstant ":" . T_IntConstant Integer "(" T_Nil ")" "(" Junk ")"

    T_IntConstant  shift, and go to state 270


State 269

   82 RetCall: T_CallInsn T_IntConstant T_IntConstant T_IntConstant T_IntConstant "(" T_Set "(" T_Reg ":" TypeInfo T_IntConstant ")" "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" . T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk ")"

    T_StringConstant  shift, and go to state 271


State 270

   83 NoRetCall: T_CallInsn "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" ")" T_StringConstant ":" T_IntConstant . Integer "(" T_Nil ")" "(" Junk ")"

    T_IntConstant  shift, and go to state 80
    "-"            shift, and go to state 81

    Integer  go to state 272


State 271

   82 RetCall: T_CallInsn T_IntConstant T_IntConstant T_IntConstant T_IntConstant "(" T_Set "(" T_Reg ":" TypeInfo T_IntConstant ")" "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant . ")" ")" ")" "(" T_ConstInt Integer ")" ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk ")"

    ")"  shift, and go to state 273


State 272

   83 NoRetCall: T_CallInsn "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" ")" T_StringConstant ":" T_IntConstant Integer . "(" T_Nil ")" "(" Junk ")"

    "("  shift, and go to state 274


State 273

   82 RetCall: T_CallInsn T_IntConstant T_IntConstant T_IntConstant T_IntConstant "(" T_Set "(" T_Reg ":" TypeInfo T_IntConstant ")" "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" . ")" ")" "(" T_ConstInt Integer ")" ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk ")"

    ")"  shift, and go to state 275


State 274

   83 NoRetCall: T_CallInsn "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" ")" T_StringConstant ":" T_IntConstant Integer "(" . T_Nil ")" "(" Junk ")"

    T_Nil  shift, and go to state 276


State 275

   82 RetCall: T_CallInsn T_IntConstant T_IntConstant T_IntConstant T_IntConstant "(" T_Set "(" T_Reg ":" TypeInfo T_IntConstant ")" "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" . ")" "(" T_ConstInt Integer ")" ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk ")"

    ")"  shift, and go to state 277


State 276

   83 NoRetCall: T_CallInsn "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil . ")" "(" Junk ")"

    ")"  shift, and go to state 278


State 277

   82 RetCall: T_CallInsn T_IntConstant T_IntConstant T_IntConstant T_IntConstant "(" T_Set "(" T_Reg ":" TypeInfo T_IntConstant ")" "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" . "(" T_ConstInt Integer ")" ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk ")"

    "("  shift, and go to state 279


State 278

   83 NoRetCall: T_CallInsn "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" . "(" Junk ")"

    "("  shift, and go to state 280


State 279

   82 RetCall: T_CallInsn T_IntConstant T_IntConstant T_IntConstant T_IntConstant "(" T_Set "(" T_Reg ":" TypeInfo T_IntConstant ")" "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" . T_ConstInt Integer ")" ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk ")"

    T_ConstInt  shift, and go to state 281


State 280

   83 NoRetCall: T_CallInsn "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" . Junk ")"

    T_ExprList  shift, and go to state 282

    Junk  go to state 283


State 281

   82 RetCall: T_CallInsn T_IntConstant T_IntConstant T_IntConstant T_IntConstant "(" T_Set "(" T_Reg ":" TypeInfo T_IntConstant ")" "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt . Integer ")" ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk ")"

    T_IntConstant  shift, and go to state 80
    "-"            shift, and go to state 81

    Integer  go to state 284


State 282

   84 Junk: T_ExprList . "(" T_Use "(" T_Reg ":" TypeInfo T_IntConstant ")" ")" "(" T_Nil ")"

    "("  shift, and go to state 285


State 283

   83 NoRetCall: T_CallInsn "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk . ")"

    ")"  shift, and go to state 286


State 284

   82 RetCall: T_CallInsn T_IntConstant T_IntConstant T_IntConstant T_IntConstant "(" T_Set "(" T_Reg ":" TypeInfo T_IntConstant ")" "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer . ")" ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk ")"

    ")"  shift, and go to state 287


State 285

   84 Junk: T_ExprList "(" . T_Use "(" T_Reg ":" TypeInfo T_IntConstant ")" ")" "(" T_Nil ")"

    T_Use  shift, and go to state 288


State 286

   83 NoRetCall: T_CallInsn "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk ")" .

    $default  reduce using rule 83 (NoRetCall)


State 287

   82 RetCall: T_CallInsn T_IntConstant T_IntConstant T_IntConstant T_IntConstant "(" T_Set "(" T_Reg ":" TypeInfo T_IntConstant ")" "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" . ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk ")"

    ")"  shift, and go to state 289


State 288

   84 Junk: T_ExprList "(" T_Use . "(" T_Reg ":" TypeInfo T_IntConstant ")" ")" "(" T_Nil ")"

    "("  shift, and go to state 290


State 289

   82 RetCall: T_CallInsn T_IntConstant T_IntConstant T_IntConstant T_IntConstant "(" T_Set "(" T_Reg ":" TypeInfo T_IntConstant ")" "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" ")" . ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk ")"

    ")"  shift, and go to state 291


State 290

   84 Junk: T_ExprList "(" T_Use "(" . T_Reg ":" TypeInfo T_IntConstant ")" ")" "(" T_Nil ")"

    T_Reg  shift, and go to state 292


State 291

   82 RetCall: T_CallInsn T_IntConstant T_IntConstant T_IntConstant T_IntConstant "(" T_Set "(" T_Reg ":" TypeInfo T_IntConstant ")" "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" ")" ")" . T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk ")"

    T_StringConstant  shift, and go to state 293


State 292

   84 Junk: T_ExprList "(" T_Use "(" T_Reg . ":" TypeInfo T_IntConstant ")" ")" "(" T_Nil ")"

    ":"  shift, and go to state 294


State 293

   82 RetCall: T_CallInsn T_IntConstant T_IntConstant T_IntConstant T_IntConstant "(" T_Set "(" T_Reg ":" TypeInfo T_IntConstant ")" "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" ")" ")" T_StringConstant . ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk ")"

    ":"  shift, and go to state 295


State 294

   84 Junk: T_ExprList "(" T_Use "(" T_Reg ":" . TypeInfo T_IntConstant ")" ")" "(" T_Nil ")"

    T_SIType    shift, and go to state 111
    T_DIType    shift, and go to state 112
    T_QIType    shift, and go to state 113
    T_CCType    shift, and go to state 114
    T_CCZType   shift, and go to state 115
    T_CCGCType  shift, and go to state 116

    TypeInfo  go to state 296


State 295

   82 RetCall: T_CallInsn T_IntConstant T_IntConstant T_IntConstant T_IntConstant "(" T_Set "(" T_Reg ":" TypeInfo T_IntConstant ")" "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" ")" ")" T_StringConstant ":" . T_IntConstant Integer "(" T_Nil ")" "(" Junk ")"

    T_IntConstant  shift, and go to state 297


State 296

   84 Junk: T_ExprList "(" T_Use "(" T_Reg ":" TypeInfo . T_IntConstant ")" ")" "(" T_Nil ")"

    T_IntConstant  shift, and go to state 298


State 297

   82 RetCall: T_CallInsn T_IntConstant T_IntConstant T_IntConstant T_IntConstant "(" T_Set "(" T_Reg ":" TypeInfo T_IntConstant ")" "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" ")" ")" T_StringConstant ":" T_IntConstant . Integer "(" T_Nil ")" "(" Junk ")"

    T_IntConstant  shift, and go to state 80
    "-"            shift, and go to state 81

    Integer  go to state 299


State 298

   84 Junk: T_ExprList "(" T_Use "(" T_Reg ":" TypeInfo T_IntConstant . ")" ")" "(" T_Nil ")"

    ")"  shift, and go to state 300


State 299

   82 RetCall: T_CallInsn T_IntConstant T_IntConstant T_IntConstant T_IntConstant "(" T_Set "(" T_Reg ":" TypeInfo T_IntConstant ")" "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" ")" ")" T_StringConstant ":" T_IntConstant Integer . "(" T_Nil ")" "(" Junk ")"

    "("  shift, and go to state 301


State 300

   84 Junk: T_ExprList "(" T_Use "(" T_Reg ":" TypeInfo T_IntConstant ")" . ")" "(" T_Nil ")"

    ")"  shift, and go to state 302


State 301

   82 RetCall: T_CallInsn T_IntConstant T_IntConstant T_IntConstant T_IntConstant "(" T_Set "(" T_Reg ":" TypeInfo T_IntConstant ")" "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" ")" ")" T_StringConstant ":" T_IntConstant Integer "(" . T_Nil ")" "(" Junk ")"

    T_Nil  shift, and go to state 303


State 302

   84 Junk: T_ExprList "(" T_Use "(" T_Reg ":" TypeInfo T_IntConstant ")" ")" . "(" T_Nil ")"

    "("  shift, and go to state 304


State 303

   82 RetCall: T_CallInsn T_IntConstant T_IntConstant T_IntConstant T_IntConstant "(" T_Set "(" T_Reg ":" TypeInfo T_IntConstant ")" "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil . ")" "(" Junk ")"

    ")"  shift, and go to state 305


State 304

   84 Junk: T_ExprList "(" T_Use "(" T_Reg ":" TypeInfo T_IntConstant ")" ")" "(" . T_Nil ")"

    T_Nil  shift, and go to state 306


State 305

   82 RetCall: T_CallInsn T_IntConstant T_IntConstant T_IntConstant T_IntConstant "(" T_Set "(" T_Reg ":" TypeInfo T_IntConstant ")" "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" . "(" Junk ")"

    "("  shift, and go to state 307


State 306

   84 Junk: T_ExprList "(" T_Use "(" T_Reg ":" TypeInfo T_IntConstant ")" ")" "(" T_Nil . ")"

    ")"  shift, and go to state 308


State 307

   82 RetCall: T_CallInsn T_IntConstant T_IntConstant T_IntConstant T_IntConstant "(" T_Set "(" T_Reg ":" TypeInfo T_IntConstant ")" "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" . Junk ")"

    T_ExprList  shift, and go to state 282

    Junk  go to state 309


State 308

   84 Junk: T_ExprList "(" T_Use "(" T_Reg ":" TypeInfo T_IntConstant ")" ")" "(" T_Nil ")" .

    $default  reduce using rule 84 (Junk)


State 309

   82 RetCall: T_CallInsn T_IntConstant T_IntConstant T_IntConstant T_IntConstant "(" T_Set "(" T_Reg ":" TypeInfo T_IntConstant ")" "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk . ")"

    ")"  shift, and go to state 310


State 310

   82 RetCall: T_CallInsn T_IntConstant T_IntConstant T_IntConstant T_IntConstant "(" T_Set "(" T_Reg ":" TypeInfo T_IntConstant ")" "(" T_Call "(" T_Mem ":" T_QIType "(" T_SymbolRef ":" T_DIType "(" T_StringConstant ")" ")" ")" "(" T_ConstInt Integer ")" ")" ")" T_StringConstant ":" T_IntConstant Integer "(" T_Nil ")" "(" Junk ")" .

    $default  reduce using rule 82 (RetCall)
